var search_data = {"index":{"searchIndex":["actioncontroller","base","activerecord","base","actsaselasticmodel","actsasspammable","user","actsasuuidable","admin","delayedjobscontroller","admincontroller","ambidextrous","annotation","annotationscontroller","announcement","announcementscontroller","apiendpoint","apiendpointcache","appleappsiteassociationcontroller","applicationcontroller","applicationhelper","applicationrecord","array","assessment","assessmentsection","assessmentsectionscontroller","assessmentscontroller","atlas","atlasalteration","atlasescontroller","authenticatedsystem","authenticatedtesthelper","benchmarker","bootstrapformbuilder","bulkobservationfile","bulkobservationexception","calendarscontroller","catalogueoflife","checklist","checklistscontroller","classmatchers","bea","behavelikea","cloudfrontaclupdater","cloudfrontinvalidator","cloudfrontlogparser","color","comment","commentsweeper","commentscontroller","completeset","completesetscontroller","compressedyamlcolumn","computervisiondemocontroller","computervisiondemoupload","computervisiondemouploadscontroller","conabioservice","conservationstatus","conservationstatusescontroller","conservationstatuseshelper","controlledterm","controlledtermlabel","controlledtermlabelscontroller","controlledtermtaxon","controlledtermvalue","controlledtermvaluescontroller","controlledtermscontroller","curatorapplicationscontroller","customlogformatter","customproject","customprojectscontroller","djlogstashplugin","djmakaraplugin","darwincore","archive","cores","descriptor","eolmedia","instancemethods","helpers","metadata","observationfields","instancemethods","occurrence","instancemethods","projectobservations","instancemethods","simplemultimedia","instancemethods","taxon","instancemethods","user","instancemethods","vernacularname","instancemethods","datapartner","datapartnerlinkers","calflora","datapartnerlinker","datapartnerlinkererror","gbif","marylandbiodiversityproject","datapartnerscontroller","defaultformbuilder","inatinstancetag","deletedobservation","deletedphoto","deletedsound","deleteduser","denormalizer","devise","strategies","applicationjsonwebtoken","jsonwebtoken","devisemailer","donatecontroller","elasticmodel","emailsuppression","emailer","eolcontroller","eolphoto","eolservice","errorscontroller","exifmetadata","extractionerror","explodedatlasplace","explodedatlasplacescontroller","externaltaxon","facebookcontroller","facebookhelper","facebookphoto","fakeview","fileextension","fileprefix","flag","flagscontroller","flagshelper","flickrcache","flickrcontroller","flickridentity","flickrphoto","flowtaskscontroller","flowtaskshelper","frequencycell","frequencycellmonthtaxon","friendship","friendshipscontroller","gbifservice","goal","goalcontribution","goalparticipant","goalrule","gonzo","acts","flaggable","classmethods","instancemethods","singletonmethods","googlephotosapi","googlerecaptcha","googlestreetviewphoto","guide","guideeolupdateflowtask","guidephoto","guidephotoscontroller","guiderange","guiderangescontroller","guidesection","guidesectionscontroller","guidetaxacontroller","guidetaxon","guideuser","guidescontroller","guideshelper","hassubscribers","classmethods","instancemethods","helpcontroller","i18nextensions","inatapiservice","inataws","identification","identificationscontroller","inatcontenttypedetector","jsonwebtoken","lifelistscontroller","list","listrule","listedtaxacontroller","listedtaxafromcsvflowtask","listedtaxahelper","listedtaxon","listedtaxonalteration","listscontroller","localphoto","localsound","message","messagescontroller","metaservice","modeladapter","modelattributechange","moderatoraction","moderatoractionscontroller","moderatornote","moderatornotescontroller","mushroomobserverimportflowtask","forbiddenerror","mushroomobserverimportflowtaskerror","timeouterror","toomanyrequestserror","nameprovidererror","newzealandorganismsregister","oauthapplication","oauthapplicationscontroller","oauthauthorizationscontroller","oauthauthorizedapplicationscontroller","oauthtokenscontroller","object","observation","observationfield","observationfieldvalue","observationfieldvaluescontroller","observationfieldscontroller","observationlink","observationphoto","observationphotoscontroller","observationreview","observationsearch","classmethods","observationsound","observationsoundscontroller","observationsweeper","observationscontroller","observationsexportflowtask","observationsexportdeleted","observationsexporterror","observationsexportnotsaved","observationshelper","observationsplace","oldpreferences","paperclip","deanimator","metadatafilter","rotator","password","passwordmailer","photo","missingphotoerror","photometadata","photosweeper","photoscontroller","picasa","picasacontroller","picasaphoto","place","placedenormalizer","placegeometry","placesources","placesweeper","placetaxonname","placescontroller","placeshelper","placessite","post","postscontroller","privileges","classmethods","controller","classmethods","instancemethods","project","projectaggregatoralreadyrunning","projectasset","projectassetscontroller","projectlist","projectobservation","projectobservationfield","projectobservationrule","projectobservationscontroller","projectuser","projectuserinvitation","projectuserinvitationscontroller","projectuserrule","projectuserscontroller","projectscontroller","providerauthorization","providerauthorizationscontroller","provideroauthcontroller","badassertiontypeerror","childwithoutpermissionerror","suspendederror","qualitymetric","qualitymetricscontroller","rakismet","ratatosk","nameproviders","colnameprovider","coltaxonadapter","coltaxonnameadapter","nzornameprovider","nzortaxonadapter","nzortaxonnameadapter","ubionameprovider","ubiotaxonadapter","ubiotaxonnameadapter","ratatosk","ratatoskgrafterror","relationshipscontroller","role","rubaidh","googleanalyticsmixin","rubypicasa","album","author","base","photo","license","point","photourl","picasaerror","picasatokenerror","recentphotos","search","thumbnailurl","user","rule","ruler","classmethods","savedlocation","savedlocationscontroller","searchcontroller","shared","filtersmodule","guidemodule","licensemodule","classmethods","listsmodule","mailermodule","sweepersmodule","touchesobservationmodule","wikipediamodule","simplifiedtreemilestonetaxon","site","siteadmin","siteadminscontroller","siteconfig","sitedataexporter","sitefeaturedproject","sitestatistic","sitescontroller","sound","soundcloudidentity","soundcloudsound","soundcloudsoundscontroller","soundscontroller","source","sourcescontroller","sphericalmercator","statscontroller","subscription","subscriptionscontroller","taxacontroller","taxahelper","taxon","taxonadaptererror","taxonchange","activechildrenerror","permissionerror","ranklevelerror","taxonchangetaxacontroller","taxonchangetaxon","taxonchangescontroller","taxoncurator","taxoncuratorscontroller","taxondescribers","amphibiaweb","base","conabio","eol","inaturalist","wikipedia","wikipediaes","wikipediafr","taxondescription","taxondrop","taxonframework","taxonframeworkrelationship","taxonframeworkrelationshipscontroller","taxonframeworkscontroller","taxonlink","taxonlinkscontroller","taxonmerge","taxonname","taxonnameadaptererror","taxonnamesweeper","taxonnamescontroller","taxonphoto","taxonphotoscontroller","taxonrange","taxonrangescontroller","taxonrangeshelper","taxonscheme","taxonschemetaxacontroller","taxonschemetaxon","taxonschemescontroller","taxonsplit","taxonstage","taxonswap","taxonsweeper","timezonegeometry","translationscontroller","trip","trippurpose","triptaxon","tripscontroller","ubioauthorizationerror","ubioconnectionerror","ubioservice","updateaction","user","userblock","userblockscontroller","usermute","usermutescontroller","userparent","userparentscontroller","userprivilege","usersweeper","users","passwordscontroller","registrationscontroller","sessionscontroller","userscontroller","usershelper","votescontroller","welcomecontroller","wikipage","wikipageattachment","wikipageversion","wikipagescontroller","wikipageshelper","wikimediacommonscontroller","wikimediacommonsphoto","wikimediacommonsservice","wikipediaservice","yearstatistic","createdate()","owner()","usageterms()","abbreviate_binomial()","absent_only_if_not_confirming_observations()","accepted?()","accepted_name()","accepted_name_hxml()","accepted_name_hxml()","accessuri()","access_denied()","accumulation()","activated_protected_attributes_editable_by?()","active()","active?()","active_children_conflict?()","active_for_authentication?()","active_ids()","active_in_placement()","active_parent_if_active()","activity_snippet()","acts_as_flaggable()","acts_as_spammable()","adapt()","adapt()","adapt()","adapt()","adapt()","adapt()","adapt()","adapt()","adapted?()","add()","add_admins()","add_batch()","add_color_tags()","add_color_tags()","add_comment()","add_comment()","add_custom_error()","add_flag()","add_friend()","add_from_list()","add_from_observations_now()","add_google_analytics_code()","add_input_taxon()","add_input_taxon()","add_input_taxon()","add_input_taxon()","add_new_listed_taxa()","add_observed_taxa()","add_output_taxon()","add_output_taxon()","add_output_taxon()","add_output_taxon()","add_output_taxon()","add_owner_as_project_user()","add_provider_auth()","add_rank_tag()","add_role()","add_tags()","add_tags_for_rank()","add_taxa_from_eol_collection()","add_taxa_from_names()","add_taxa_from_observations()","add_taxa_from_observations()","add_taxa_from_source_url()","add_taxon()","add_taxon()","add_taxon_batch()","add_to_intersecting_places()","adjust_initial_bounds()","admin?()","affiliation()","after_create()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_merge()","after_save()","after_save()","after_update()","after_update()","after_update()","after_update()","after_update()","aggregate_observations()","aggregate_observations_for()","aggregation_allowed?()","aggregation_preference_allowed?()","agree()","album()","album()","album()","album_by_title()","albums()","albums()","all_names()","all_rights_reserved?()","allow_some_licenses()","allowed?()","allowed_values_has_pipes()","alter_atlas_presence()","analyze_id_destinations()","analyze_ids()","ancestor_of?()","ancestor_place_ids()","ancestry()","ancestry_and_active_if_taxon_framework()","annotation_attribute_and_value()","api_endpoint()","api_endpoint()","api_key()","api_key_present()","api_token()","api_token()","app_owner_application()","app_owner_application()","append_bounds_to_map_tag_attrs()","append_geom()","append_observation_layers()","append_place_layers()","append_subscribers()","append_taxon_layers()","applicable_to_taxon()","applicationtoken()","application_id_to_index()","apply_orphan_strategy()","apply_orphan_strategy()","apply_pagination_options()","appropriate?()","approved_create_params()","approved_params()","approved_params()","approved_params()","archives()","arel_attributes_to_es_filters()","as_csv()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_indexed_json()","as_json()","as_json()","assertion()","asset_path()","assign_auth_info()","associated_place_ids()","atlased?()","attribute_belongs_to_taxon()","attribute_is_an_attribute()","attribution()","attribution()","attribution()","attribution()","attribution()","attribution()","attribution_name()","attribution_name()","attribution_name()","auth_callback_test()","auth_url_for()","authenticate()","authenticate!()","authenticate!()","authorize_as()","authorized?()","auto_removable_from_check_list?()","auto_subscribes()","auto_summary()","autocomplete()","autocomplete()","automatable?()","automatable?()","automatable_for_output?()","base_scope()","basename()","basename_for_site()","basisofrecord()","batch_edit()","bbox_contains_lat_lng?()","bbox_contains_lat_lng_acc?()","bbox_privately_contains_observation?()","bbox_publicly_contains_observation?()","be_a()","be_an()","before_create()","before_edit()","behave_like_a()","behave_like_an()","benchmark()","benchmark()","benchmark()","best_available_url()","best_url()","bioblitz?()","block()","blocked_by?()","blocks_spam()","bold()","bootstraptargetid()","bounding_box()","bounding_box_geojson()","bounds()","bounds()","bounds()","bounds?()","branding_statement()","browse()","browse()","browse()","browse_photos()","bubble_up_establishment_means()","bud_off_child_taxon_framework()","build_observation_fields_from_tags()","build_taxon_rule()","bulk_insert_subscribers()","bulk_observation_error()","bulk_observation_success()","bulk_template()","by_login()","by_login()","by_login()","by_login()","by_login()","by_login()","by_login()","by_login_all()","by_taxon()","cache()","cache_columns()","cache_columns_options()","cached?()","cached_ancestor()","cached_atlas_presence_places()","cached_guide()","cached_slug()","calculate_bbox_area()","calculate_mappable()","calculate_public_positional_accuracy()","calendar()","call()","can_be_converted_to_collection_project?()","can_be_grafted_to()","can_only_be_featured_if_photos()","can_set_as_primary?()","canada_150()","cannot_edit_parent_during_content_freeze()","cannot_subscribe_to_north_america()","cannot_suspend_staff()","cant_block_staff()","cant_block_yourself()","cant_mute_yourself()","capitalize_name()","capitalize_name()","capitalize_piece()","capitalize_scientific_name()","capitalize_scientific_name()","captive()","captive?()","captive_cultivated()","captive_cultivated?()","captive_flag()","captive_flag=()","casual?()","catalognumber()","catalognumber()","catch_and_release()","change_admin()","change_photo_bucket_if_needed()","change_photo_bucket_if_needed()","change_role()","char_wrap()","check()","check_accepted_actions()","check_default_check_list()","check_for_completion!()","check_if_covered()","check_list_editability()","check_other_taxon_framework_relationships()","check_primary_listing()","check_radio_field()","check_recent_probable_spammers()","check_resolved()","check_role()","check_spam()","check_suspended_by_user()","check_taxon_curators()","check_taxon_framework_relationships()","check_user_last_active()","child_without_permission?()","children()","children()","choose_cbank_id()","choose_common_name()","choose_default_name()","choose_scientific_name()","citation_for()","citation_object()","cite()","clash_analysis()","clashes()","clean_geometry()","clean_html()","clear_caches()","clear_operand()","clear_warnings_for_url()","client_for_user()","cloudfront_invalidate()","cnc2016()","cnc2017()","cnc2017_stats()","collate_errors()","collectioncode()","collection_project_changed_for_trusting_member()","collection_projects()","collection_search_parameters()","colors_for_taxa()","commas_and()","commit()","commit()","commit()","commit()","commit_for_user()","commit_records()","commit_records()","commit_records()","commit_records_job()","commit_records_later()","committable_by?()","committed?()","common_name()","common_name()","common_name_string()","common_taxon_name()","community_supported_id?()","community_taxon_at_family_or_lower?()","community_taxon_at_species_or_lower?()","community_taxon_below_family?()","community_taxon_nodes()","community_taxon_rejected?()","community_taxon_summary()","comname_taxon()","compact()","compact_date()","compact_locales()","compare()","compare()","complete_species_count()","component_cache_key()","component_cache_key()","components_of_class()","components_with_assoc()","config()","confirm()","confirm_leave()","conservation_status_code()","conservation_status_name()","contact()","contains_lat_lng?()","content_flagged_as_spam()","contributor()","contributors()","controlled_attribute_label()","controlled_value_label()","controller()","convert_cloudfront_log()","convert_cloudfront_logs_to_logstash_format()","convert_collection_project_to_traditional_project()","convert_properties_for_collection_project()","convert_to_collection()","convert_to_collection_project()","convert_to_traditional()","coordinateuncertaintyinmeters()","coordinate_system_select_options()","coordinate_systems()","coordinates_changed?()","coordinates_obscured()","coordinates_obscured?()","coordinates_private?()","coordinates_shareable_by_project_curators?()","coordinates_viewable_by?()","coords()","copyrighted?()","core_id()","core_id()","could_be_public()","count()","count_flags_with_flag()","count_taxa_in_rank()","countrycode()","countrycode()","counts_for_users()","cover_dimensions()","covers?()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_annotation()","create_app_owner_application()","create_callback()","create_community_goal_participants()","create_country_records_from_lexicons()","create_deleted_observation()","create_deleted_sound()","create_deleted_user()","create_from_omniauth()","create_geom_from_kml_attachment()","create_guide_user()","create_kml_attachment()","create_matching_taxon_name()","create_observation_review()","create_observation_review()","create_photo_identity()","create_project_rule()","create_sound_identity()","create_subscription_after_update()","create_the_project_list()","create_update_for_user()","created()","created()","created()","created()","created()","creative_commons?()","creator()","creator()","css?()","csv_archive()","curated_by?()","curated_by?()","curated_taxon_framework?()","curation()","curation()","curation()","curator_application()","curator_of?()","curator_required()","curators()","current_preferences()","current_synonymous_taxa()","current_synonymous_taxa_from_split()","current_synonymous_taxon()","current_url()","current_user()","current_user()","current_user=()","current_user_curates_taxon?()","custom_email()","custom_errors()","dashboard()","dashboard_updates()","data()","datatype()","data_for_name()","data_objects()","data_objects_from_page()","datasetname()","dateidentified()","date_details()","date_observed_must_be_before_date_created()","datetime()","decimallatitude()","decimallongitude()","decode()","decodeapplication()","dedupe_for_user()","default()","default_guide_photo()","default_json_options()","default_json_options()","default_json_options()","default_json_options()","default_json_options()","default_json_options()","default_name()","default_observation_precision()","default_photo()","default_taxon_name()","default_url_options()","deletable_by?()","deletable_by?()","deletable_by?()","delete()","delete_and_purge()","delete_batch()","delete_observations_places()","delete_project_observations_on_leave_project()","delete_subscriptions()","delete_update_actions()","deleteable_by?()","deleted_users()","deliver_confirmation_email_if_donor_verified()","deliver_email()","denormalize()","derive_missing_values()","derivedfrom()","desc()","descendant_conditions()","descendant_conditions()","descendant_of?()","descendants_count()","describe()","describe()","describe()","describe()","describe()","describe()","describe()","describe()","describer_name()","describer_name()","describer_name()","describer_name()","describer_name()","describer_name()","description()","descriptor()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_all_alterations()","destroy_annotation()","destroy_friendships()","destroy_messages_by_suspended_user()","destroy_orphan_photo()","destroy_orphan_photo()","destroy_orphan_photo()","destroy_orphans()","destroy_orphans()","destroy_photo_identity()","destroy_project_rule()","destroy_project_rules()","destroy_project_rules()","destroy_project_rules()","destroy_range?()","destroy_relevant_listings()","destroy_sound_identity()","destroy_synonyms()","destroy_updates()","destroy_user_content()","detect()","detect_clashes()","device_name()","device_url()","devise_mail()","dismiss()","dismissed_by?()","display_donor_since()","display_list_title()","display_name()","display_name()","display_title()","distinct_taxon()","dom_id()","donor?()","donor?()","donors()","double_check_index()","downcase_path()","download()","download()","download_cloudfront_log()","download_remote_icon()","draft?()","draft?()","dump()","duplicate()","dwc_creator()","dwc_filter_text()","dwc_license()","dwc_license()","dwc_source()","dwc_taxon()","dwc_type()","dwc_use_community_taxon()","dwca_frequency_allowed()","each_taxon_batch_with_index()","earliest_and_latest_ids()","earned_coordinate_access?()","earned_organizer?()","earned_speech?()","earns_privilege()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit_after_auth()","edit_allowed?()","edit_batch()","edit_photos()","edit_post_path()","editable?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","editable_by?()","elastic_delete!()","elastic_delete_by_ids!()","elastic_index!()","elastic_index!()","elastic_paginate()","elastic_prune()","elastic_query()","elastic_search()","elastic_sync()","elastic_taxon_leaf_counts()","elastic_taxon_leaf_ids()","elastic_user_observation_counts()","elastic_user_taxon_counts()","elastic_user_taxon_counts_batch()","elasticsearch_is_running?()","elasticsearch_url()","email=()","email_does_not_belong_to_another_user()","email_export()","email_required?()","email_suppressed_in_group?()","email_updates()","email_updates_to_user()","email_user()","enable_replica()","encode()","end_of_month()","end_time=()","ended?()","endemic?()","englishize_month_abbrevs_for_locale()","enqueue_options()","enqueue_photo_bucket_moving_jobs()","ensure_parent_ancestry_in_ancestry()","ensure_user_is_current_user_or_admin()","envelope_filter()","eol()","eol_page_id()","eol_service()","error_404()","error_422()","error_500()","errors_for_hidden_fields()","est_max_obs_distances()","establishment_blob()","establishment_means_allowed()","establishment_means_description()","establishment_means_in_place?()","establishment_means_label()","eventdate()","eventtime()","event_ended?()","event_in_progress?()","event_started?()","eventbrite_id()","existing_comprehensive_list()","existing_comprehensive_listed_taxon()","expire_caches()","expire_caches()","expire_caches()","expire_caches()","expire_caches_for()","expire_listed_taxa()","expire_listed_taxon()","expire_taxon()","export()","export()","export()","export()","export_columns()","export_output()","export_path()","export_taxa()","extension_paths()","extract()","extract_dimensions()","extract_metadata()","extract_metadata()","facebook_albums()","facebook_api()","facebook_friends()","facebook_groups()","facebook_identity()","facebook_token()","failed()","failure()","failure_message()","failure_message()","fake_environment_variables()","fake_instance()","fake_view()","family()","family()","faves_count()","favicon_url_for()","feature()","feature_test()","feed()","fetch()","fetch_from_fb_group()","fetch_request_uri()","fetch_with_redirects()","fieldid()","fieldname()","field_value_example()","fields()","fields_addable_by?()","file=()","file=()","file_names()","find()","find()","find()","find()","find()","find_batched_records_of()","find_by_path()","find_class_name()","find_duplicates()","find_existing_taxon()","find_existing_taxon()","find_external()","find_flaggable()","find_flags_by_user()","find_flags_by_user()","find_flags_for()","find_flags_for_flaggable()","find_for_authentication()","find_from_omniauth()","find_lexicons_by_translation()","find_listed_taxa_and_ancestry_as_hashes()","find_listed_taxa_and_ancestry_on_other_lists_as_hashes()","find_observations_of()","find_observed_and_total_for_project()","find_single()","find_taxon_framework_relationship()","find_user()","first_improving_identification()","first_stat()","first_term_by_label()","first_with_attributes()","fix()","fix_annotation_after_update()","flag_actions()","flag_content()","flag_content_author()","flag_flagger()","flag_not_about_duplicate()","flag_resolution()","flaggable_content_viewable_by?()","flaggable_edit()","flaggable_type_valid()","flaggable_user()","flaggable_with_body()","flagged()","flagged_object()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flagged_with()","flags_on_spam_content()","flexible_post_path()","flexible_post_url()","flickr_buddyicon()","flickr_photos_tagged()","flickr_tagger()","flickraw_for_user()","flow_task_redirect_url()","followees()","followers()","followers()","following()","for_each_observation()","for_project_user()","for_user()","forget()","forgot_password()","form_field()","form_field()","format()","format()","formatted_error_sentence_for()","formatted_user_text()","friend_button()","friend_link()","friends_observations()","friends_with?()","from_eol_data_object()","from_ll_to_pixel()","from_ll_to_world_coordinate()","from_observation_params()","from_pixel_to_ll()","from_user_copy()","furtherinformationurl()","gbif_lifestage()","gbif_sex()","generate()","generate()","generate_bulk_upload_template()","generate_csv()","generate_csv()","generate_csv()","generate_csv()","generate_csv_cache_key()","generate_csv_for()","generate_csv_for_cache_key()","generate_dwca()","generate_dwcas()","generate_dwcas_with_logger()","generate_for_site_year()","generate_for_user_year()","generate_for_year()","generate_ngz()","generate_ngz_cache_key()","generate_ngz_if_necessary()","generate_ngz_later()","generate_ranked_ancestors()","generate_shareable_image()","generate_shareable_image_no_obs()","generate_shareable_image_obs_grid()","generate_stats_for_date_range()","generate_stats_for_day()","generate_year()","generating()","genus()","genus()","geodeticdatum()","geoip_lookup()","geom()","geom_geojson()","geom_in_elastic_index?()","geometry()","geoprivacy()","geoprivacy_obscured?()","geoprivacy_private?()","geoprivacy_with_consistent_case()","georeferenced?()","georeferenced?()","get()","get()","get_api_response()","get_api_response()","get_api_response()","get_api_response()","get_api_response()","get_api_response()","get_api_response()","get_atlas_presence_place_listed_taxa()","get_calflora_rows()","get_community_taxon()","get_complete_taxon_framework_for_internode_or_root()","get_current_place_ids_to_refresh()","get_defaults_for_taxon_place()","get_defaults_for_taxon_place()","get_describer()","get_downstream_taxon_frameworks()","get_downstream_taxon_frameworks_count()","get_eol_page()","get_exploded_place_ids_to_include_and_exclude()","get_flaggable_user()","get_flagged_taxa()","get_flagged_taxa_count()","get_flickraw()","get_gbif_id()","get_graft_point_for()","get_id_count_and_obs()","get_internal_taxa_covered_by()","get_internal_taxa_covered_by_taxon_framework()","get_is_valid()","get_is_valid()","get_is_valid()","get_json()","get_keepers()","get_lat_lon_from_ip()","get_lat_lon_from_ip_if_last_ip_changed()","get_lexicon()","get_lexicon()","get_lexicon()","get_lineage_for()","get_lineage_for()","get_lineage_for()","get_local_onboarding_content()","get_name()","get_name()","get_namebank_id()","get_namebank_id()","get_nearby_taxa_obs_counts()","get_observation_to_refresh()","get_old_place_ids_to_refresh()","get_phylum_for()","get_phylum_for()","get_phylum_for()","get_quality_grade()","get_relevant_listings()","get_results_xml()","get_search_params()","get_taxa_for_place_taxon()","get_taxon()","get_taxon()","get_taxon()","get_taxon_for_nzor_id()","get_taxon_ids_to_refresh()","get_unassigned_taxa()","get_upstream_taxon_framework()","get_uri()","get_url()","getting_started()","global_conservation_status()","globally_threatened?()","goal_must_not_have_ended()","google_charts_map_for_places()","google_maps_js()","google_oauth_allowed?()","google_static_map_for_observation_url()","google_static_map_for_place()","google_static_map_for_place_url()","graft()","graft()","graft()","graft()","graft_point_and_lineage()","graft_silently()","graftable_destination_relative_to_taxon_framework_coverage()","graftable_relative_to_taxon_framework_coverage()","grafted?()","grant_user_privilege()","group()","group()","group_and_sort()","guide()","guide()","guide_asset_filename()","guide_cache_key()","guide_photo_for_tag()","guide_taxa_from_params()","guide_widget()","guide_widget()","haml_pretty()","handle_after_activate()","handle_after_move()","handle_change_in_completeness()","handle_remember_cookie!()","has_a_photo?()","has_a_sound?()","has_ancestor_taxon_id()","has_atlas_or_complete_set?()","has_inputs_and_outputs()","has_media?()","has_more_than_one_input()","has_more_than_one_output()","has_no_inputs()","has_no_outputs()","has_observation_field?()","has_provider_auth()","has_role?()","has_rules_for()","has_subscribers()","has_t?()","has_t?()","has_time_zone?()","header_cache_key_for()","header_projects()","helptip()","helptip_for()","hidden_fields_for_params()","hide_coordinates()","history()","history_allowed?()","home_page_wiki_path_by_locale()","host()","host=()","html_attributize()","human?()","hyperlink_mentions()","icon_preview_cache_key()","icon_url()","icon_url()","icon_url()","icon_url_provided?()","iconic_taxa_counts()","iconic_taxa_param_to_instances()","iconic_taxon_color()","iconic_taxon_color_for()","iconic_taxon_colors()","iconic_taxon_image()","iconic_taxon_image_url()","iconic_taxon_name()","iconic_taxon_name()","id=()","id_for()","id_for_extension()","id_for_prefix()","id_or_object()","identificationid()","identificationremarks()","identificationverificationstatus()","identification_counts_by_category()","identification_counts_by_iconic_taxon()","identifications()","identifications()","identifications_categories()","identifications_es_base_params()","identifications_histogram()","identified?()","identifiedby()","identifiedbyid()","identifier()","identifier()","identifier()","identify()","identotron()","image?()","image_and_content()","image_url()","image_url()","image_url()","images_from_result()","import()","import()","import()","import()","import_file()","import_from_eol()","import_from_shapefile()","import_or_create()","import_photos()","import_sounds()","import_tags_from_csv()","import_tags_from_csv_template()","import_taxa()","import_taxa()","in_agreement_with?()","in_collection_projects?()","in_format()","in_progress?()","in_project?()","in_public_s3_bucket?()","in_taxon?()","in_taxon?()","in_test_group?()","inaccurate_location?()","inaturalistlogin()","inaturalist_android_app()","inaturalist_iphone_app()","included()","included()","included()","included()","included()","included()","included()","included()","included()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_attributes()","index_controlled_term()","index_exists?()","index_license_code()","index_observation()","index_observation()","index_observations()","index_observations()","index_observations()","index_observations()","index_observations_for_user()","index_observations_later()","index_parent()","index_project()","index_project()","index_taxa()","index_taxa()","index_taxon()","index_taxon()","index_taxon()","index_taxon()","index_taxon()","index_taxon()","index_taxon()","inform_goal_of_new_contribution()","informationwithheld()","infraspecies?()","infraspecificepithet()","input_taxa()","input_taxa()","input_taxa()","input_taxa()","input_taxon()","input_taxon()","institutioncode()","interpolate_coordinates()","intersecting_places()","introduced?()","invalidate_cloudfront_cache_for()","invalidate_cloudfront_caches()","invite()","invite_only?()","ip_address_is_often_suspended()","is_absent?()","is_accepted_sciname?()","is_admin?()","is_admin?()","is_admin?()","is_agreement?()","is_akismet_spam_flag?()","is_android_app?()","is_app_owner?()","is_branching?()","is_comname?()","is_comname?()","is_comname?()","is_curator?()","is_curator?()","is_curator?()","is_default?()","is_disagreement?()","is_imported()","is_inaturalistjs_request?()","is_iphone_app?()","is_iphone_app_2?()","is_manager?()","is_me?()","is_mobile_app?()","is_new_project?()","is_not_me?()","is_present?()","is_sciname?()","is_sciname?()","is_site_admin?()","is_site_admin_of?()","is_url?()","iucn_name()","iucn_relationship_must_be_an_accepted_value()","iucn_relationship_text()","iucn_status()","iucn_status_code()","iucn_status_select_options()","jit_taxon_node()","jit_taxon_tree_with_taxon()","job_can_use_replica()","join()","join_test()","json_archive()","json_escape()","json_request?()","json_to_flickraw()","keep_old_taxon_id()","kill_remember_cookie!()","kingdom()","kingdom()","kml_url()","kml_url()","known_non_spammer?()","known_spam?()","label()","language()","language_for_locale()","large_url()","large_url()","lat()","lat()","lat_lon_in_place_guess?()","leaderboard()","leading_name()","leaf_taxa_count()","leaflet_js()","leave()","leave_test()","license_code()","license_code=()","license_code=()","license_code_for_number()","license_name()","license_name()","license_name()","license_name_for_code()","license_number_for_code()","license_short()","license_url()","license_url_for_code()","license_url_for_number()","licensed_if_no_user()","licensed_if_no_user()","life_stage()","lifelist_by_login()","limit_page_param_for_search()","limited_per_page()","link()","link_to()","link_to_dialog()","link_to_function()","link_to_taxon()","link_to_tip()","link_to_toggle()","link_to_toggle_box()","link_to_toggle_menu()","link_to_user()","linker_for()","links()","list()","list_observed_and_total()","list_rules_pass()","listed_taxa_editable_by?()","listed_taxa_editable_by?()","listed_taxa_editable_by?()","lng()","load()","load()","load_additional_activity_updates()","load_geojson_file()","load_record()","load_record()","load_registration_form_data()","load_shapefile()","load_test_taxa()","load_user()","load_user_by_login()","loading()","local_photo_fields()","local_photo_from_remote_photo()","local_sound_fields()","locale_for_lexicon()","locales()","locality()","localizable_lexicon()","localizable_lexicon()","localized_name()","log()","log_create()","log_create_if_taxon_id_changed()","log_destroy()","log_timer()","logged_in?()","logged_in?()","logger()","logger()","logger()","logger()","login=()","login_as()","login_as()","login_featured_observations()","login_from_basic_auth()","login_from_cookie()","login_from_session()","login_required()","logout_keeping_session!()","logout_killing_session!()","logstash_catchall()","long()","lookup_taxa_for_obs_batch()","lookup_upload()","lowercase_equivalent_model_name_for()","lsid()","machine_tag_pieces()","make()","make_api_all_taxon_data()","make_archive()","make_data()","make_descriptor()","make_eol_media_data()","make_metadata()","make_observation_fields_file()","make_occurrence_file()","make_primary_if_no_primary_exists()","make_project_observations_file()","make_simple_multimedia_file()","make_taxon_data()","make_user_file()","make_vernacular_names_data()","managers()","map()","map()","map_layers()","map_params_for_node_api()","map_zoom_for_place()","mapped_inactive_taxa()","mark_active_atlases_with_out_of_range_observations()","mark_as_updated()","mark_external_taxa_for_destruction()","mark_non_comprehensive_listed_taxa_as_absent()","mark_observations_as_updated()","markdown()","match_descendants()","match_descendants_of_id()","matches?()","matches?()","matching_taxon_ids()","max_attempts()","max_geoprivacy()","max_obs_distances_for_user()","media_item()","media_items()","medium_url()","medium_url()","medium_user_icon_url()","member_of?()","members()","mentioned_users()","mentioned_users()","mentioned_users()","mentioned_users()","mentioned_users()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge_cleanup()","merge_duplicates()","merge_duplicates()","merge_duplicates()","merge_field()","merge_future_duplicates()","merge_future_duplicates()","merge_future_duplicates()","merge_future_duplicates()","merge_future_duplicates()","merge_taxa()","mergeable_by?()","metadata()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","metric_can_be_assessed()","mime_types_for_filename()","mo_name_observation_field()","mo_owner_name_observation_field()","mo_url_from_result()","mo_url_observation_field()","mo_user_id()","mo_user_name()","mobile?()","mock_user()","modal_image()","moderated_with()","moderation()","modified()","modified()","modified()","modified()","modified()","modified()","modified?()","moimport()","moimport_finished()","month_graph()","monthly_supporters()","most_identifications()","most_observations()","most_species()","move_input_children_to_output()","move_to_child_of()","multiple_primary_listed_taxa?()","multiple_values()","munge_observed_on_with_chronic()","must_be_in_the_past()","must_be_the_only_active_export()","must_be_unique_to_taxon_framework()","must_end_in_the_future()","must_have_query()","must_have_reasonable_number_of_rows()","must_have_some_guide_taxa_to_publish()","must_not_be_a_range()","must_not_be_on_null_island()","mute()","name()","name()","name_providers()","name_with_rank()","native?()","native_url_for_photo()","nature_serve_status_name()","ne_latlon()","near_place()","needs_id?()","needs_id_downvotes_count()","needs_id_upvotes_count()","needs_id_vote_score()","negative_failure_message()","negative_failure_message()","nested_place_list()","network()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_batch()","new_bulk_csv()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_api_response()","new_from_eol_collection_item()","new_from_eol_data_object()","new_from_eol_data_object()","new_from_flickraw()","new_from_list()","new_from_native_sound_id()","new_from_native_sound_id()","new_from_shape()","new_message()","new_messages()","new_observation()","new_place_from_census_shape()","new_place_from_cpad_units_fee()","new_place_from_esri_world_shape()","new_traditional()","new_updates()","next()","ngz_size()","ngz_url()","ngz_work_path()","nilify_blanks()","nilify_operand_if_blank()","nilify_positional_accuracy_if_zero()","no_forbidden_lexicons()","no_other_annotations_if_this_is_blocking()","no_other_annotations_of_blocking_values()","no_self_love()","node_api_species_count()","norma_oficial_059_status_name()","normalize_friendly_id()","normalize_friendly_id()","normalize_geoprivacy()","normalize_geoprivacy()","normalize_lexicon()","normalize_lexicon()","normalize_license_code()","normalize_name()","normalize_name()","normalize_rank()","normalize_rank()","normalized_name()","north_america()","not_allowed()","not_in_taxon?()","not_on_a_comprehensive_check_list()","notifies_owner_of()","notifies_subscribers_of()","notifies_users()","notify_flaggable_on_create()","notify_flaggable_on_destroy()","notify_flaggable_on_update()","notify_observer()","notify_owner_of()","notify_resource()","notify_staff_about_blocked_user()","notify_staff_about_potential_problem_user()","notify_subscribers_of()","notify_subscribers_with()","notify_trusting_members()","notify_trusting_members_about_changes()","notify_trusting_members_about_changes_if_rules_changed()","notify_trusting_members_about_changes_later()","notify_trusting_members_about_changes_unique_hash()","notify_trusting_project_members()","notify_users()","nps_bioblitz()","num2letterid()","numidentificationagreements()","numidentificationdisagreements()","num_identifications_by_others()","obervation_counts_by_quality_grade()","obs_image_url()","obs_search_elastic_params()","obscure_coordinates()","obscure_place_guess()","observation_counts_by_country()","observation_field_value_for()","observation_field_values_attributes=()","observation_from_result()","observation_id()","observation_image()","observation_image_url()","observation_links()","observation_photos()","observation_photos()","observation_photos_finished_processing()","observation_place_guess()","observation_weeks()","observation_weeks_json()","observations()","observations()","observations_count()","observations_count()","observations_count_with_descendents()","observations_export_failed_notification()","observations_export_notification()","observations_for_map_tag_attrs()","observations_histogram()","observations_histogram_by_created_month()","observations_in_batches()","observations_observers()","observations_order_by_options()","observations_params()","observations_popular_field_values()","observations_species_counts()","observations_url_params()","observed_after?()","observed_before?()","observed_by_user?()","observed_in_bioblitz_time_range?()","observed_in_bounding_box_of?()","observed_in_place?()","observed_in_place?()","observed_species_accumulation()","observed_taxa_changes()","observed_taxa_count()","observed_taxa_counts()","observer_allows_addition?()","observer_invited?()","observer_owns_photo()","observer_prefers_fields_by_user()","observose_branch?()","observose_warning_branch?()","occur_in()","occurrenceid()","occurrenceremarks()","occurrence_status()","occurrence_status=()","occurs_in()","odp_s3_bucket_enabled?()","old_taxon()","on_list?()","one_line_observation()","one_year_time_span()","only_has_one_input()","only_inactive_children_if_inactive()","only_staff_can_unhide()","only_three_per_user()","open_licensed?()","operand_present()","opposite_taxon_from()","options()","options()","options()","orcid()","order()","order()","original_attribution()","original_dimensions()","original_url()","original_url()","original_user_icon_url()","orphaned?()","orphaned?()","orphaned_inactive_taxa()","other_primary_listed_taxa?()","others_identifications()","output_ancestor()","output_taxa()","output_taxa()","output_taxa()","output_taxa()","output_taxa()","output_taxon()","output_taxon()","output_taxon_for_record()","output_taxon_for_record()","owned_by?()","owned_by_spammer?()","owned_by_user?()","owner()","owner()","owner_name()","owner_name()","owner_name()","owners_identification()","owners_identification_from_vision()","owners_identification_from_vision=()","page()","page_details()","page_of_results()","page_url()","page_url()","page_url()","page_url()","page_url()","page_url()","page_url()","param_to_array()","params()","params_to_elastic_query()","parentnameusageid()","parent_id=()","parent_prefers_comments()","parental_consent()","parental_consent()","parks_canada_2017()","parse_extension()","parse_headers()","parse_url_prefix()","parsed_response()","partial_revert()","partition_data()","partition_range()","passes_quality_metric?()","path()","pending()","pending?()","perform()","permit_params()","permit_params()","permitted_page_params()","personal_lists()","photo=()","photo_attributes=()","photo_bucket_should_be_changed?()","photo_fields()","photo_fields()","photo_fields()","photo_fields()","photo_fields()","photo_identities_required()","photo_source_name()","photo_type_label()","photo_url()","photos()","photos()","photos()","photos()","photos()","photos=()","photos?()","photos_cache_key()","photos_missing()","photos_with_backfill()","photos_with_external_cache_key()","phylogram()","phylum()","phylum()","phylum()","picasa_albums()","picasa_client()","picasa_friends()","picasa_identity()","picasa_request_with_refresh()","ping()","place_ancestor_ids_sql()","place_geometry_kml_url()","place_guess_from_latlon()","place_name_and_type()","place_type()","place_type_name()","place_type_name=()","place_with_boundary()","places()","places()","places_for_latlon()","places_without_obscuration_protection()","planner()","point_geojson()","point_latlon()","points_from_geom()","polynom_parent()","popover()","popular_observations()","populate()","positioningdevice()","positioningmethod()","possessive_noun()","possible_attribute_associates()","post_archives_by_month_path()","post_parent_path()","posts_count()","preferred_end_date_or_time()","preferred_start_date_or_time()","preferred_uninomial_ancestor()","preload_for_component()","preload_for_elastic_index()","preload_for_elastic_index()","preload_user_preferences()","preloads()","prepare_batch_for_index()","prepare_batch_for_index()","prepare_batch_for_index()","presence_absence()","presence_places()","presence_places_with_establishment_means()","previous()","primary_establishment_means()","primary_listed_taxon()","primary_occurrence_status()","print_community_taxon_nodes()","private?()","private_ne_latlon()","private_sw_latlon()","privileged_with?()","probable_taxon()","probably_captive?()","process_geometry()","process_geometry_if_changed()","process_observations()","process_rows()","processing?()","project()","project()","project()","projectid()","projecttitle()","project_all()","project_allows_observations?()","project_allows_submitter?()","project_observation_rule_terms()","project_observations()","project_observations_count()","project_user()","project_user_invitation()","projects()","projects_count()","propagate_establishment_means()","protected_attributes_editable_by?()","provider()","prune_odp_duplicates()","prune_odp_duplicates_batch()","psql()","public?()","public_places()","public_positional_accuracy()","public_system_places()","publications()","published?()","published?()","published_name()","publisher()","publisher()","publishingcountry()","quality_metric_score()","quality_metrics_pass?()","queries()","query()","query()","query()","query_params()","queue_project_aggregations()","random_neighbor_lat_lon()","range()","range_changed?()","range_delete()","range_delete=()","rank_level_below_taxon_rank()","rank_level_conflict?()","rank_level_for_taxon_and_parent_must_not_be_nil()","rank_level_must_be_coarser_than_children()","rank_level_must_be_finer_than_parent()","rank_rule()","rank_rule=()","ratatosk()","ratatosk_name_providers()","reasess_taxon_framework_relationship_after_move()","reasonable_number_of_photos()","reassess_annotations()","reassess_annotations_after_save_later()","reassess_annotations_for_attribute_id()","reassess_annotations_for_taxon_id()","reassess_annotations_for_taxon_ids()","reassess_coordinate_obscuration()","reassess_coordinates_for_observations_by()","reassess_coordinates_for_observations_of()","reassess_coordinates_of()","reassign_primary_listed_taxon()","rebuild_without_callbacks()","recent()","recent_notifications()","recent_observation_fields()","recent_observations()","recent_photo_tags()","recent_photos()","recent_tags()","recordedby()","recordedbyid()","redirect_to_hell()","redirect_uri_has_no_params()","referenceid()","references()","references()","references()","references()","refresh()","refresh()","refresh_access_token!()","refresh_atlas()","refresh_cache_key()","refresh_check_lists()","refresh_default_site()","refresh_es_index()","refresh_list()","refresh_listed_taxon()","refresh_now()","refresh_now()","refresh_observationcounts()","refresh_place_check_list()","refresh_wikipedia_summary()","refresh_with_observation()","regenerate_defaults_for_year()","regenerate_existing()","reindex_associated_projects()","reindex_descendants_of()","reindex_faved_observations_after_destroy()","reindex_faved_observations_after_destroy_later()","reindex_for_taxon()","reindex_identifications()","reindex_identifications_after_save()","reindex_observation()","reindex_observations()","reindex_observations_if_name_changed()","reindex_observations_later()","reindex_places()","reindex_projects()","reindex_projects_later()","reindex_taxa_covered_by()","reindex_terms()","related_listed_taxa()","relationship_unknown()","relationships()","relevant_listed_taxon_alterations()","relevant_listed_taxon_alterations()","reload_from_observations_cache_key()","remaining_paragraphs_of_text()","remote_taxon_images()","removable_by?()","removable_by?()","remove()","remove_all_tags()","remove_atlas_alteration()","remove_automated_observation_reviews()","remove_batch()","remove_default_check_list()","remove_email_from_name()","remove_email_from_string()","remove_friend()","remove_from_s3()","remove_icon_from_s3()","remove_listed_taxon_alteration()","remove_listed_taxon_alteration()","remove_oauth_access_tokens()","remove_other_primary_listings()","remove_project_user()","remove_rank_from_name()","remove_rank_from_name()","remove_rank_from_name()","remove_role()","remove_subscription_to_friend()","remove_tag()","remove_taxa()","remove_taxon()","remove_times_from_non_bioblitzes()","remove_updater_if_no_changes()","remove_updates()","remove_wikipedia_summary_unless_auto_description()","render()","render()","render_404()","render_in_format()","reorder()","reorder_by_taxonomy()","repair()","repair()","repair()","repair()","repair()","repair()","repair()","repair()","repair()","repair()","repair()","repair_all()","repair_photos_for_user()","repair_single_photo()","replace_inactive_taxon()","replace_inactive_taxon()","reproductivecondition()","request()","request()","request()","request()","request()","request()","request()","require_admin_or_trusted_project_manager_for()","require_guide_user()","require_owner()","require_owner()","required_observation_fields_present?()","requires_privilege()","requires_privilege()","research_grade?()","research_grade_candidate?()","reset_file_from_original()","reset_iconic_taxa_constants_for_tests()","reset_last_aggregated_at()","reset_last_aggregated_if_rules_changed()","reset_password()","reset_user_privilege()","resolvable_by?()","resource_is_an_observation()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","responsive?()","restore!()","restore_access_tokens_by_suspended_user()","restore_user_privilege()","restrict_to_subscribers()","result_to_will_paginate_collection()","return_here()","return_here_from_url()","reusable?()","reusable?()","reusable?()","reuse()","reuse()","review()","reviewed_by?()","revisit_curator_identification()","revisit_curator_identifications_later()","revoke!()","revoke_access_tokens_by_suspended_user()","revoke_project_observations_on_leave_project()","revoke_user_privilege()","revoked?()","rights()","rights()","rightsholder()","rightsholder()","rights_for_media()","rights_for_observation()","root?()","rotate()","rotate!()","rotate_command()","rule_place()","rule_place_ids()","rule_places()","rule_taxa()","rule_taxon()","rules_validate_against?()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_cmd()","run_cmd()","run_revisit_curator_identification()","run_update_curator_identification()","s3_account()","s3_account=()","s3_bucket()","s3_bucket()","s3_client()","s3_host_alias()","s3_host_alias()","s3_permissions()","s3_permissions()","s3_region()","s3_region()","sane_destroy()","sane_destroy()","sanitizer()","save()","save()","save()","save_geom()","schemes()","scientificname()","scientificname()","scientific_name()","scientific_name()","sciname_taxon()","score()","search()","search()","search()","search()","search()","search()","search()","search()","search()","search_criteria()","search_eol()","search_filters()","search_hash()","search_help()","search_in_batches()","search_query()","search_wikimedia_for_taxon()","secret_token()","seek_app()","select()","select_lexicon()","selector()","self_and_ancestor_ids()","self_and_ancestor_ids()","self_and_ancestors()","self_and_ancestors()","self_and_descendant_conditions()","send_message()","send_remember_cookie!()","sent()","separator()","serial_id()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","serializable_hash()","service()","session()","session=()","session_key()","set_as_non_spammer_if_meets_criteria()","set_cache_columns()","set_captive()","set_community_taxon()","set_community_taxon_before_save()","set_coordinates()","set_curator_coordinate_access()","set_data_transfer_consent_at()","set_default_photos()","set_default_section()","set_defaults_from_eol_collection()","set_defaults_from_source_url()","set_disagreement()","set_display_name()","set_donorbox_donor_id_from_parent_user()","set_establishment_means()","set_flaggable_content()","set_flaggable_user_id()","set_geom_from_latlon()","set_guide_taxon()","set_href_name()","set_iconic_taxon()","set_iconic_taxon()","set_iconic_taxon_for_observations_of()","set_is_valid()","set_last_identification_as_current()","set_last_synced_at()","set_latlon_from_place_guess()","set_license()","set_license()","set_license()","set_license()","set_license()","set_locale()","set_locale()","set_names_from_taxon()","set_observation_photos_count()","set_observation_quality_grade()","set_observation_quality_grade()","set_observation_requirements_updated_at()","set_observation_sounds_count()","set_observations_taxa_for_user()","set_observations_taxa_if_pref_changed()","set_old_list()","set_parent()","set_photo_from_external()","set_photo_from_observations()","set_photos()","set_pi_consent_at()","set_place_guess_from_latlon()","set_place_id()","set_previous_observation_taxon()","set_primary_listing()","set_published_at()","set_quality_grade()","set_quality_grade()","set_rank_level()","set_ranked_ancestors()","set_read_at()","set_relationship()","set_resource_owner()","set_scientific_taxon_name()","set_scopes()","set_show_private_coordinates()","set_site_title()","set_source_id()","set_spammer()","set_subject_for_reply()","set_taxon()","set_taxon()","set_taxon_from_probable_taxon()","set_taxon_from_species_guess()","set_taxon_from_taxon_name()","set_taxon_geoprivacy()","set_taxon_name()","set_taxon_photo()","set_thread_id()","set_time_in_time_zone()","set_time_zone()","set_time_zone()","set_time_zone()","set_title()","set_unique_hash()","set_updated_at_if_preferences_changed()","set_updater_id()","set_uri()","set_uri()","set_urls()","set_urls()","set_user()","set_user_id()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_uuid()","set_view()","set_view()","set_view()","set_view()","set_view()","set_view()","set_wikipedia_summary()","set_wikipedia_summary_later()","setup_email()","setup_map_tag_attrs()","setup_page()","shareable_description()","short_description()","short_observation_description()","short_url()","should_generate_new_friendly_id?()","should_generate_new_friendly_id?()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_contributor()","show_guide()","show_guide_widget()","show_observation_coordinates?()","show_section()","simple_format_with_structure()","simple_namebank_search()","simplified_geom()","single_taxon_for_name()","single_taxon_for_name()","single_taxon_id_for_name()","site_admin_of_user_required()","site_search_params()","sized_url()","skip_for_non_images()","skip_row?()","skip_update_for_draft()","slug_candidates()","slugs_to_ids()","small_url()","small_url()","some_rights_reserved?()","sort_by_date()","sort_lexicons()","sortable_table_header()","sound_url()","sounds?()","source()","source()","source()","source_options()","source_title()","source_title()","source_url()","spammable?()","spammable_models()","spatial()","species_common_name_cannot_match_taxon_name()","species_for_infraspecies()","species_match()","species_or_lower?()","specificepithet()","split_large_array()","square_url()","square_url()","start_time=()","stateprovince()","stats()","stats()","stats_generated_for_day?()","stats_slideshow()","status_name()","still_is_marked()","straddles_date_line?()","streaks()","strip_allowed_values()","strip_author()","strip_description()","strip_login()","strip_name()","strip_name()","strip_name()","strip_name()","strip_species_guess()","strip_strings()","strip_tags()","strip_tags()","strip_title()","strip_value()","stripped_first_paragraph_of_text()","subscribe()","subscribe_curators_to_section()","subscribe_to_assessment_sections()","subscribe_to_assessment_sections_later()","subscribed_to?()","subtree_conditions()","suggest_login()","summarize()","summary()","summary()","summary_from_parsed()","suspend()","suspend_if_spammer()","sw_latlon()","sweep_comment()","sync()","sync()","sync()","sync()","sync()","sync_check_lists_with_parents()","sync_eol()","sync_eol_photos()","sync_eol_ranges()","sync_eol_sections()","sync_observation_links()","sync_observation_links()","sync_observation_links_with_logger()","sync_parent_check_list()","sync_site_content()","sync_species_if_infraspecies()","sync_with_parent()","synonyms()","system_call()","system_places()","system_places_for_latlon()","tabulate()","tag_flickr_photos()","tag_flickr_photos_from_observations()","tag_to_xml()","tags()","tags_to_taxa()","taxa()","taxa()","taxa()","taxa()","taxa_covered_by_taxon_framework()","taxa_unobserved_before_date()","taxobox()","taxon()","taxon()","taxon()","taxon()","taxon()","taxon()","taxon=()","taxonid()","taxonid()","taxonid()","taxonrank()","taxonrank()","taxon_and_ancestors()","taxon_cant_be_its_own_ancestor()","taxon_change_commit_records_unique_hash()","taxon_changes_count()","taxon_class()","taxon_common_name()","taxon_curator_required()","taxon_describers()","taxon_for_name()","taxon_framework_covers()","taxon_framework_has_source()","taxon_framework_taxon_name()","taxon_frameworks_for_dropdowns()","taxon_id()","taxon_image()","taxon_image_url()","taxon_matches_curator_identification?()","taxon_matches_observation()","taxon_name()","taxon_name()","taxon_name()","taxon_photos_with_backfill()","taxon_range_creator()","taxon_range_file_display_name()","taxon_range_kml_url()","taxon_range_kml_url()","taxon_range_updater()","taxon_rank()","taxon_schemes_count()","taxon_stats()","taxon_summary()","taxon_to_json()","taxonomic_taxon_list()","taxonomy_details()","term_label()","term_names()","terms()","terms()","terms()","terms()","test_groups_array()","thread_flags()","threatened?()","threatened_in_lat_lon?()","threatened_in_place?()","threatened_status()","thumb_name()","thumb_url()","thumb_url()","thumbnail()","thumbnailurl()","time_observed_at_in_zone()","time_observed_at_utc()","time_zone_for_lat_lng()","time_zone_for_options()","time_zone_from_lat_lng()","time_zone_select()","timezone_object()","timezone_offset()","tip()","title_by_user()","title_for_observation_params()","to_csv()","to_csv()","to_csv_column()","to_local_sound()","to_local_sound!()","to_ngz()","to_observation()","to_observation()","to_observation()","to_observation()","to_observation()","to_observation()","to_observation()","to_observation()","to_param()","to_param()","to_param()","to_param()","to_param()","to_plain_s()","to_plain_s()","to_plain_s()","to_plain_s()","to_plain_s()","to_plain_s()","to_plain_s()","to_plain_s()","to_recursive_ostruct()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_select_tag_with_option_tags()","to_styled_s()","to_tags()","to_tags()","to_tags()","to_taxa()","to_taxa()","to_taxa()","to_taxa()","to_taxon()","to_taxon()","to_user_copy()","token()","too_big_for_check_list?()","torquemap()","touch_if_modified()","touch_observation()","touch_observation()","touch_projects()","touch_resource()","touch_resource()","tracking_code_allowed?()","transformation_command()","transformation_command()","translate()","translate_with_consistent_case()","translated_name()","translators()","tree_taxa()","trickle_down_establishment_means()","trim_fields()","trim_fields()","trim_user_agent()","truncate()","truncate_with_more()","trust()","trusts?()","try_show()","turn_remote_photo_into_local_photo()","twitter_identity()","type()","type_from_file_command()","type_from_mime_magic()","tzid_for_lat_lng()","tzid_from_lat_lng()","unblock()","uncertainty_cell_center_latlon()","uncertainty_cell_diagonal_meters()","uncertainty_cell_diagonal_meters()","unfeature()","unfeature_inactive()","unfeature_taxon()","unique_tags()","uniqueness_of_authorization_per_user()","uniqueness_of_blocked_user()","uniqueness_of_current()","uniqueness_of_output_taxa()","uniqueness_of_taxa()","unlink_flickr_account()","unlock()","unmute()","unobscure_coordinates()","unsuspend()","untrust()","unviewed_by_user_from_query()","unvote()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_acl()","update_all_licenses()","update_all_licenses()","update_all_licenses()","update_ancestor_photos()","update_and_primary()","update_cache_columns()","update_cache_columns_for()","update_cache_columns_for_check_list()","update_categories()","update_categories_for_observation()","update_colors()","update_counts()","update_counts()","update_curator_identification()","update_curator_identification()","update_curator_idents_on_make_curator()","update_curator_idents_on_remove_curator()","update_default_license()","update_default_license()","update_default_license()","update_descendants_with_new_ancestry()","update_descendants_with_new_ancestry()","update_disagreement_identifications_for_taxon()","update_fields()","update_for_taxon_change()","update_for_taxon_change()","update_for_taxon_change()","update_for_taxon_change()","update_identifications()","update_identifications_counter_cache()","update_image_for()","update_mappable()","update_obs_iconic_taxa()","update_obs_stats()","update_obs_stats_after_destroy()","update_observation()","update_observation()","update_observation_after_destroy()","update_observation_counts()","update_observation_field_counts()","update_observation_geoprivacies()","update_observation_if_test_env()","update_observation_index()","update_observation_licenses()","update_observation_sites()","update_observation_sites_later()","update_observations_counter_cache()","update_observations_counter_cache()","update_observations_counter_cache_from_project_and_user()","update_observations_counter_cache_later()","update_observations_places()","update_observations_places()","update_observations_places()","update_observations_places()","update_observations_places_later()","update_observed_taxa_count()","update_on_related_listed_taxa()","update_other_identifications()","update_parent_counter_cache()","update_password()","update_photo_identities()","update_photo_licenses()","update_photo_native_columns_and_copy_metadata()","update_photos()","update_photos()","update_photos()","update_project_observations_curator_coordinate_access()","update_project_observations_later()","update_project_observed_taxa_counter_cache_later()","update_project_rule()","update_public_positional_accuracy()","update_quality_metrics()","update_quality_metrics()","update_records_of_class()","update_session()","update_sound_licenses()","update_spam_count()","update_species_counter_cache()","update_stats()","update_stats_for_observations_of()","update_tagline_for()","update_taxa_counter_cache()","update_taxa_counter_cache_from_project_and_user()","update_taxa_counter_cache_later()","update_taxa_obs_and_observed_taxa_count_after_update_observation()","update_taxon_counter_caches()","update_taxon_framework_relationship()","update_taxon_framework_relationship()","update_taxon_list_rule()","update_user()","update_user_counter_cache()","update_user_counter_cache()","update_user_counter_caches()","update_user_counter_caches_after_create()","update_user_counter_caches_after_destroy()","update_user_counter_caches_after_update()","update_user_species_counter_cache_later()","update_users_observations_counts()","update_users_taxa_counts()","update_with_auth_info()","updates_count()","updates_notification()","upload()","upload_to_aws_s3()","upstream_taxon_framework()","uri_join()","url()","url()","url()","url_cant_have_genus_without_species()","url_cant_have_species_without_genus()","url_for_license()","url_for_params()","url_for_referrer_or_default()","url_for_request()","url_for_request()","url_for_resource_with_host()","url_for_taxon()","url_for_title()","url_without_template_tags()","user()","user()","user()","user()","user_can_edit_attributes()","user_content()","user_detail()","user_has_flagged?()","user_icon_url()","user_ids_without_blocked_and_muted()","user_image()","user_invited?()","user_is_a_site_curator()","user_is_not_already_a_member()","user_logging()","user_login()","user_login()","user_login()","user_must_be_on_site_long_enough()","user_name()","user_owns_photo()","user_parent_confirmation()","user_request_logging()","user_seen_announcement?()","user_stats()","user_updates_suspended()","user_viewed_updates()","user_viewed_updates()","users()","users_can_add?()","users_helped()","users_histogram_by_created_month()","users_who_helped()","users_with_unviewed_updates_from()","users_with_unviewed_updates_from_query()","using_recaptcha?()","valid?()","valid?()","valid_latlon?()","valid_remember_cookie?()","valid_remote_photo_url()","valid_remote_photo_url?()","valid_scientific_name_must_match_taxon_name()","validate_and_add_contribution()","validate_email_domain_exists()","validate_email_pattern()","validate_file()","validate_geometry()","validate_geometry()","validate_locked()","validate_name_does_not_start_with_a_number()","validate_observation_field_allowed_values()","validate_observation_field_datatype()","validate_parent_is_not_self()","validate_to_not_from()","validate_unique_hash()","validate_with_geom()","validates?()","validates?()","validates?()","validates_rules_from()","value()","value()","value_belongs_to_attribute()","value_belongs_to_taxon()","value_is_a_value()","values_for_observation()","verb_phrase()","verb_phrase()","verb_phrase()","verb_phrase()","verbatimeventdate()","verbatimlocality()","verifiable?()","verifiable?()","verify_recaptcha()","vernacularname()","view()","view()","view()","view()","view()","view()","view_context()","viewed_updates()","vision()","vision=()","votable_callback()","vote()","vote()","vote()","vote_score()","voted_in_to_needs_id?()","voted_out_of_needs_id?()","wait_until_elasticsearch_is_running()","wait_until_index_exists()","warn()","was_georeferenced?()","wed_bioblitz()","widget()","widget()","wiki_content()","wiki_css()","wiki_macros()","wiki_nav()","wiki_page_attachments()","wiki_topnav()","wiki_user()","wikipedia()","wikipedia()","wikipedia()","wikipedia()","wikipedia_attribution()","wikipedia_image_filename_for_title()","wikipedia_name()","wikipedia_summary()","wild?()","windowed_pagination_links()","winning_annotation_value_for_term()","winning_annotations_for_term()","within_count_limit()","within_umbrella_ids()","without_callbacks()","work_path()","write_observation_fields_data()","write_occurrence_data()","write_project_observations_data()","write_simple_multimedia_data()","write_user_data()","xml()","year()","you_or_login()","your_year()","readme"],"longSearchIndex":["actioncontroller","actioncontroller::base","activerecord","activerecord::base","actsaselasticmodel","actsasspammable","actsasspammable::user","actsasuuidable","admin","admin::delayedjobscontroller","admincontroller","ambidextrous","annotation","annotationscontroller","announcement","announcementscontroller","apiendpoint","apiendpointcache","appleappsiteassociationcontroller","applicationcontroller","applicationhelper","applicationrecord","array","assessment","assessmentsection","assessmentsectionscontroller","assessmentscontroller","atlas","atlasalteration","atlasescontroller","authenticatedsystem","authenticatedtesthelper","benchmarker","bootstrapformbuilder","bulkobservationfile","bulkobservationfile::bulkobservationexception","calendarscontroller","catalogueoflife","checklist","checklistscontroller","classmatchers","classmatchers::bea","classmatchers::behavelikea","cloudfrontaclupdater","cloudfrontinvalidator","cloudfrontlogparser","color","comment","commentsweeper","commentscontroller","completeset","completesetscontroller","compressedyamlcolumn","computervisiondemocontroller","computervisiondemoupload","computervisiondemouploadscontroller","conabioservice","conservationstatus","conservationstatusescontroller","conservationstatuseshelper","controlledterm","controlledtermlabel","controlledtermlabelscontroller","controlledtermtaxon","controlledtermvalue","controlledtermvaluescontroller","controlledtermscontroller","curatorapplicationscontroller","customlogformatter","customproject","customprojectscontroller","djlogstashplugin","djmakaraplugin","darwincore","darwincore::archive","darwincore::cores","darwincore::descriptor","darwincore::eolmedia","darwincore::eolmedia::instancemethods","darwincore::helpers","darwincore::metadata","darwincore::observationfields","darwincore::observationfields::instancemethods","darwincore::occurrence","darwincore::occurrence::instancemethods","darwincore::projectobservations","darwincore::projectobservations::instancemethods","darwincore::simplemultimedia","darwincore::simplemultimedia::instancemethods","darwincore::taxon","darwincore::taxon::instancemethods","darwincore::user","darwincore::user::instancemethods","darwincore::vernacularname","darwincore::vernacularname::instancemethods","datapartner","datapartnerlinkers","datapartnerlinkers::calflora","datapartnerlinkers::datapartnerlinker","datapartnerlinkers::datapartnerlinkererror","datapartnerlinkers::gbif","datapartnerlinkers::marylandbiodiversityproject","datapartnerscontroller","defaultformbuilder","defaultformbuilder::inatinstancetag","deletedobservation","deletedphoto","deletedsound","deleteduser","denormalizer","devise","devise::strategies","devise::strategies::applicationjsonwebtoken","devise::strategies::jsonwebtoken","devisemailer","donatecontroller","elasticmodel","emailsuppression","emailer","eolcontroller","eolphoto","eolservice","errorscontroller","exifmetadata","exifmetadata::extractionerror","explodedatlasplace","explodedatlasplacescontroller","externaltaxon","facebookcontroller","facebookhelper","facebookphoto","fakeview","fileextension","fileprefix","flag","flagscontroller","flagshelper","flickrcache","flickrcontroller","flickridentity","flickrphoto","flowtaskscontroller","flowtaskshelper","frequencycell","frequencycellmonthtaxon","friendship","friendshipscontroller","gbifservice","goal","goalcontribution","goalparticipant","goalrule","gonzo","gonzo::acts","gonzo::acts::flaggable","gonzo::acts::flaggable::classmethods","gonzo::acts::flaggable::instancemethods","gonzo::acts::flaggable::singletonmethods","googlephotosapi","googlerecaptcha","googlestreetviewphoto","guide","guideeolupdateflowtask","guidephoto","guidephotoscontroller","guiderange","guiderangescontroller","guidesection","guidesectionscontroller","guidetaxacontroller","guidetaxon","guideuser","guidescontroller","guideshelper","hassubscribers","hassubscribers::classmethods","hassubscribers::instancemethods","helpcontroller","i18nextensions","inatapiservice","inataws","identification","identificationscontroller","inatcontenttypedetector","jsonwebtoken","lifelistscontroller","list","listrule","listedtaxacontroller","listedtaxafromcsvflowtask","listedtaxahelper","listedtaxon","listedtaxonalteration","listscontroller","localphoto","localsound","message","messagescontroller","metaservice","modeladapter","modelattributechange","moderatoraction","moderatoractionscontroller","moderatornote","moderatornotescontroller","mushroomobserverimportflowtask","mushroomobserverimportflowtask::forbiddenerror","mushroomobserverimportflowtask::mushroomobserverimportflowtaskerror","mushroomobserverimportflowtask::timeouterror","mushroomobserverimportflowtask::toomanyrequestserror","nameprovidererror","newzealandorganismsregister","oauthapplication","oauthapplicationscontroller","oauthauthorizationscontroller","oauthauthorizedapplicationscontroller","oauthtokenscontroller","object","observation","observationfield","observationfieldvalue","observationfieldvaluescontroller","observationfieldscontroller","observationlink","observationphoto","observationphotoscontroller","observationreview","observationsearch","observationsearch::classmethods","observationsound","observationsoundscontroller","observationsweeper","observationscontroller","observationsexportflowtask","observationsexportflowtask::observationsexportdeleted","observationsexportflowtask::observationsexporterror","observationsexportflowtask::observationsexportnotsaved","observationshelper","observationsplace","oldpreferences","paperclip","paperclip::deanimator","paperclip::metadatafilter","paperclip::rotator","password","passwordmailer","photo","photo::missingphotoerror","photometadata","photosweeper","photoscontroller","picasa","picasacontroller","picasaphoto","place","placedenormalizer","placegeometry","placesources","placesweeper","placetaxonname","placescontroller","placeshelper","placessite","post","postscontroller","privileges","privileges::classmethods","privileges::controller","privileges::controller::classmethods","privileges::instancemethods","project","project::projectaggregatoralreadyrunning","projectasset","projectassetscontroller","projectlist","projectobservation","projectobservationfield","projectobservationrule","projectobservationscontroller","projectuser","projectuserinvitation","projectuserinvitationscontroller","projectuserrule","projectuserscontroller","projectscontroller","providerauthorization","providerauthorizationscontroller","provideroauthcontroller","provideroauthcontroller::badassertiontypeerror","provideroauthcontroller::childwithoutpermissionerror","provideroauthcontroller::suspendederror","qualitymetric","qualitymetricscontroller","rakismet","ratatosk","ratatosk::nameproviders","ratatosk::nameproviders::colnameprovider","ratatosk::nameproviders::coltaxonadapter","ratatosk::nameproviders::coltaxonnameadapter","ratatosk::nameproviders::nzornameprovider","ratatosk::nameproviders::nzortaxonadapter","ratatosk::nameproviders::nzortaxonnameadapter","ratatosk::nameproviders::ubionameprovider","ratatosk::nameproviders::ubiotaxonadapter","ratatosk::nameproviders::ubiotaxonnameadapter","ratatosk::ratatosk","ratatoskgrafterror","relationshipscontroller","role","rubaidh","rubaidh::googleanalyticsmixin","rubypicasa","rubypicasa::album","rubypicasa::author","rubypicasa::base","rubypicasa::photo","rubypicasa::photo::license","rubypicasa::photo::point","rubypicasa::photourl","rubypicasa::picasaerror","rubypicasa::picasatokenerror","rubypicasa::recentphotos","rubypicasa::search","rubypicasa::thumbnailurl","rubypicasa::user","rule","ruler","ruler::classmethods","savedlocation","savedlocationscontroller","searchcontroller","shared","shared::filtersmodule","shared::guidemodule","shared::licensemodule","shared::licensemodule::classmethods","shared::listsmodule","shared::mailermodule","shared::sweepersmodule","shared::touchesobservationmodule","shared::wikipediamodule","simplifiedtreemilestonetaxon","site","siteadmin","siteadminscontroller","siteconfig","sitedataexporter","sitefeaturedproject","sitestatistic","sitescontroller","sound","soundcloudidentity","soundcloudsound","soundcloudsoundscontroller","soundscontroller","source","sourcescontroller","sphericalmercator","statscontroller","subscription","subscriptionscontroller","taxacontroller","taxahelper","taxon","taxonadaptererror","taxonchange","taxonchange::activechildrenerror","taxonchange::permissionerror","taxonchange::ranklevelerror","taxonchangetaxacontroller","taxonchangetaxon","taxonchangescontroller","taxoncurator","taxoncuratorscontroller","taxondescribers","taxondescribers::amphibiaweb","taxondescribers::base","taxondescribers::conabio","taxondescribers::eol","taxondescribers::inaturalist","taxondescribers::wikipedia","taxondescribers::wikipediaes","taxondescribers::wikipediafr","taxondescription","taxondrop","taxonframework","taxonframeworkrelationship","taxonframeworkrelationshipscontroller","taxonframeworkscontroller","taxonlink","taxonlinkscontroller","taxonmerge","taxonname","taxonnameadaptererror","taxonnamesweeper","taxonnamescontroller","taxonphoto","taxonphotoscontroller","taxonrange","taxonrangescontroller","taxonrangeshelper","taxonscheme","taxonschemetaxacontroller","taxonschemetaxon","taxonschemescontroller","taxonsplit","taxonstage","taxonswap","taxonsweeper","timezonegeometry","translationscontroller","trip","trippurpose","triptaxon","tripscontroller","ubioauthorizationerror","ubioconnectionerror","ubioservice","updateaction","user","userblock","userblockscontroller","usermute","usermutescontroller","userparent","userparentscontroller","userprivilege","usersweeper","users","users::passwordscontroller","users::registrationscontroller","users::sessionscontroller","userscontroller","usershelper","votescontroller","welcomecontroller","wikipage","wikipageattachment","wikipageversion","wikipagescontroller","wikipageshelper","wikimediacommonscontroller","wikimediacommonsphoto","wikimediacommonsservice","wikipediaservice","yearstatistic","darwincore::eolmedia::instancemethods#createdate()","darwincore::eolmedia::instancemethods#owner()","darwincore::eolmedia::instancemethods#usageterms()","taxahelper#abbreviate_binomial()","listedtaxon#absent_only_if_not_confirming_observations()","projectuserinvitation#accepted?()","ratatosk::nameproviders::coltaxonnameadapter#accepted_name()","ratatosk::nameproviders::coltaxonnameadapter#accepted_name_hxml()","ratatosk::nameproviders::nzortaxonnameadapter#accepted_name_hxml()","darwincore::eolmedia::instancemethods#accessuri()","authenticatedsystem#access_denied()","observationscontroller#accumulation()","taxon#activated_protected_attributes_editable_by?()","admin::delayedjobscontroller#active()","user#active?()","taxonchange#active_children_conflict?()","user#active_for_authentication?()","user::active_ids()","announcement::active_in_placement()","taxon#active_parent_if_active()","applicationhelper#activity_snippet()","gonzo::acts::flaggable::classmethods#acts_as_flaggable()","activerecord::base::acts_as_spammable()","darwincore::eolmedia::adapt()","darwincore::observationfields::adapt()","darwincore::occurrence::adapt()","darwincore::projectobservations::adapt()","darwincore::simplemultimedia::adapt()","darwincore::taxon::adapt()","darwincore::user::adapt()","darwincore::vernacularname::adapt()","guidesection#adapted?()","projectscontroller#add()","project#add_admins()","projectscontroller#add_batch()","guidetaxon#add_color_tags()","guidescontroller#add_color_tags()","facebookphoto::add_comment()","flickrphoto::add_comment()","place#add_custom_error()","gonzo::acts::flaggable::instancemethods#add_flag()","userscontroller#add_friend()","observationscontroller#add_from_list()","listscontroller#add_from_observations_now()","rubaidh::googleanalyticsmixin#add_google_analytics_code()","taxonchange#add_input_taxon()","taxonmerge#add_input_taxon()","taxonstage#add_input_taxon()","taxonswap#add_input_taxon()","checklist::add_new_listed_taxa()","checklist#add_observed_taxa()","taxonchange#add_output_taxon()","taxondrop#add_output_taxon()","taxonmerge#add_output_taxon()","taxonstage#add_output_taxon()","taxonswap#add_output_taxon()","project#add_owner_as_project_user()","user#add_provider_auth()","guidetaxon#add_rank_tag()","userscontroller#add_role()","flickrcontroller#add_tags()","guidescontroller#add_tags_for_rank()","guide#add_taxa_from_eol_collection()","guide#add_taxa_from_names()","trip#add_taxa_from_observations()","tripscontroller#add_taxa_from_observations()","guide#add_taxa_from_source_url()","checklist#add_taxon()","list#add_taxon()","shared::listsmodule#add_taxon_batch()","taxon#add_to_intersecting_places()","applicationhelper#adjust_initial_bounds()","user#admin?()","sitescontroller#affiliation()","observationsweeper#after_create()","commentsweeper#after_destroy()","observationsweeper#after_destroy()","placesweeper#after_destroy()","taxonnamesweeper#after_destroy()","taxonsweeper#after_destroy()","placesweeper#after_merge()","commentsweeper#after_save()","taxonnamesweeper#after_save()","observationsweeper#after_update()","photosweeper#after_update()","placesweeper#after_update()","taxonsweeper#after_update()","usersweeper#after_update()","project#aggregate_observations()","project::aggregate_observations_for()","project#aggregation_allowed?()","project#aggregation_preference_allowed?()","identificationscontroller#agree()","facebookcontroller#album()","picasa#album()","picasacontroller#album()","picasa#album_by_title()","googlephotosapi#albums()","rubypicasa::user#albums()","taxon#all_names()","shared::licensemodule#all_rights_reserved?()","user#allow_some_licenses()","oldpreferences#allowed?()","observationfield#allowed_values_has_pipes()","atlasescontroller#alter_atlas_presence()","taxonsplit::analyze_id_destinations()","taxonchangescontroller#analyze_ids()","taxon#ancestor_of?()","place#ancestor_place_ids()","listedtaxon#ancestry()","taxon#ancestry_and_active_if_taxon_framework()","observationfieldvalue#annotation_attribute_and_value()","eolservice#api_endpoint()","metaservice#api_endpoint()","mushroomobserverimportflowtask#api_key()","mushroomobserverimportflowtask#api_key_present()","user#api_token()","userscontroller#api_token()","emailer#app_owner_application()","oauthapplicationscontroller#app_owner_application()","applicationhelper#append_bounds_to_map_tag_attrs()","place#append_geom()","applicationhelper#append_observation_layers()","applicationhelper#append_place_layers()","updateaction#append_subscribers()","applicationhelper#append_taxon_layers()","controlledterm#applicable_to_taxon()","jsonwebtoken::applicationtoken()","observation#application_id_to_index()","taxon#apply_orphan_strategy()","taxon::apply_orphan_strategy()","observationsearch::classmethods#apply_pagination_options()","observation#appropriate?()","relationshipscontroller#approved_create_params()","friendshipscontroller#approved_params()","moderatoractionscontroller#approved_params()","relationshipscontroller#approved_params()","postscontroller#archives()","updateaction::arel_attributes_to_es_filters()","observation::as_csv()","annotation#as_indexed_json()","color#as_indexed_json()","comment#as_indexed_json()","conservationstatus#as_indexed_json()","controlledterm#as_indexed_json()","flag#as_indexed_json()","identification#as_indexed_json()","listedtaxon#as_indexed_json()","moderatoraction#as_indexed_json()","observation#as_indexed_json()","observationfield#as_indexed_json()","observationfieldvalue#as_indexed_json()","observationlink#as_indexed_json()","photo#as_indexed_json()","place#as_indexed_json()","placetaxonname#as_indexed_json()","project#as_indexed_json()","projectobservation#as_indexed_json()","projectobservationfield#as_indexed_json()","projectuser#as_indexed_json()","qualitymetric#as_indexed_json()","sitefeaturedproject#as_indexed_json()","sound#as_indexed_json()","taxon#as_indexed_json()","taxonname#as_indexed_json()","taxonphoto#as_indexed_json()","updateaction#as_indexed_json()","user#as_indexed_json()","taxonframeworkrelationship#as_json()","taxonname#as_json()","provideroauthcontroller#assertion()","fakeview#asset_path()","providerauthorization#assign_auth_info()","project#associated_place_ids()","taxon#atlased?()","annotation#attribute_belongs_to_taxon()","annotation#attribute_is_an_attribute()","googlestreetviewphoto#attribution()","guiderange#attribution()","guidesection#attribution()","list#attribution()","localphoto#attribution()","shared::licensemodule#attribution()","guiderange#attribution_name()","guidesection#attribution_name()","shared::licensemodule#attribution_name()","providerauthorizationscontroller#auth_callback_test()","ambidextrous#auth_url_for()","user::authenticate()","devise::strategies::applicationjsonwebtoken#authenticate!()","devise::strategies::jsonwebtoken#authenticate!()","authenticatedtesthelper#authorize_as()","authenticatedsystem#authorized?()","listedtaxon#auto_removable_from_check_list?()","hassubscribers::classmethods#auto_subscribes()","taxon#auto_summary()","placescontroller#autocomplete()","taxacontroller#autocomplete()","taxonchange#automatable?()","taxonsplit#automatable?()","taxonchange#automatable_for_output?()","darwincore::vernacularname::base_scope()","observationsexportflowtask#basename()","sitedataexporter::basename_for_site()","darwincore::occurrence::instancemethods#basisofrecord()","shared::listsmodule#batch_edit()","place#bbox_contains_lat_lng?()","place#bbox_contains_lat_lng_acc?()","place#bbox_privately_contains_observation?()","place#bbox_publicly_contains_observation?()","classmatchers#be_a()","classmatchers#be_an()","password#before_create()","userscontroller#before_edit()","classmatchers#behave_like_a()","classmatchers#behave_like_an()","benchmarker#benchmark()","benchmarker::benchmark()","darwincore::archive#benchmark()","photo#best_available_url()","photo#best_url()","project#bioblitz?()","userscontroller#block()","user#blocked_by?()","actioncontroller::base::blocks_spam()","identificationscontroller#bold()","applicationhelper#bootstraptargetid()","place#bounding_box()","place#bounding_box_geojson()","place#bounds()","site#bounds()","taxonrange#bounds()","site#bounds?()","applicationhelper#branding_statement()","postscontroller#browse()","projectscontroller#browse()","taxacontroller#browse()","taxacontroller#browse_photos()","listedtaxon#bubble_up_establishment_means()","taxonframework::bud_off_child_taxon_framework()","observation#build_observation_fields_from_tags()","list#build_taxon_rule()","updateaction#bulk_insert_subscribers()","emailer#bulk_observation_error()","emailer#bulk_observation_success()","projectscontroller#bulk_template()","identificationscontroller#by_login()","lifelistscontroller#by_login()","listscontroller#by_login()","observationscontroller#by_login()","projectscontroller#by_login()","tripscontroller#by_login()","votescontroller#by_login()","observationscontroller#by_login_all()","taxonlink::by_taxon()","applicationcontroller#cache()","listedtaxon#cache_columns()","checklist#cache_columns_options()","apiendpointcache#cached?()","darwincore::taxon::instancemethods#cached_ancestor()","taxon#cached_atlas_presence_places()","placescontroller#cached_guide()","project#cached_slug()","place#calculate_bbox_area()","observation#calculate_mappable()","observation#calculate_public_positional_accuracy()","projectscontroller#calendar()","customlogformatter#call()","project#can_be_converted_to_collection_project?()","taxon#can_be_grafted_to()","taxon#can_only_be_featured_if_photos()","listedtaxon#can_set_as_primary?()","statscontroller#canada_150()","taxon#cannot_edit_parent_during_content_freeze()","subscription#cannot_subscribe_to_north_america()","moderatoraction#cannot_suspend_staff()","userblock#cant_block_staff()","userblock#cant_block_yourself()","usermute#cant_mute_yourself()","taxahelper#capitalize_name()","taxon#capitalize_name()","taxahelper#capitalize_piece()","taxon::capitalize_scientific_name()","taxonname#capitalize_scientific_name()","darwincore::occurrence::instancemethods#captive()","projectobservation#captive?()","observation#captive_cultivated()","observation#captive_cultivated?()","observation#captive_flag()","observation#captive_flag=()","observation#casual?()","darwincore::occurrence::instancemethods#catalognumber()","darwincore::simplemultimedia::instancemethods#catalognumber()","applicationhelper#catch_and_release()","projectscontroller#change_admin()","localphoto::change_photo_bucket_if_needed()","localphoto#change_photo_bucket_if_needed()","projectscontroller#change_role()","applicationhelper#char_wrap()","userprivilege::check()","moderatoraction#check_accepted_actions()","place#check_default_check_list()","goal#check_for_completion!()","taxonframeworkrelationship#check_if_covered()","listedtaxon#check_list_editability()","taxonframework#check_other_taxon_framework_relationships()","listedtaxon#check_primary_listing()","bootstrapformbuilder#check_radio_field()","user::check_recent_probable_spammers()","flag#check_resolved()","projectuser#check_role()","actioncontroller::base::check_spam()","user#check_suspended_by_user()","taxonframework#check_taxon_curators()","taxonframework#check_taxon_framework_relationships()","applicationcontroller#check_user_last_active()","user#child_without_permission?()","placescontroller#children()","taxacontroller#children()","ratatosk::nameproviders::ubionameprovider#choose_cbank_id()","taxonname::choose_common_name()","taxonname::choose_default_name()","taxonname::choose_scientific_name()","applicationhelper#citation_for()","listedtaxon#citation_object()","applicationhelper#cite()","taxon#clash_analysis()","taxacontroller#clashes()","place#clean_geometry()","taxondescribers::wikipedia#clean_html()","subscription#clear_caches()","projectobservationrule#clear_operand()","mushroomobserverimportflowtask#clear_warnings_for_url()","soundcloudsound::client_for_user()","inataws::cloudfront_invalidate()","statscontroller#cnc2016()","statscontroller#cnc2017()","statscontroller#cnc2017_stats()","bulkobservationfile#collate_errors()","darwincore::occurrence::instancemethods#collectioncode()","emailer#collection_project_changed_for_trusting_member()","observation#collection_projects()","project#collection_search_parameters()","applicationhelper#colors_for_taxa()","applicationhelper#commas_and()","taxonchange#commit()","taxonchangescontroller#commit()","taxonmerge#commit()","taxonswap#commit()","taxonchangescontroller#commit_for_user()","taxonchange#commit_records()","taxonchangescontroller#commit_records()","taxonstage#commit_records()","taxonchange#commit_records_job()","taxonchange#commit_records_later()","taxonchange#committable_by?()","taxonchange#committed?()","observation#common_name()","taxon#common_name()","taxon#common_name_string()","taxahelper#common_taxon_name()","observation#community_supported_id?()","observation#community_taxon_at_family_or_lower?()","observation#community_taxon_at_species_or_lower?()","observation#community_taxon_below_family?()","observation#community_taxon_nodes()","observation#community_taxon_rejected?()","observationscontroller#community_taxon_summary()","ratatosk::nameproviders::ubiotaxonnameadapter#comname_taxon()","applicationhelper#compact()","applicationhelper#compact_date()","announcement#compact_locales()","listscontroller#compare()","observationscontroller#compare()","taxon#complete_species_count()","observation#component_cache_key()","observation::component_cache_key()","updateaction::components_of_class()","updateaction::components_with_assoc()","inataws::config()","userparentscontroller#confirm()","projectscontroller#confirm_leave()","taxon#conservation_status_code()","taxon#conservation_status_name()","site#contact()","place#contains_lat_lng?()","actsasspammable::user#content_flagged_as_spam()","darwincore::vernacularname::instancemethods#contributor()","projectscontroller#contributors()","annotation#controlled_attribute_label()","annotation#controlled_value_label()","fakeview#controller()","cloudfrontlogparser#convert_cloudfront_log()","cloudfrontlogparser#convert_cloudfront_logs_to_logstash_format()","project#convert_collection_project_to_traditional_project()","project#convert_properties_for_collection_project()","projectscontroller#convert_to_collection()","project#convert_to_collection_project()","projectscontroller#convert_to_traditional()","darwincore::occurrence::instancemethods#coordinateuncertaintyinmeters()","observationshelper#coordinate_system_select_options()","site#coordinate_systems()","observation#coordinates_changed?()","observation#coordinates_obscured()","observation#coordinates_obscured?()","observation#coordinates_private?()","projectobservation#coordinates_shareable_by_project_curators?()","observation#coordinates_viewable_by?()","rubypicasa::photo::point#coords()","shared::licensemodule#copyrighted?()","darwincore::simplemultimedia::instancemethods#core_id()","darwincore::vernacularname::instancemethods#core_id()","localphoto#could_be_public()","messagescontroller#count()","gonzo::acts::flaggable::instancemethods#count_flags_with_flag()","taxon::count_taxa_in_rank()","darwincore::occurrence::instancemethods#countrycode()","darwincore::vernacularname::instancemethods#countrycode()","userscontroller#counts_for_users()","project#cover_dimensions()","taxonframework#covers?()","annotationscontroller#create()","announcementscontroller#create()","assessmentscontroller#create()","atlasescontroller#create()","checklistscontroller#create()","commentscontroller#create()","completesetscontroller#create()","computervisiondemouploadscontroller#create()","conservationstatusescontroller#create()","controlledtermlabelscontroller#create()","controlledtermvaluescontroller#create()","controlledtermscontroller#create()","curatorapplicationscontroller#create()","customprojectscontroller#create()","datapartnerscontroller#create()","explodedatlasplacescontroller#create()","flagscontroller#create()","flowtaskscontroller#create()","guidephotoscontroller#create()","guiderangescontroller#create()","guidesectionscontroller#create()","guidetaxacontroller#create()","guidescontroller#create()","identificationscontroller#create()","listedtaxacontroller#create()","messagescontroller#create()","moderatoractionscontroller#create()","moderatornotescontroller#create()","oauthapplicationscontroller#create()","oauthtokenscontroller#create()","observationfieldvaluescontroller#create()","observationfieldscontroller#create()","observationphotoscontroller#create()","observationsoundscontroller#create()","observationscontroller#create()","photoscontroller#create()","placescontroller#create()","postscontroller#create()","projectassetscontroller#create()","projectobservationscontroller#create()","projectuserinvitationscontroller#create()","projectscontroller#create()","providerauthorizationscontroller#create()","relationshipscontroller#create()","savedlocationscontroller#create()","shared::listsmodule#create()","siteadminscontroller#create()","sitescontroller#create()","soundscontroller#create()","sourcescontroller#create()","subscriptionscontroller#create()","taxacontroller#create()","taxonchangetaxacontroller#create()","taxonchangescontroller#create()","taxoncuratorscontroller#create()","taxonframeworkrelationshipscontroller#create()","taxonframeworkscontroller#create()","taxonlinkscontroller#create()","taxonnamescontroller#create()","taxonphotoscontroller#create()","taxonrangescontroller#create()","taxonschemetaxacontroller#create()","tripscontroller#create()","userblockscontroller#create()","usermutescontroller#create()","userparentscontroller#create()","users::registrationscontroller#create()","users::sessionscontroller#create()","observationfieldvalue#create_annotation()","oauthapplicationscontroller#create_app_owner_application()","hassubscribers::classmethods#create_callback()","goal#create_community_goal_participants()","placetaxonname::create_country_records_from_lexicons()","observation#create_deleted_observation()","sound#create_deleted_sound()","user#create_deleted_user()","user::create_from_omniauth()","taxonrange#create_geom_from_kml_attachment()","guide#create_guide_user()","taxonrange#create_kml_attachment()","taxon#create_matching_taxon_name()","identification#create_observation_review()","observation#create_observation_review()","providerauthorization#create_photo_identity()","projectobservationfield#create_project_rule()","providerauthorization#create_sound_identity()","friendship#create_subscription_after_update()","project#create_the_project_list()","projectuserinvitation#create_update_for_user()","darwincore::observationfields::instancemethods#created()","darwincore::projectobservations::instancemethods#created()","darwincore::simplemultimedia::instancemethods#created()","darwincore::user::instancemethods#created()","darwincore::vernacularname::instancemethods#created()","shared::licensemodule#creative_commons?()","darwincore::eolmedia::instancemethods#creator()","darwincore::simplemultimedia::instancemethods#creator()","inatcontenttypedetector#css?()","observationsexportflowtask#csv_archive()","assessment#curated_by?()","project#curated_by?()","taxon#curated_taxon_framework?()","observationscontroller#curation()","taxacontroller#curation()","userscontroller#curation()","emailer#curator_application()","applicationhelper#curator_of?()","applicationcontroller#curator_required()","project#curators()","applicationcontroller#current_preferences()","taxon#current_synonymous_taxa()","taxon#current_synonymous_taxa_from_split()","taxon#current_synonymous_taxon()","applicationhelper#current_url()","applicationcontroller#current_user()","authenticatedsystem#current_user()","authenticatedsystem#current_user=()","taxon#current_user_curates_taxon?()","emailer#custom_email()","place#custom_errors()","userscontroller#dashboard()","userscontroller#dashboard_updates()","darwincore::vernacularname::data()","darwincore::observationfields::instancemethods#datatype()","taxondescribers::amphibiaweb#data_for_name()","eolservice#data_objects()","taxondescribers::eol#data_objects_from_page()","darwincore::occurrence::instancemethods#datasetname()","darwincore::occurrence::instancemethods#dateidentified()","elasticmodel::date_details()","observation#date_observed_must_be_before_date_created()","observation#datetime()","darwincore::occurrence::instancemethods#decimallatitude()","darwincore::occurrence::instancemethods#decimallongitude()","jsonwebtoken::decode()","jsonwebtoken::decodeapplication()","observation::dedupe_for_user()","site::default()","guidetaxon#default_guide_photo()","observationfield::default_json_options()","photo::default_json_options()","project::default_json_options()","projectobservationfield::default_json_options()","taxon::default_json_options()","user::default_json_options()","taxon#default_name()","place#default_observation_precision()","taxon#default_photo()","taxahelper#default_taxon_name()","fakeview#default_url_options()","comment#deletable_by?()","flag#deletable_by?()","taxonlink#deletable_by?()","userscontroller#delete()","updateaction::delete_and_purge()","observationscontroller#delete_batch()","observation#delete_observations_places()","project::delete_project_observations_on_leave_project()","hassubscribers::instancemethods#delete_subscriptions()","hassubscribers::instancemethods#delete_update_actions()","taxon#deleteable_by?()","admincontroller#deleted_users()","userparent#deliver_confirmation_email_if_donor_verified()","message#deliver_email()","placedenormalizer::denormalize()","taxonrange#derive_missing_values()","darwincore::eolmedia::instancemethods#derivedfrom()","taxondescribers::base#desc()","place#descendant_conditions()","taxon#descendant_conditions()","taxon#descendant_of?()","taxon#descendants_count()","taxacontroller#describe()","taxondescribers::describe()","taxondescribers::amphibiaweb#describe()","taxondescribers::base#describe()","taxondescribers::conabio::describe()","taxondescribers::eol#describe()","taxondescribers::inaturalist#describe()","taxondescribers::wikipedia#describe()","taxondescribers::base#describer_name()","taxondescribers::conabio::describer_name()","taxondescribers::eol::describer_name()","taxondescribers::inaturalist#describer_name()","taxondescribers::wikipediaes::describer_name()","taxondescribers::wikipediafr::describer_name()","darwincore::eolmedia::instancemethods#description()","darwincore::vernacularname::descriptor()","annotationscontroller#destroy()","announcementscontroller#destroy()","assessmentscontroller#destroy()","atlasescontroller#destroy()","commentscontroller#destroy()","completesetscontroller#destroy()","conservationstatusescontroller#destroy()","controlledtermlabelscontroller#destroy()","controlledtermvaluescontroller#destroy()","controlledtermscontroller#destroy()","customprojectscontroller#destroy()","datapartnerscontroller#destroy()","explodedatlasplacescontroller#destroy()","flagscontroller#destroy()","flowtaskscontroller#destroy()","friendshipscontroller#destroy()","guidephotoscontroller#destroy()","guiderangescontroller#destroy()","guidesectionscontroller#destroy()","guidetaxacontroller#destroy()","guidescontroller#destroy()","identificationscontroller#destroy()","listedtaxacontroller#destroy()","messagescontroller#destroy()","moderatornotescontroller#destroy()","oauthapplicationscontroller#destroy()","oauthauthorizedapplicationscontroller#destroy()","observationfieldvaluescontroller#destroy()","observationfieldscontroller#destroy()","observationphotoscontroller#destroy()","observationsoundscontroller#destroy()","observationscontroller#destroy()","photoscontroller#destroy()","placescontroller#destroy()","postscontroller#destroy()","projectassetscontroller#destroy()","projectobservationscontroller#destroy()","projectuserinvitationscontroller#destroy()","projectscontroller#destroy()","providerauthorizationscontroller#destroy()","savedlocationscontroller#destroy()","shared::listsmodule#destroy()","siteadminscontroller#destroy()","sitescontroller#destroy()","sourcescontroller#destroy()","subscriptionscontroller#destroy()","taxacontroller#destroy()","taxonchangetaxacontroller#destroy()","taxonchangescontroller#destroy()","taxoncuratorscontroller#destroy()","taxonframeworkrelationshipscontroller#destroy()","taxonframeworkscontroller#destroy()","taxonlinkscontroller#destroy()","taxonnamescontroller#destroy()","taxonrangescontroller#destroy()","taxonschemetaxacontroller#destroy()","tripscontroller#destroy()","userblockscontroller#destroy()","usermutescontroller#destroy()","userparentscontroller#destroy()","users::sessionscontroller#destroy()","userscontroller#destroy()","votescontroller#destroy()","atlasescontroller#destroy_all_alterations()","observationfieldvalue#destroy_annotation()","userblock#destroy_friendships()","user#destroy_messages_by_suspended_user()","guidephoto#destroy_orphan_photo()","observationphoto#destroy_orphan_photo()","taxonphoto#destroy_orphan_photo()","photo::destroy_orphans()","sound::destroy_orphans()","providerauthorization#destroy_photo_identity()","projectobservationfield#destroy_project_rule()","place#destroy_project_rules()","project#destroy_project_rules()","user#destroy_project_rules()","taxonrange#destroy_range?()","completesetscontroller#destroy_relevant_listings()","providerauthorization#destroy_sound_identity()","taxonnamescontroller#destroy_synonyms()","projectuserinvitation#destroy_updates()","admincontroller#destroy_user_content()","inatcontenttypedetector#detect()","taxon#detect_clashes()","observation#device_name()","observation#device_url()","devisemailer#devise_mail()","announcementscontroller#dismiss()","announcement#dismissed_by?()","user#display_donor_since()","listedtaxahelper#display_list_title()","assessment#display_name()","place#display_name()","assessmentsection#display_title()","observation#distinct_taxon()","defaultformbuilder#dom_id()","user#donor?()","userparent#donor?()","yearstatistic::donors()","place#double_check_index()","wikipage#downcase_path()","datapartnerlinkers::gbif#download()","soundcloudsound#download()","cloudfrontlogparser#download_cloudfront_log()","user#download_remote_icon()","post#draft?()","taxonchange#draft?()","compressedyamlcolumn::dump()","project#duplicate()","site#dwc_creator()","darwincore::helpers#dwc_filter_text()","darwincore::occurrence::instancemethods#dwc_license()","darwincore::simplemultimedia::instancemethods#dwc_license()","darwincore::vernacularname::instancemethods#dwc_source()","darwincore::occurrence::instancemethods#dwc_taxon()","darwincore::simplemultimedia::instancemethods#dwc_type()","darwincore::occurrence::instancemethods#dwc_use_community_taxon()","datapartner#dwca_frequency_allowed()","denormalizer::each_taxon_batch_with_index()","listedtaxon::earliest_and_latest_ids()","userprivilege::earned_coordinate_access?()","userprivilege::earned_organizer?()","userprivilege::earned_speech?()","privileges::classmethods#earns_privilege()","announcementscontroller#edit()","assessmentscontroller#edit()","atlasescontroller#edit()","checklistscontroller#edit()","commentscontroller#edit()","completesetscontroller#edit()","conservationstatusescontroller#edit()","controlledtermscontroller#edit()","customprojectscontroller#edit()","datapartnerscontroller#edit()","guidephotoscontroller#edit()","guiderangescontroller#edit()","guidesectionscontroller#edit()","guidetaxacontroller#edit()","guidescontroller#edit()","identificationscontroller#edit()","moderatornotescontroller#edit()","oauthapplicationscontroller#edit()","observationfieldscontroller#edit()","observationscontroller#edit()","placescontroller#edit()","postscontroller#edit()","projectassetscontroller#edit()","projectscontroller#edit()","shared::listsmodule#edit()","sitescontroller#edit()","sourcescontroller#edit()","subscriptionscontroller#edit()","taxacontroller#edit()","taxonchangetaxacontroller#edit()","taxonchangescontroller#edit()","taxoncuratorscontroller#edit()","taxonframeworkrelationshipscontroller#edit()","taxonframeworkscontroller#edit()","taxonlinkscontroller#edit()","taxonnamescontroller#edit()","taxonrangescontroller#edit()","taxonschemetaxacontroller#edit()","tripscontroller#edit()","userscontroller#edit()","userscontroller#edit_after_auth()","wikipagescontroller#edit_allowed?()","observationscontroller#edit_batch()","observationscontroller#edit_photos()","applicationhelper#edit_post_path()","guidesection#editable?()","checklist#editable_by?()","googlestreetviewphoto#editable_by?()","guide#editable_by?()","list#editable_by?()","listedtaxon#editable_by?()","moderatornote#editable_by?()","observationfield#editable_by?()","photo#editable_by?()","place#editable_by?()","post#editable_by?()","project#editable_by?()","projectlist#editable_by?()","site#editable_by?()","sound#editable_by?()","source#editable_by?()","taxon#editable_by?()","taxonchange#editable_by?()","actsaselasticmodel#elastic_delete!()","actsaselasticmodel::elastic_delete_by_ids!()","actsaselasticmodel::elastic_index!()","actsaselasticmodel#elastic_index!()","actsaselasticmodel::elastic_paginate()","actsaselasticmodel::elastic_prune()","observationsearch::classmethods#elastic_query()","actsaselasticmodel::elastic_search()","actsaselasticmodel::elastic_sync()","observationsearch::classmethods#elastic_taxon_leaf_counts()","observationsearch::classmethods#elastic_taxon_leaf_ids()","observationsearch::classmethods#elastic_user_observation_counts()","observationsearch::classmethods#elastic_user_taxon_counts()","observationsearch::classmethods#elastic_user_taxon_counts_batch()","elasticmodel::elasticsearch_is_running?()","elasticmodel::elasticsearch_url()","user#email=()","userparent#email_does_not_belong_to_another_user()","observationscontroller#email_export()","user#email_required?()","user#email_suppressed_in_group?()","updateaction::email_updates()","updateaction::email_updates_to_user()","projectuserinvitation#email_user()","applicationcontroller#enable_replica()","jsonwebtoken::encode()","yearstatistic::end_of_month()","project#end_time=()","goal#ended?()","listedtaxon#endemic?()","observation#englishize_month_abbrevs_for_locale()","observationsexportflowtask#enqueue_options()","user::enqueue_photo_bucket_moving_jobs()","taxon#ensure_parent_ancestry_in_ancestry()","userscontroller#ensure_user_is_current_user_or_admin()","elasticmodel::envelope_filter()","guideeolupdateflowtask#eol()","guidetaxon#eol_page_id()","taxondescribers::eol#eol_service()","errorscontroller#error_404()","errorscontroller#error_422()","errorscontroller#error_500()","applicationhelper#errors_for_hidden_fields()","yearstatistic#est_max_obs_distances()","applicationhelper#establishment_blob()","listedtaxon#establishment_means_allowed()","listedtaxon#establishment_means_description()","taxon#establishment_means_in_place?()","listedtaxon#establishment_means_label()","darwincore::occurrence::instancemethods#eventdate()","darwincore::occurrence::instancemethods#eventtime()","project#event_ended?()","project#event_in_progress?()","project#event_started?()","project#eventbrite_id()","listedtaxon#existing_comprehensive_list()","listedtaxon#existing_comprehensive_listed_taxon()","guide#expire_caches()","listedtaxon#expire_caches()","projectobservation#expire_caches()","taxonphoto#expire_caches()","listedtaxon::expire_caches_for()","shared::sweepersmodule#expire_listed_taxa()","shared::sweepersmodule#expire_listed_taxon()","shared::sweepersmodule#expire_taxon()","frequencycell::export()","observationscontroller#export()","sitedataexporter#export()","sitescontroller#export()","observationsexportflowtask#export_columns()","observationsexportflowtask#export_output()","site#export_path()","frequencycell::export_taxa()","darwincore::archive#extension_paths()","exifmetadata#extract()","localphoto#extract_dimensions()","computervisiondemoupload#extract_metadata()","localphoto#extract_metadata()","facebookcontroller#facebook_albums()","user#facebook_api()","facebookcontroller#facebook_friends()","facebookcontroller#facebook_groups()","user#facebook_identity()","user#facebook_token()","admin::delayedjobscontroller#failed()","providerauthorizationscontroller#failure()","classmatchers::bea#failure_message()","classmatchers::behavelikea#failure_message()","rakismet::fake_environment_variables()","fakeview::fake_instance()","taxondescribers::base#fake_view()","darwincore::occurrence::instancemethods#family()","darwincore::taxon::instancemethods#family()","observation#faves_count()","applicationhelper#favicon_url_for()","projectscontroller#feature()","applicationhelper#feature_test()","rubypicasa::base#feed()","flickrcache::fetch()","facebookphoto::fetch_from_fb_group()","metaservice::fetch_request_uri()","metaservice::fetch_with_redirects()","darwincore::observationfields::instancemethods#fieldid()","darwincore::observationfields::instancemethods#fieldname()","observationshelper#field_value_example()","observationscontroller#fields()","observation#fields_addable_by?()","localphoto#file=()","localsound#file=()","darwincore::vernacularname::file_names()","ratatosk::find()","ratatosk::nameproviders::colnameprovider#find()","ratatosk::nameproviders::nzornameprovider#find()","ratatosk::nameproviders::ubionameprovider#find()","ratatosk::ratatosk#find()","taxonchange#find_batched_records_of()","wikipage::find_by_path()","darwincore::taxon::instancemethods#find_class_name()","taxon::find_duplicates()","ratatosk::find_existing_taxon()","ratatosk::ratatosk#find_existing_taxon()","taxonname::find_external()","flag::find_flaggable()","flag::find_flags_by_user()","gonzo::acts::flaggable::singletonmethods#find_flags_by_user()","gonzo::acts::flaggable::singletonmethods#find_flags_for()","flag::find_flags_for_flaggable()","user::find_for_authentication()","providerauthorization::find_from_omniauth()","taxonname::find_lexicons_by_translation()","checklist#find_listed_taxa_and_ancestry_as_hashes()","checklist#find_listed_taxa_and_ancestry_on_other_lists_as_hashes()","observation::find_observations_of()","project#find_observed_and_total_for_project()","taxonname::find_single()","taxonframeworkrelationshipscontroller#find_taxon_framework_relationship()","userscontroller#find_user()","darwincore::occurrence::instancemethods#first_improving_identification()","sitestatistic::first_stat()","controlledterm::first_term_by_label()","updateaction::first_with_attributes()","photoscontroller#fix()","observationfieldvalue#fix_annotation_after_update()","flagshelper#flag_actions()","flagshelper#flag_content()","flagshelper#flag_content_author()","flagshelper#flag_flagger()","flag#flag_not_about_duplicate()","flagshelper#flag_resolution()","flag#flaggable_content_viewable_by?()","flagshelper#flaggable_edit()","flag#flaggable_type_valid()","flagshelper#flaggable_user()","flagshelper#flaggable_with_body()","gonzo::acts::flaggable::instancemethods#flagged()","flag#flagged_object()","comment#flagged_with()","identification#flagged_with()","message#flagged_with()","observation#flagged_with()","photo#flagged_with()","project#flagged_with()","sound#flagged_with()","taxon#flagged_with()","user#flagged_with()","actsasspammable::user#flags_on_spam_content()","applicationhelper#flexible_post_path()","applicationhelper#flexible_post_url()","applicationhelper#flickr_buddyicon()","taxacontroller#flickr_photos_tagged()","taxacontroller#flickr_tagger()","flickrphoto::flickraw_for_user()","flowtaskshelper#flow_task_redirect_url()","user#followees()","user#followers()","userscontroller#followers()","userscontroller#following()","observationsexportflowtask#for_each_observation()","postscontroller#for_project_user()","postscontroller#for_user()","user::forget()","passwordmailer#forgot_password()","bootstrapformbuilder#form_field()","defaultformbuilder#form_field()","darwincore::eolmedia::instancemethods#format()","darwincore::simplemultimedia::instancemethods#format()","applicationhelper#formatted_error_sentence_for()","applicationhelper#formatted_user_text()","applicationhelper#friend_button()","usershelper#friend_link()","user#friends_observations()","user#friends_with?()","source::from_eol_data_object()","sphericalmercator#from_ll_to_pixel()","sphericalmercator#from_ll_to_world_coordinate()","sound::from_observation_params()","sphericalmercator#from_pixel_to_ll()","message#from_user_copy()","darwincore::eolmedia::instancemethods#furtherinformationurl()","darwincore::occurrence::instancemethods#gbif_lifestage()","darwincore::occurrence::instancemethods#gbif_sex()","darwincore::archive::generate()","darwincore::archive#generate()","project#generate_bulk_upload_template()","list#generate_csv()","observation::generate_csv()","project#generate_csv()","user#generate_csv()","list#generate_csv_cache_key()","observation::generate_csv_for()","observation::generate_csv_for_cache_key()","datapartner#generate_dwca()","datapartner::generate_dwcas()","datapartner::generate_dwcas_with_logger()","yearstatistic::generate_for_site_year()","yearstatistic::generate_for_user_year()","yearstatistic::generate_for_year()","guide#generate_ngz()","guide#generate_ngz_cache_key()","guide#generate_ngz_if_necessary()","guide#generate_ngz_later()","darwincore::archive::generate_ranked_ancestors()","yearstatistic#generate_shareable_image()","yearstatistic#generate_shareable_image_no_obs()","yearstatistic#generate_shareable_image_obs_grid()","sitestatistic::generate_stats_for_date_range()","sitestatistic::generate_stats_for_day()","statscontroller#generate_year()","datapartnerlinkers::gbif#generating()","darwincore::occurrence::instancemethods#genus()","darwincore::taxon::instancemethods#genus()","darwincore::occurrence::instancemethods#geodeticdatum()","inatapiservice::geoip_lookup()","placegeometry#geom()","elasticmodel::geom_geojson()","place#geom_in_elastic_index?()","placescontroller#geometry()","taxon#geoprivacy()","observation#geoprivacy_obscured?()","observation#geoprivacy_private?()","applicationhelper#geoprivacy_with_consistent_case()","observation#georeferenced?()","projectobservation#georeferenced?()","inatapiservice::get()","mushroomobserverimportflowtask#get()","eolphoto::get_api_response()","facebookphoto::get_api_response()","flickrphoto::get_api_response()","googlestreetviewphoto::get_api_response()","photo::get_api_response()","picasaphoto::get_api_response()","wikimediacommonsphoto::get_api_response()","atlas#get_atlas_presence_place_listed_taxa()","datapartnerlinkers::calflora#get_calflora_rows()","observation#get_community_taxon()","taxon#get_complete_taxon_framework_for_internode_or_root()","checklist::get_current_place_ids_to_refresh()","atlasescontroller#get_defaults_for_taxon_place()","listedtaxon::get_defaults_for_taxon_place()","taxondescribers::get_describer()","taxonframework#get_downstream_taxon_frameworks()","taxonframework#get_downstream_taxon_frameworks_count()","guidetaxon#get_eol_page()","atlas#get_exploded_place_ids_to_include_and_exclude()","flag#get_flaggable_user()","taxonframework#get_flagged_taxa()","taxonframework#get_flagged_taxa_count()","applicationcontroller#get_flickraw()","taxon#get_gbif_id()","ratatosk::ratatosk#get_graft_point_for()","taxonsplit#get_id_count_and_obs()","taxon::get_internal_taxa_covered_by()","taxonframework#get_internal_taxa_covered_by_taxon_framework()","ratatosk::nameproviders::coltaxonnameadapter#get_is_valid()","ratatosk::nameproviders::nzortaxonnameadapter#get_is_valid()","ratatosk::nameproviders::ubiotaxonnameadapter#get_is_valid()","inatapiservice::get_json()","ratatosk::nameproviders::ubionameprovider#get_keepers()","user#get_lat_lon_from_ip()","user#get_lat_lon_from_ip_if_last_ip_changed()","ratatosk::nameproviders::coltaxonnameadapter#get_lexicon()","ratatosk::nameproviders::nzortaxonnameadapter#get_lexicon()","ratatosk::nameproviders::ubiotaxonnameadapter#get_lexicon()","ratatosk::nameproviders::colnameprovider#get_lineage_for()","ratatosk::nameproviders::nzornameprovider#get_lineage_for()","ratatosk::nameproviders::ubionameprovider#get_lineage_for()","userscontroller#get_local_onboarding_content()","ratatosk::nameproviders::ubiotaxonadapter#get_name()","ratatosk::nameproviders::ubiotaxonnameadapter#get_name()","ratatosk::nameproviders::ubiotaxonadapter#get_namebank_id()","ratatosk::nameproviders::ubiotaxonnameadapter#get_namebank_id()","userscontroller#get_nearby_taxa_obs_counts()","checklist::get_observation_to_refresh()","checklist::get_old_place_ids_to_refresh()","ratatosk::nameproviders::colnameprovider#get_phylum_for()","ratatosk::nameproviders::nzornameprovider#get_phylum_for()","ratatosk::nameproviders::ubionameprovider#get_phylum_for()","observation#get_quality_grade()","completesetscontroller#get_relevant_listings()","mushroomobserverimportflowtask#get_results_xml()","observationsearch::classmethods#get_search_params()","completeset#get_taxa_for_place_taxon()","ratatosk::nameproviders::coltaxonnameadapter#get_taxon()","ratatosk::nameproviders::nzortaxonnameadapter#get_taxon()","ratatosk::nameproviders::ubiotaxonnameadapter#get_taxon()","newzealandorganismsregister#get_taxon_for_nzor_id()","checklist::get_taxon_ids_to_refresh()","taxonframework#get_unassigned_taxa()","taxon#get_upstream_taxon_framework()","eolservice#get_uri()","picasa#get_url()","helpcontroller#getting_started()","taxon#global_conservation_status()","taxon#globally_threatened?()","goalcontribution#goal_must_not_have_ended()","placeshelper#google_charts_map_for_places()","applicationhelper#google_maps_js()","site#google_oauth_allowed?()","applicationhelper#google_static_map_for_observation_url()","placeshelper#google_static_map_for_place()","placeshelper#google_static_map_for_place_url()","ratatosk::graft()","ratatosk::ratatosk#graft()","taxacontroller#graft()","taxon#graft()","ratatosk::ratatosk#graft_point_and_lineage()","taxon#graft_silently()","taxon#graftable_destination_relative_to_taxon_framework_coverage()","taxon#graftable_relative_to_taxon_framework_coverage()","taxon#grafted?()","admincontroller#grant_user_privilege()","facebookcontroller#group()","taxonchangescontroller#group()","updateaction::group_and_sort()","listscontroller#guide()","placescontroller#guide()","guideshelper#guide_asset_filename()","place::guide_cache_key()","guidetaxon#guide_photo_for_tag()","guideshelper#guide_taxa_from_params()","listscontroller#guide_widget()","placescontroller#guide_widget()","ambidextrous#haml_pretty()","taxon#handle_after_activate()","taxon#handle_after_move()","taxonframework#handle_change_in_completeness()","authenticatedsystem#handle_remember_cookie!()","projectobservation#has_a_photo?()","projectobservation#has_a_sound?()","taxon#has_ancestor_taxon_id()","listedtaxon#has_atlas_or_complete_set?()","taxonswap#has_inputs_and_outputs()","projectobservation#has_media?()","taxonmerge#has_more_than_one_input()","taxonsplit#has_more_than_one_output()","taxonstage#has_no_inputs()","taxondrop#has_no_outputs()","projectobservation#has_observation_field?()","user#has_provider_auth()","user#has_role?()","ruler::classmethods#has_rules_for()","hassubscribers::classmethods#has_subscribers()","applicationhelper#has_t?()","i18nextensions#has_t?()","projectuser#has_time_zone?()","user::header_cache_key_for()","user#header_projects()","applicationhelper#helptip()","applicationhelper#helptip_for()","applicationhelper#hidden_fields_for_params()","observation#hide_coordinates()","taxacontroller#history()","wikipagescontroller#history_allowed?()","site#home_page_wiki_path_by_locale()","picasa::host()","picasa::host=()","applicationhelper#html_attributize()","observation#human?()","applicationhelper#hyperlink_mentions()","list::icon_preview_cache_key()","guide#icon_url()","project#icon_url()","site#icon_url()","user#icon_url_provided?()","yearstatistic::iconic_taxa_counts()","observationsearch::classmethods#iconic_taxa_param_to_instances()","taxahelper#iconic_taxon_color()","applicationhelper#iconic_taxon_color_for()","applicationhelper#iconic_taxon_colors()","taxahelper#iconic_taxon_image()","taxahelper#iconic_taxon_image_url()","observation#iconic_taxon_name()","taxon#iconic_taxon_name()","actsasuuidable#id=()","applicationhelper#id_for()","fileextension::id_for_extension()","fileprefix::id_for_prefix()","elasticmodel::id_or_object()","darwincore::occurrence::instancemethods#identificationid()","darwincore::occurrence::instancemethods#identificationremarks()","darwincore::occurrence::instancemethods#identificationverificationstatus()","yearstatistic::identification_counts_by_category()","yearstatistic::identification_counts_by_iconic_taxon()","inatapiservice::identifications()","observation::identifications()","inatapiservice::identifications_categories()","yearstatistic::identifications_es_base_params()","yearstatistic::identifications_histogram()","projectobservation#identified?()","darwincore::occurrence::instancemethods#identifiedby()","darwincore::occurrence::instancemethods#identifiedbyid()","darwincore::eolmedia::instancemethods#identifier()","darwincore::simplemultimedia::instancemethods#identifier()","darwincore::taxon::instancemethods#identifier()","observationscontroller#identify()","observationscontroller#identotron()","wikipageattachment#image?()","applicationhelper#image_and_content()","applicationhelper#image_url()","observation#image_url()","taxon#image_url()","mushroomobserverimportflowtask#images_from_result()","guiderangescontroller#import()","guidesectionscontroller#import()","observationscontroller#import()","taxon::import()","bulkobservationfile#import_file()","guiderangescontroller#import_from_eol()","place::import_from_shapefile()","taxon::import_or_create()","observationscontroller#import_photos()","observationscontroller#import_sounds()","guidescontroller#import_tags_from_csv()","guidescontroller#import_tags_from_csv_template()","guide#import_taxa()","guidescontroller#import_taxa()","identification#in_agreement_with?()","observation#in_collection_projects?()","applicationhelper#in_format()","apiendpointcache#in_progress?()","projectobservation#in_project?()","localphoto#in_public_s3_bucket?()","projectobservation#in_taxon?()","taxon#in_taxon?()","user#in_test_group?()","observation#inaccurate_location?()","darwincore::occurrence::instancemethods#inaturalistlogin()","oauthapplication::inaturalist_android_app()","oauthapplication::inaturalist_iphone_app()","authenticatedsystem::included()","hassubscribers::included()","observationsearch::included()","privileges::included()","privileges::controller::included()","ruler::included()","shared::licensemodule::included()","shared::mailermodule::included()","shared::touchesobservationmodule::included()","admin::delayedjobscontroller#index()","admincontroller#index()","announcementscontroller#index()","appleappsiteassociationcontroller#index()","assessmentscontroller#index()","atlasescontroller#index()","calendarscontroller#index()","checklistscontroller#index()","commentscontroller#index()","computervisiondemocontroller#index()","conservationstatusescontroller#index()","controlledtermscontroller#index()","datapartnerscontroller#index()","donatecontroller#index()","facebookcontroller#index()","flagscontroller#index()","flowtaskscontroller#index()","friendshipscontroller#index()","guidephotoscontroller#index()","guiderangescontroller#index()","guidesectionscontroller#index()","guidetaxacontroller#index()","guidescontroller#index()","helpcontroller#index()","identificationscontroller#index()","listedtaxacontroller#index()","messagescontroller#index()","oauthapplicationscontroller#index()","observationfieldvaluescontroller#index()","observationfieldscontroller#index()","observationscontroller#index()","placescontroller#index()","postscontroller#index()","projectscontroller#index()","savedlocationscontroller#index()","searchcontroller#index()","shared::listsmodule#index()","sitescontroller#index()","soundcloudsoundscontroller#index()","sourcescontroller#index()","statscontroller#index()","subscriptionscontroller#index()","taxacontroller#index()","taxonchangescontroller#index()","taxonframeworkrelationshipscontroller#index()","taxonlinkscontroller#index()","taxonnamescontroller#index()","taxonschemescontroller#index()","translationscontroller#index()","tripscontroller#index()","userparentscontroller#index()","userscontroller#index()","welcomecontroller#index()","controlledterm#index_attributes()","controlledtermtaxon#index_controlled_term()","elasticmodel::index_exists?()","shared::licensemodule#index_license_code()","annotation#index_observation()","observationfieldvalue#index_observation()","photo#index_observations()","sound#index_observations()","taxon#index_observations()","user#index_observations()","observation::index_observations_for_user()","user#index_observations_later()","comment#index_parent()","projectuser#index_project()","sitefeaturedproject#index_project()","photo#index_taxa()","taxon::index_taxa()","atlas#index_taxon()","conservationstatus#index_taxon()","listedtaxon#index_taxon()","taxonchange#index_taxon()","taxonchangetaxon#index_taxon()","taxonname#index_taxon()","taxonphoto#index_taxon()","goalcontribution#inform_goal_of_new_contribution()","darwincore::occurrence::instancemethods#informationwithheld()","taxon#infraspecies?()","darwincore::taxon::instancemethods#infraspecificepithet()","taxonchange#input_taxa()","taxonmerge#input_taxa()","taxonstage#input_taxa()","taxonswap#input_taxa()","taxonsplit#input_taxon()","taxonswap#input_taxon()","darwincore::occurrence::instancemethods#institutioncode()","observation#interpolate_coordinates()","observation#intersecting_places()","listedtaxon#introduced?()","cloudfrontinvalidator#invalidate_cloudfront_cache_for()","cloudfrontinvalidator#invalidate_cloudfront_caches()","projectscontroller#invite()","project#invite_only?()","user::ip_address_is_often_suspended()","listedtaxon#is_absent?()","ratatosk::nameproviders::coltaxonnameadapter#is_accepted_sciname?()","applicationhelper#is_admin?()","projectuser#is_admin?()","user#is_admin?()","identification#is_agreement?()","flag#is_akismet_spam_flag?()","ambidextrous#is_android_app?()","user#is_app_owner?()","taxonsplit#is_branching?()","ratatosk::nameproviders::coltaxonnameadapter#is_comname?()","ratatosk::nameproviders::nzortaxonnameadapter#is_comname?()","ratatosk::nameproviders::ubiotaxonnameadapter#is_comname?()","applicationhelper#is_curator?()","projectuser#is_curator?()","user#is_curator?()","checklist#is_default?()","identification#is_disagreement?()","guidesection#is_imported()","ambidextrous#is_inaturalistjs_request?()","ambidextrous#is_iphone_app?()","ambidextrous#is_iphone_app_2?()","projectuser#is_manager?()","applicationhelper#is_me?()","ambidextrous#is_mobile_app?()","project#is_new_project?()","applicationhelper#is_not_me?()","listedtaxon#is_present?()","ratatosk::nameproviders::nzortaxonnameadapter#is_sciname?()","ratatosk::nameproviders::ubiotaxonnameadapter#is_sciname?()","applicationhelper#is_site_admin?()","user#is_site_admin_of?()","picasa::is_url?()","conservationstatus#iucn_name()","taxonrange#iucn_relationship_must_be_an_accepted_value()","taxonrangeshelper#iucn_relationship_text()","conservationstatus#iucn_status()","conservationstatus#iucn_status_code()","conservationstatuseshelper#iucn_status_select_options()","taxahelper#jit_taxon_node()","taxahelper#jit_taxon_tree_with_taxon()","object#job_can_use_replica()","projectscontroller#join()","userscontroller#join_test()","observationsexportflowtask#json_archive()","applicationhelper#json_escape()","applicationcontroller#json_request?()","flickrcache::json_to_flickraw()","observation#keep_old_taxon_id()","authenticatedsystem#kill_remember_cookie!()","darwincore::occurrence::instancemethods#kingdom()","darwincore::taxon::instancemethods#kingdom()","place#kml_url()","taxonrange#kml_url()","actsasspammable::user#known_non_spammer?()","activerecord::base#known_spam?()","controlledterm#label()","darwincore::vernacularname::instancemethods#language()","taxonname::language_for_locale()","guiderange#large_url()","photo#large_url()","darwincore::eolmedia::instancemethods#lat()","rubypicasa::photo::point#lat()","observation#lat_lon_in_place_guess?()","userscontroller#leaderboard()","taxon#leading_name()","yearstatistic::leaf_taxa_count()","applicationhelper#leaflet_js()","projectscontroller#leave()","userscontroller#leave_test()","shared::licensemodule#license_code()","observation#license_code=()","shared::licensemodule#license_code=()","shared::licensemodule::classmethods#license_code_for_number()","applicationhelper#license_name()","observation#license_name()","shared::licensemodule#license_name()","shared::licensemodule::classmethods#license_name_for_code()","shared::licensemodule::classmethods#license_number_for_code()","shared::licensemodule#license_short()","shared::licensemodule#license_url()","shared::licensemodule::classmethods#license_url_for_code()","shared::licensemodule::classmethods#license_url_for_number()","photo#licensed_if_no_user()","sound#licensed_if_no_user()","controlledterm::life_stage()","observationscontroller#lifelist_by_login()","applicationcontroller#limit_page_param_for_search()","applicationcontroller#limited_per_page()","rubypicasa::base#link()","applicationhelper#link_to()","applicationhelper#link_to_dialog()","applicationhelper#link_to_function()","applicationhelper#link_to_taxon()","applicationhelper#link_to_tip()","applicationhelper#link_to_toggle()","applicationhelper#link_to_toggle_box()","applicationhelper#link_to_toggle_menu()","usershelper#link_to_user()","datapartnerlinkers::linker_for()","taxacontroller#links()","projectscontroller#list()","project#list_observed_and_total()","listedtaxon#list_rules_pass()","checklist#listed_taxa_editable_by?()","list#listed_taxa_editable_by?()","projectlist#listed_taxa_editable_by?()","rubypicasa::photo::point#lng()","compressedyamlcolumn::load()","siteconfig::load()","updateaction::load_additional_activity_updates()","timezonegeometry::load_geojson_file()","applicationcontroller#load_record()","relationshipscontroller#load_record()","applicationcontroller#load_registration_form_data()","timezonegeometry::load_shapefile()","object#load_test_taxa()","lifelistscontroller#load_user()","applicationcontroller#load_user_by_login()","applicationhelper#loading()","photoscontroller#local_photo_fields()","photo::local_photo_from_remote_photo()","soundscontroller#local_sound_fields()","taxonname#locale_for_lexicon()","translationscontroller#locales()","darwincore::vernacularname::instancemethods#locality()","taxonname#localizable_lexicon()","taxonname::localizable_lexicon()","place#localized_name()","mushroomobserverimportflowtask#log()","listedtaxon#log_create()","listedtaxon#log_create_if_taxon_id_changed()","listedtaxon#log_destroy()","applicationcontroller#log_timer()","ambidextrous#logged_in?()","authenticatedsystem#logged_in?()","darwincore::archive#logger()","datapartnerlinkers::datapartnerlinker#logger()","modeladapter#logger()","observationsexportflowtask#logger()","user#login=()","admincontroller#login_as()","authenticatedtesthelper#login_as()","site#login_featured_observations()","authenticatedsystem#login_from_basic_auth()","authenticatedsystem#login_from_cookie()","authenticatedsystem#login_from_session()","authenticatedsystem#login_required()","authenticatedsystem#logout_keeping_session!()","authenticatedsystem#logout_killing_session!()","applicationcontroller#logstash_catchall()","darwincore::eolmedia::instancemethods#long()","darwincore::archive::lookup_taxa_for_obs_batch()","computervisiondemouploadscontroller#lookup_upload()","applicationhelper#lowercase_equivalent_model_name_for()","ubioservice#lsid()","applicationhelper#machine_tag_pieces()","paperclip::metadatafilter#make()","darwincore::archive#make_api_all_taxon_data()","darwincore::archive#make_archive()","darwincore::archive#make_data()","darwincore::archive#make_descriptor()","darwincore::archive#make_eol_media_data()","darwincore::archive#make_metadata()","darwincore::archive#make_observation_fields_file()","darwincore::archive#make_occurrence_file()","listedtaxon#make_primary_if_no_primary_exists()","darwincore::archive#make_project_observations_file()","darwincore::archive#make_simple_multimedia_file()","darwincore::archive#make_taxon_data()","darwincore::archive#make_user_file()","darwincore::archive#make_vernacular_names_data()","project#managers()","observationscontroller#map()","taxacontroller#map()","taxacontroller#map_layers()","observationsearch::classmethods#map_params_for_node_api()","placeshelper#map_zoom_for_place()","taxonschemescontroller#mapped_inactive_taxa()","atlas::mark_active_atlases_with_out_of_range_observations()","observation#mark_as_updated()","taxonframeworkrelationship#mark_external_taxa_for_destruction()","checklist#mark_non_comprehensive_listed_taxa_as_absent()","localphoto#mark_observations_as_updated()","applicationhelper#markdown()","taxon#match_descendants()","taxon::match_descendants_of_id()","classmatchers::bea#matches?()","classmatchers::behavelikea#matches?()","observation::matching_taxon_ids()","bulkobservationfile#max_attempts()","taxon::max_geoprivacy()","yearstatistic#max_obs_distances_for_user()","googlephotosapi#media_item()","googlephotosapi#media_items()","guiderange#medium_url()","photo#medium_url()","user#medium_user_icon_url()","applicationhelper#member_of?()","projectscontroller#members()","comment#mentioned_users()","identification#mentioned_users()","observation#mentioned_users()","post#mentioned_users()","taxonchange#mentioned_users()","listedtaxon#merge()","observation#merge()","observationfield#merge()","observationfieldscontroller#merge()","place#merge()","placescontroller#merge()","taxacontroller#merge()","taxon#merge()","user#merge()","userscontroller#merge()","user::merge_cleanup()","conservationstatus::merge_duplicates()","listedtaxon::merge_duplicates()","projectuser::merge_duplicates()","observationfieldscontroller#merge_field()","friendship::merge_future_duplicates()","identification::merge_future_duplicates()","observationreview::merge_future_duplicates()","observationsplace::merge_future_duplicates()","projectuser::merge_future_duplicates()","taxahelper#merge_taxa()","taxon#mergeable_by?()","photo#metadata()","catalogueoflife#method_missing()","eolservice#method_missing()","eolservice::method_missing()","fakeview::method_missing()","fakeview#method_missing()","guidephoto#method_missing()","metaservice#method_missing()","modeladapter#method_missing()","newzealandorganismsregister#method_missing()","observation#method_missing()","site#method_missing()","siteconfig::method_missing()","taxondescribers::base::method_missing()","qualitymetric#metric_can_be_assessed()","inatcontenttypedetector#mime_types_for_filename()","mushroomobserverimportflowtask#mo_name_observation_field()","mushroomobserverimportflowtask#mo_owner_name_observation_field()","mushroomobserverimportflowtask#mo_url_from_result()","mushroomobserverimportflowtask#mo_url_observation_field()","mushroomobserverimportflowtask#mo_user_id()","mushroomobserverimportflowtask#mo_user_name()","observation#mobile?()","authenticatedtesthelper#mock_user()","applicationhelper#modal_image()","user#moderated_with()","userscontroller#moderation()","darwincore::eolmedia::instancemethods#modified()","darwincore::observationfields::instancemethods#modified()","darwincore::occurrence::instancemethods#modified()","darwincore::projectobservations::instancemethods#modified()","darwincore::taxon::instancemethods#modified()","darwincore::user::instancemethods#modified()","guidesection#modified?()","observationscontroller#moimport()","emailer#moimport_finished()","applicationhelper#month_graph()","donatecontroller#monthly_supporters()","userscontroller#most_identifications()","userscontroller#most_observations()","userscontroller#most_species()","taxonchange#move_input_children_to_output()","taxon#move_to_child_of()","listedtaxon#multiple_primary_listed_taxa?()","annotation#multiple_values()","observation#munge_observed_on_with_chronic()","observation#must_be_in_the_past()","observationsexportflowtask#must_be_the_only_active_export()","externaltaxon#must_be_unique_to_taxon_framework()","goal#must_end_in_the_future()","observationsexportflowtask#must_have_query()","observationsexportflowtask#must_have_reasonable_number_of_rows()","guide#must_have_some_guide_taxa_to_publish()","observation#must_not_be_a_range()","observation#must_not_be_on_null_island()","userscontroller#mute()","taxondescribers::base#name()","taxondescribers::inaturalist#name()","ratatosk::name_providers()","taxon#name_with_rank()","listedtaxon#native?()","applicationhelper#native_url_for_photo()","conservationstatus#nature_serve_status_name()","observation#ne_latlon()","observation::near_place()","observation#needs_id?()","observation#needs_id_downvotes_count()","observation#needs_id_upvotes_count()","observation#needs_id_vote_score()","classmatchers::bea#negative_failure_message()","classmatchers::behavelikea#negative_failure_message()","placeshelper#nested_place_list()","sitescontroller#network()","announcementscontroller#new()","assessmentscontroller#new()","atlasescontroller#new()","bulkobservationfile::new()","bulkobservationfile::bulkobservationexception::new()","catalogueoflife::new()","checklistscontroller#new()","classmatchers::bea::new()","classmatchers::behavelikea::new()","cloudfrontaclupdater::new()","cloudfrontlogparser::new()","commentscontroller#new()","completesetscontroller#new()","conabioservice::new()","conservationstatusescontroller#new()","curatorapplicationscontroller#new()","customprojectscontroller#new()","darwincore::archive::new()","darwincore::descriptor::new()","darwincore::metadata::new()","datapartnerlinkers::datapartnerlinker::new()","datapartnerlinkers::gbif::new()","datapartnerscontroller#new()","eolservice::new()","exifmetadata::new()","fakeview::new()","flagscontroller#new()","flowtaskscontroller#new()","gbifservice::new()","googlephotosapi::new()","guidephotoscontroller#new()","guiderangescontroller#new()","guidesectionscontroller#new()","guidescontroller#new()","inatcontenttypedetector::new()","messagescontroller#new()","metaservice::new()","newzealandorganismsregister::new()","oauthapplicationscontroller#new()","observationfieldscontroller#new()","observationscontroller#new()","oldpreferences::new()","paperclip::metadatafilter::new()","picasa::new()","placescontroller#new()","postscontroller#new()","projectassetscontroller#new()","projectscontroller#new()","ratatosk::nameproviders::colnameprovider::new()","ratatosk::nameproviders::coltaxonadapter::new()","ratatosk::nameproviders::coltaxonnameadapter::new()","ratatosk::nameproviders::nzornameprovider::new()","ratatosk::nameproviders::nzortaxonadapter::new()","ratatosk::nameproviders::nzortaxonnameadapter::new()","ratatosk::nameproviders::ubionameprovider::new()","ratatosk::nameproviders::ubiotaxonadapter::new()","ratatosk::nameproviders::ubiotaxonnameadapter::new()","ratatosk::ratatosk::new()","shared::listsmodule#new()","sitedataexporter::new()","sitescontroller#new()","sourcescontroller#new()","sphericalmercator::new()","subscriptionscontroller#new()","taxacontroller#new()","taxonchangetaxacontroller#new()","taxonchangescontroller#new()","taxoncuratorscontroller#new()","taxondescribers::base::new()","taxondescribers::eol::new()","taxondescribers::wikipedia::new()","taxonframeworkrelationshipscontroller#new()","taxonframeworkscontroller#new()","taxonlinkscontroller#new()","taxonnamescontroller#new()","taxonphotoscontroller#new()","taxonrangescontroller#new()","taxonschemetaxacontroller#new()","tripscontroller#new()","ubioservice::new()","userparentscontroller#new()","wikimediacommonsservice::new()","wikipediaservice::new()","observationscontroller#new_batch()","observationscontroller#new_bulk_csv()","eolphoto::new_from_api_response()","facebookphoto::new_from_api_response()","flickrphoto::new_from_api_response()","googlestreetviewphoto::new_from_api_response()","photo::new_from_api_response()","picasaphoto::new_from_api_response()","soundcloudsound::new_from_api_response()","wikimediacommonsphoto::new_from_api_response()","guidetaxon::new_from_eol_collection_item()","guiderange::new_from_eol_data_object()","guidesection::new_from_eol_data_object()","flickrphoto::new_from_flickraw()","observationscontroller#new_from_list()","sound::new_from_native_sound_id()","soundcloudsound::new_from_native_sound_id()","place::new_from_shape()","emailer#new_message()","messagescontroller#new_messages()","bulkobservationfile#new_observation()","placesources::new_place_from_census_shape()","placesources::new_place_from_cpad_units_fee()","placesources::new_place_from_esri_world_shape()","projectscontroller#new_traditional()","userscontroller#new_updates()","rubypicasa::base#next()","guide#ngz_size()","guideshelper#ngz_url()","guide#ngz_work_path()","listedtaxon#nilify_blanks()","rule#nilify_operand_if_blank()","observation#nilify_positional_accuracy_if_zero()","taxonname#no_forbidden_lexicons()","annotation#no_other_annotations_if_this_is_blocking()","annotation#no_other_annotations_of_blocking_values()","friendship#no_self_love()","project#node_api_species_count()","conservationstatus#norma_oficial_059_status_name()","place#normalize_friendly_id()","project#normalize_friendly_id()","conservationstatus#normalize_geoprivacy()","observation#normalize_geoprivacy()","taxonname::normalize_lexicon()","taxonname#normalize_lexicon()","shared::licensemodule::classmethods#normalize_license_code()","observationfield::normalize_name()","taxon::normalize_name()","taxon#normalize_rank()","taxon::normalize_rank()","observationfield#normalized_name()","place::north_america()","wikipagescontroller#not_allowed()","projectobservation#not_in_taxon?()","listedtaxon#not_on_a_comprehensive_check_list()","hassubscribers::classmethods#notifies_owner_of()","hassubscribers::classmethods#notifies_subscribers_of()","hassubscribers::classmethods#notifies_users()","flag#notify_flaggable_on_create()","flag#notify_flaggable_on_destroy()","flag#notify_flaggable_on_update()","projectobservation#notify_observer()","hassubscribers::instancemethods#notify_owner_of()","moderatoraction#notify_resource()","emailer#notify_staff_about_blocked_user()","userblock#notify_staff_about_potential_problem_user()","hassubscribers::instancemethods#notify_subscribers_of()","hassubscribers::classmethods#notify_subscribers_with()","projectobservationrule#notify_trusting_members()","project::notify_trusting_members_about_changes()","project#notify_trusting_members_about_changes_if_rules_changed()","project#notify_trusting_members_about_changes_later()","project#notify_trusting_members_about_changes_unique_hash()","placegeometry#notify_trusting_project_members()","hassubscribers::instancemethods#notify_users()","statscontroller#nps_bioblitz()","applicationhelper#num2letterid()","darwincore::occurrence::instancemethods#numidentificationagreements()","darwincore::occurrence::instancemethods#numidentificationdisagreements()","observation#num_identifications_by_others()","yearstatistic::obervation_counts_by_quality_grade()","observation#obs_image_url()","trip#obs_search_elastic_params()","observation#obscure_coordinates()","observation#obscure_place_guess()","yearstatistic::observation_counts_by_country()","applicationhelper#observation_field_value_for()","observation#observation_field_values_attributes=()","mushroomobserverimportflowtask#observation_from_result()","darwincore::user::instancemethods#observation_id()","applicationhelper#observation_image()","observationshelper#observation_image_url()","observationscontroller#observation_links()","taxacontroller#observation_photos()","taxon#observation_photos()","observation#observation_photos_finished_processing()","observationshelper#observation_place_guess()","statscontroller#observation_weeks()","statscontroller#observation_weeks_json()","inatapiservice::observations()","trip#observations()","observationfield#observations_count()","observationsexportflowtask#observations_count()","taxon#observations_count_with_descendents()","emailer#observations_export_failed_notification()","emailer#observations_export_notification()","applicationhelper#observations_for_map_tag_attrs()","yearstatistic::observations_histogram()","yearstatistic::observations_histogram_by_created_month()","darwincore::archive#observations_in_batches()","inatapiservice::observations_observers()","observationshelper#observations_order_by_options()","darwincore::archive#observations_params()","inatapiservice::observations_popular_field_values()","inatapiservice::observations_species_counts()","project#observations_url_params()","projectobservation#observed_after?()","projectobservation#observed_before?()","projectobservation#observed_by_user?()","projectobservation#observed_in_bioblitz_time_range?()","projectobservation#observed_in_bounding_box_of?()","listedtaxon#observed_in_place?()","projectobservation#observed_in_place?()","yearstatistic::observed_species_accumulation()","yearstatistic::observed_taxa_changes()","projectscontroller#observed_taxa_count()","yearstatistic::observed_taxa_counts()","projectobservation#observer_allows_addition?()","projectobservation#observer_invited?()","observationphoto#observer_owns_photo()","observationfieldvalue#observer_prefers_fields_by_user()","taxon#observose_branch?()","taxon#observose_warning_branch?()","taxacontroller#occur_in()","darwincore::occurrence::instancemethods#occurrenceid()","darwincore::occurrence::instancemethods#occurrenceremarks()","listedtaxon#occurrence_status()","listedtaxon#occurrence_status=()","taxon::occurs_in()","localphoto::odp_s3_bucket_enabled?()","taxonswap#old_taxon()","projectobservation#on_list?()","applicationhelper#one_line_observation()","project#one_year_time_span()","taxonswap#only_has_one_input()","taxon#only_inactive_children_if_inactive()","moderatoraction#only_staff_can_unhide()","userblock#only_three_per_user()","shared::licensemodule#open_licensed?()","projectobservationrule#operand_present()","taxonswap#opposite_taxon_from()","facebookcontroller#options()","flickrcontroller#options()","picasacontroller#options()","user#orcid()","darwincore::occurrence::instancemethods#order()","darwincore::taxon::instancemethods#order()","guidesection#original_attribution()","photo#original_dimensions()","guiderange#original_url()","photo#original_url()","user#original_user_icon_url()","photo#orphaned?()","sound#orphaned?()","taxonschemescontroller#orphaned_inactive_taxa()","listedtaxon#other_primary_listed_taxa?()","observation#others_identifications()","taxonsplit#output_ancestor()","taxonchange#output_taxa()","taxondrop#output_taxa()","taxonmerge#output_taxa()","taxonstage#output_taxa()","taxonswap#output_taxa()","taxonmerge#output_taxon()","taxonswap#output_taxon()","taxonchange#output_taxon_for_record()","taxonsplit#output_taxon_for_record()","facebookphoto#owned_by?()","activerecord::base#owned_by_spammer?()","facebookphoto#owned_by_user?()","list#owner()","projectlist#owner()","checklist#owner_name()","list#owner_name()","projectlist#owner_name()","observation#owners_identification()","observation#owners_identification_from_vision()","observation#owners_identification_from_vision=()","eolservice#page()","wikipediaservice#page_details()","observationsearch::classmethods#page_of_results()","taxondescribers::amphibiaweb#page_url()","taxondescribers::base#page_url()","taxondescribers::eol#page_url()","taxondescribers::inaturalist#page_url()","taxondescribers::wikipedia#page_url()","taxondescribers::wikipediaes#page_url()","taxondescribers::wikipediafr#page_url()","place::param_to_array()","observationsexportflowtask#params()","observation::params_to_elastic_query()","darwincore::taxon::instancemethods#parentnameusageid()","taxon#parent_id=()","comment#parent_prefers_comments()","emailer#parental_consent()","userscontroller#parental_consent()","statscontroller#parks_canada_2017()","photo#parse_extension()","cloudfrontlogparser#parse_headers()","photo#parse_url_prefix()","wikipediaservice#parsed_response()","taxonchange#partial_revert()","datapartnerlinkers::calflora#partition_data()","darwincore::archive::partition_range()","observation#passes_quality_metric?()","picasa::path()","admin::delayedjobscontroller#pending()","projectuserinvitation#pending?()","bulkobservationfile#perform()","users::registrationscontroller#permit_params()","userscontroller#permit_params()","wikipagescontroller#permitted_page_params()","user#personal_lists()","computervisiondemoupload#photo=()","guidephoto#photo_attributes=()","localphoto#photo_bucket_should_be_changed?()","eolcontroller#photo_fields()","facebookcontroller#photo_fields()","flickrcontroller#photo_fields()","picasacontroller#photo_fields()","wikimediacommonscontroller#photo_fields()","applicationcontroller#photo_identities_required()","providerauthorization#photo_source_name()","applicationhelper#photo_type_label()","taxon#photo_url()","flickrcontroller#photos()","rubypicasa::album#photos()","rubypicasa::recentphotos#photos()","rubypicasa::search#photos()","taxacontroller#photos()","taxon#photos=()","observation#photos?()","taxon#photos_cache_key()","emailer#photos_missing()","taxon#photos_with_backfill()","taxon#photos_with_external_cache_key()","observationscontroller#phylogram()","darwincore::occurrence::instancemethods#phylum()","darwincore::taxon::instancemethods#phylum()","taxon#phylum()","picasacontroller#picasa_albums()","user#picasa_client()","picasacontroller#picasa_friends()","user#picasa_identity()","picasaphoto::picasa_request_with_refresh()","applicationcontroller#ping()","listedtaxon::place_ancestor_ids_sql()","fakeview#place_geometry_kml_url()","observation::place_guess_from_latlon()","placeshelper#place_name_and_type()","placeshelper#place_type()","place#place_type_name()","place#place_type_name=()","project#place_with_boundary()","atlas#places()","observation#places()","observation::places_for_latlon()","observation::places_without_obscuration_protection()","placescontroller#planner()","elasticmodel::point_geojson()","elasticmodel::point_latlon()","place#points_from_geom()","ratatosk::ratatosk#polynom_parent()","applicationhelper#popover()","yearstatistic::popular_observations()","frequencycell::populate()","darwincore::occurrence::instancemethods#positioningdevice()","darwincore::occurrence::instancemethods#positioningmethod()","usershelper#possessive_noun()","controlledterm#possible_attribute_associates()","applicationhelper#post_archives_by_month_path()","applicationhelper#post_parent_path()","project#posts_count()","project#preferred_end_date_or_time()","project#preferred_start_date_or_time()","taxon#preferred_uninomial_ancestor()","observation::preload_for_component()","actsaselasticmodel::preload_for_elastic_index()","actsaselasticmodel#preload_for_elastic_index()","applicationcontroller#preload_user_preferences()","observationsexportflowtask#preloads()","identification::prepare_batch_for_index()","observation::prepare_batch_for_index()","taxon::prepare_batch_for_index()","trip::presence_absence()","atlas#presence_places()","atlas#presence_places_with_establishment_means()","rubypicasa::base#previous()","listedtaxon#primary_establishment_means()","listedtaxon#primary_listed_taxon()","listedtaxon#primary_occurrence_status()","observation#print_community_taxon_nodes()","rubypicasa::album#private?()","observation#private_ne_latlon()","observation#private_sw_latlon()","user#privileged_with?()","observation#probable_taxon()","observation#probably_captive?()","placegeometry#process_geometry()","placegeometry#process_geometry_if_changed()","darwincore::archive#process_observations()","datapartnerlinkers::calflora#process_rows()","photo#processing?()","bulkobservationfile#project()","inatapiservice::project()","observationscontroller#project()","darwincore::projectobservations::instancemethods#projectid()","darwincore::projectobservations::instancemethods#projecttitle()","observationscontroller#project_all()","projectobservation#project_allows_observations?()","projectobservation#project_allows_submitter?()","project#project_observation_rule_terms()","projectuser#project_observations()","project#project_observations_count()","projectobservation#project_user()","emailer#project_user_invitation()","inatapiservice::projects()","observationfield#projects_count()","listedtaxon#propagate_establishment_means()","taxon#protected_attributes_editable_by?()","providerauthorization#provider()","localphoto#prune_odp_duplicates()","localphoto::prune_odp_duplicates_batch()","denormalizer::psql()","rubypicasa::album#public?()","observation#public_places()","observation#public_positional_accuracy()","observation#public_system_places()","yearstatistic::publications()","guide#published?()","post#published?()","user#published_name()","darwincore::eolmedia::instancemethods#publisher()","darwincore::simplemultimedia::instancemethods#publisher()","darwincore::occurrence::instancemethods#publishingcountry()","observation#quality_metric_score()","observation#quality_metrics_pass?()","admincontroller#queries()","observationsearch::classmethods#query()","observationsexportflowtask#query()","user::query()","observationsearch::classmethods#query_params()","project::queue_project_aggregations()","observation::random_neighbor_lat_lon()","taxacontroller#range()","taxonrange#range_changed?()","taxonrange#range_delete()","taxonrange#range_delete=()","taxonframework#rank_level_below_taxon_rank()","taxonchange#rank_level_conflict?()","taxon#rank_level_for_taxon_and_parent_must_not_be_nil()","taxon#rank_level_must_be_coarser_than_children()","taxon#rank_level_must_be_finer_than_parent()","list#rank_rule()","list#rank_rule=()","ratatosk::ratatosk()","site#ratatosk_name_providers()","taxon#reasess_taxon_framework_relationship_after_move()","taxonphoto#reasonable_number_of_photos()","observation#reassess_annotations()","controlledtermtaxon#reassess_annotations_after_save_later()","annotation::reassess_annotations_for_attribute_id()","annotation::reassess_annotations_for_taxon_id()","annotation::reassess_annotations_for_taxon_ids()","observation#reassess_coordinate_obscuration()","observation::reassess_coordinates_for_observations_by()","observation::reassess_coordinates_for_observations_of()","observation::reassess_coordinates_of()","listedtaxon#reassign_primary_listed_taxon()","taxon::rebuild_without_callbacks()","userscontroller#recent()","user#recent_notifications()","user#recent_observation_fields()","user#recent_observations()","guide#recent_photo_tags()","picasa#recent_photos()","guide#recent_tags()","darwincore::occurrence::instancemethods#recordedby()","darwincore::occurrence::instancemethods#recordedbyid()","applicationcontroller#redirect_to_hell()","oauthapplication#redirect_uri_has_no_params()","darwincore::eolmedia::instancemethods#referenceid()","applicationhelper#references()","darwincore::occurrence::instancemethods#references()","darwincore::simplemultimedia::instancemethods#references()","darwincore::taxon::instancemethods#references()","checklist#refresh()","checklist::refresh()","providerauthorization#refresh_access_token!()","atlasescontroller#refresh_atlas()","checklist#refresh_cache_key()","observation#refresh_check_lists()","site#refresh_default_site()","actsaselasticmodel::refresh_es_index()","listrule#refresh_list()","checklist::refresh_listed_taxon()","checklist#refresh_now()","listscontroller#refresh_now()","listedtaxacontroller#refresh_observationcounts()","placegeometry#refresh_place_check_list()","taxacontroller#refresh_wikipedia_summary()","checklist::refresh_with_observation()","yearstatistic::regenerate_defaults_for_year()","yearstatistic::regenerate_existing()","observationfield#reindex_associated_projects()","taxon::reindex_descendants_of()","user::reindex_faved_observations_after_destroy()","user#reindex_faved_observations_after_destroy_later()","identification::reindex_for_taxon()","observation#reindex_identifications()","taxon#reindex_identifications_after_save()","projectobservation#reindex_observation()","listedtaxon::reindex_observations()","observationfield#reindex_observations_if_name_changed()","listedtaxon#reindex_observations_later()","observation#reindex_places()","observation#reindex_projects()","place#reindex_projects_later()","taxon::reindex_taxa_covered_by()","controlledtermvalue#reindex_terms()","listedtaxon#related_listed_taxa()","taxonframeworkscontroller#relationship_unknown()","userscontroller#relationships()","atlas#relevant_listed_taxon_alterations()","completeset#relevant_listed_taxon_alterations()","checklist#reload_from_observations_cache_key()","applicationhelper#remaining_paragraphs_of_text()","taxahelper#remote_taxon_images()","listedtaxon#removable_by?()","projectobservation#removable_by?()","projectscontroller#remove()","guidescontroller#remove_all_tags()","atlasescontroller#remove_atlas_alteration()","identification#remove_automated_observation_reviews()","projectscontroller#remove_batch()","place#remove_default_check_list()","user#remove_email_from_name()","user::remove_email_from_string()","userscontroller#remove_friend()","deletedphoto#remove_from_s3()","user::remove_icon_from_s3()","atlasescontroller#remove_listed_taxon_alteration()","completesetscontroller#remove_listed_taxon_alteration()","user#remove_oauth_access_tokens()","listedtaxon#remove_other_primary_listings()","projectscontroller#remove_project_user()","taxon#remove_rank_from_name()","taxon::remove_rank_from_name()","taxonname#remove_rank_from_name()","userscontroller#remove_role()","friendship#remove_subscription_to_friend()","flickrcontroller#remove_tag()","tripscontroller#remove_taxa()","listscontroller#remove_taxon()","project#remove_times_from_non_bioblitzes()","guidesection#remove_updater_if_no_changes()","projectuser#remove_updates()","taxon#remove_wikipedia_summary_unless_auto_description()","darwincore::descriptor#render()","darwincore::metadata#render()","applicationcontroller#render_404()","applicationhelper#render_in_format()","guidescontroller#reorder()","guide#reorder_by_taxonomy()","eolphoto#repair()","facebookphoto#repair()","facebookphoto::repair()","flickrphoto#repair()","flickrphoto::repair()","googlestreetviewphoto#repair()","localphoto#repair()","photoscontroller#repair()","picasaphoto#repair()","picasaphoto::repair()","wikimediacommonsphoto#repair()","photoscontroller#repair_all()","photo::repair_photos_for_user()","photo::repair_single_photo()","identification#replace_inactive_taxon()","observation#replace_inactive_taxon()","darwincore::occurrence::instancemethods#reproductivecondition()","catalogueoflife#request()","datapartnerlinkers::gbif#request()","eolservice#request()","flickrcache::request()","gbifservice#request()","metaservice#request()","newzealandorganismsregister#request()","applicationcontroller#require_admin_or_trusted_project_manager_for()","applicationcontroller#require_guide_user()","applicationcontroller#require_owner()","relationshipscontroller#require_owner()","projectobservation#required_observation_fields_present?()","privileges::classmethods#requires_privilege()","privileges::controller::classmethods#requires_privilege()","observation#research_grade?()","observation#research_grade_candidate?()","localphoto#reset_file_from_original()","taxon::reset_iconic_taxa_constants_for_tests()","project#reset_last_aggregated_at()","projectobservationrule#reset_last_aggregated_if_rules_changed()","passwordmailer#reset_password()","admincontroller#reset_user_privilege()","flag#resolvable_by?()","annotation#resource_is_an_observation()","observation#respond_to?()","site#respond_to?()","fakeview::respond_to_missing?()","fakeview#respond_to_missing?()","site#respond_to_missing?()","applicationhelper#responsive?()","userprivilege#restore!()","user#restore_access_tokens_by_suspended_user()","admincontroller#restore_user_privilege()","updateaction#restrict_to_subscribers()","actsaselasticmodel::result_to_will_paginate_collection()","ambidextrous#return_here()","applicationcontroller#return_here_from_url()","guidephoto#reusable?()","guiderange#reusable?()","guidesection#reusable?()","guidesection#reuse()","guidetaxon#reuse()","observationscontroller#review()","observation#reviewed_by?()","identification#revisit_curator_identification()","projectobservation#revisit_curator_identifications_later()","userprivilege#revoke!()","user#revoke_access_tokens_by_suspended_user()","project::revoke_project_observations_on_leave_project()","admincontroller#revoke_user_privilege()","userprivilege#revoked?()","applicationhelper#rights()","darwincore::eolmedia::instancemethods#rights()","darwincore::occurrence::instancemethods#rightsholder()","darwincore::simplemultimedia::instancemethods#rightsholder()","applicationhelper#rights_for_media()","applicationhelper#rights_for_observation()","taxon#root?()","photoscontroller#rotate()","localphoto#rotate!()","paperclip::rotator#rotate_command()","project#rule_place()","project#rule_place_ids()","project#rule_places()","project#rule_taxa()","project#rule_taxon()","goal#rules_validate_against?()","datapartnerlinkers::calflora#run()","datapartnerlinkers::datapartnerlinker#run()","datapartnerlinkers::gbif#run()","datapartnerlinkers::marylandbiodiversityproject#run()","flowtaskscontroller#run()","guideeolupdateflowtask#run()","listedtaxafromcsvflowtask#run()","mushroomobserverimportflowtask#run()","observationsexportflowtask#run()","yearstatistic::run_cmd()","yearstatistic#run_cmd()","identification::run_revisit_curator_identification()","identification::run_update_curator_identification()","localphoto#s3_account()","localphoto#s3_account=()","localphoto::s3_bucket()","localphoto#s3_bucket()","localphoto#s3_client()","localphoto::s3_host_alias()","localphoto#s3_host_alias()","localphoto::s3_permissions()","localphoto#s3_permissions()","localphoto::s3_region()","localphoto#s3_region()","project#sane_destroy()","user#sane_destroy()","wikipediaservice#sanitizer()","ratatosk::nameproviders::coltaxonnameadapter#save()","ratatosk::nameproviders::nzortaxonnameadapter#save()","ratatosk::nameproviders::ubiotaxonnameadapter#save()","place#save_geom()","taxacontroller#schemes()","darwincore::occurrence::instancemethods#scientificname()","darwincore::taxon::instancemethods#scientificname()","observation#scientific_name()","taxon#scientific_name()","ratatosk::nameproviders::ubiotaxonnameadapter#sciname_taxon()","computervisiondemouploadscontroller#score()","catalogueoflife#search()","conabioservice#search()","eolservice#search()","googlephotosapi#search()","guidescontroller#search()","picasa#search()","placescontroller#search()","projectscontroller#search()","taxacontroller#search()","elasticmodel::search_criteria()","eolphoto::search_eol()","elasticmodel::search_filters()","elasticmodel::search_hash()","ubioservice#search_help()","observationsearch::classmethods#search_in_batches()","taxon::search_query()","wikimediacommonsphoto::search_wikimedia_for_taxon()","soundcloudsound#secret_token()","oauthapplication::seek_app()","bootstrapformbuilder#select()","defaultformbuilder#select_lexicon()","observationscontroller#selector()","place#self_and_ancestor_ids()","taxon#self_and_ancestor_ids()","place#self_and_ancestors()","taxon#self_and_ancestors()","place#self_and_descendant_conditions()","message#send_message()","authenticatedsystem#send_remember_cookie!()","messagescontroller#sent()","applicationhelper#separator()","applicationhelper#serial_id()","guide#serializable_hash()","guidephoto#serializable_hash()","observation#serializable_hash()","observationsound#serializable_hash()","photo#serializable_hash()","place#serializable_hash()","savedlocation#serializable_hash()","taxonname#serializable_hash()","triptaxon#serializable_hash()","ratatosk::nameproviders::coltaxonnameadapter#service()","rubypicasa::base#session()","rubypicasa::base#session=()","announcement#session_key()","actsasspammable::user#set_as_non_spammer_if_meets_criteria()","listedtaxon#set_cache_columns()","observation#set_captive()","observation#set_community_taxon()","observation#set_community_taxon_before_save()","observation#set_coordinates()","projectobservation#set_curator_coordinate_access()","user#set_data_transfer_consent_at()","guidetaxon#set_default_photos()","guidetaxon#set_default_section()","guide#set_defaults_from_eol_collection()","guide#set_defaults_from_source_url()","identification#set_disagreement()","place#set_display_name()","userparent#set_donorbox_donor_id_from_parent_user()","listedtaxon#set_establishment_means()","flag#set_flaggable_content()","flag#set_flaggable_user_id()","observation#set_geom_from_latlon()","guidetaxon#set_guide_taxon()","observationlink#set_href_name()","observation#set_iconic_taxon()","taxon#set_iconic_taxon()","taxon::set_iconic_taxon_for_observations_of()","taxonname#set_is_valid()","identification#set_last_identification_as_current()","checklist#set_last_synced_at()","observation#set_latlon_from_place_guess()","googlestreetviewphoto#set_license()","guidesection#set_license()","observation#set_license()","photo#set_license()","sound#set_license()","applicationcontroller#set_locale()","user#set_locale()","guidetaxon#set_names_from_taxon()","observationphoto#set_observation_photos_count()","observationphoto#set_observation_quality_grade()","observationsound#set_observation_quality_grade()","project#set_observation_requirements_updated_at()","observationsound#set_observation_sounds_count()","observation::set_observations_taxa_for_user()","user#set_observations_taxa_if_pref_changed()","listedtaxon#set_old_list()","trip#set_parent()","taxon#set_photo_from_external()","taxon#set_photo_from_observations()","taxacontroller#set_photos()","user#set_pi_consent_at()","observation#set_place_guess_from_latlon()","listedtaxon#set_place_id()","identification#set_previous_observation_taxon()","listedtaxon#set_primary_listing()","guide#set_published_at()","observation#set_quality_grade()","observation::set_quality_grade()","taxon#set_rank_level()","darwincore::occurrence::instancemethods#set_ranked_ancestors()","message#set_read_at()","taxonframeworkrelationship#set_relationship()","updateaction#set_resource_owner()","taxon#set_scientific_taxon_name()","oauthapplication#set_scopes()","darwincore::occurrence::instancemethods#set_show_private_coordinates()","taxonlink#set_site_title()","listedtaxon#set_source_id()","userscontroller#set_spammer()","message#set_subject_for_reply()","guide::set_taxon()","guide#set_taxon()","observation#set_taxon_from_probable_taxon()","observation#set_taxon_from_species_guess()","observation#set_taxon_from_taxon_name()","observation#set_taxon_geoprivacy()","taxonschemetaxon#set_taxon_name()","observation#set_taxon_photo()","message#set_thread_id()","observation#set_time_in_time_zone()","applicationcontroller#set_time_zone()","observation#set_time_zone()","user#set_time_zone()","checklist#set_title()","mushroomobserverimportflowtask#set_unique_hash()","project#set_updated_at_if_preferences_changed()","listedtaxon#set_updater_id()","observation#set_uri()","user#set_uri()","computervisiondemoupload#set_urls()","localphoto#set_urls()","observationfieldvalue#set_user()","listedtaxon#set_user_id()","actsasuuidable#set_uuid()","controlledterm#set_uuid()","flag#set_uuid()","observationfield#set_uuid()","photo#set_uuid()","place#set_uuid()","post#set_uuid()","sound#set_uuid()","taxon#set_uuid()","user#set_uuid()","darwincore::eolmedia::instancemethods#set_view()","darwincore::observationfields::instancemethods#set_view()","darwincore::occurrence::instancemethods#set_view()","darwincore::projectobservations::instancemethods#set_view()","darwincore::taxon::instancemethods#set_view()","darwincore::user::instancemethods#set_view()","taxon#set_wikipedia_summary()","taxon#set_wikipedia_summary_later()","passwordmailer#setup_email()","applicationhelper#setup_map_tag_attrs()","wikipagescontroller#setup_page()","applicationhelper#shareable_description()","observation#short_description()","observationshelper#short_observation_description()","site#short_url()","place#should_generate_new_friendly_id?()","project#should_generate_new_friendly_id?()","annotationscontroller#show()","announcementscontroller#show()","assessmentsectionscontroller#show()","assessmentscontroller#show()","atlasescontroller#show()","calendarscontroller#show()","checklistscontroller#show()","commentscontroller#show()","completesetscontroller#show()","datapartnerscontroller#show()","flagscontroller#show()","flowtaskscontroller#show()","guidephotoscontroller#show()","guiderangescontroller#show()","guidesectionscontroller#show()","guidetaxacontroller#show()","guidescontroller#show()","identificationscontroller#show()","listedtaxacontroller#show()","messagescontroller#show()","oauthapplicationscontroller#show()","observationfieldscontroller#show()","observationphotoscontroller#show()","observationsoundscontroller#show()","observationscontroller#show()","photoscontroller#show()","placescontroller#show()","postscontroller#show()","projectscontroller#show()","shared::listsmodule#show()","sitescontroller#show()","soundscontroller#show()","sourcescontroller#show()","taxacontroller#show()","taxonchangescontroller#show()","taxonframeworkrelationshipscontroller#show()","taxonlinkscontroller#show()","taxonnamescontroller#show()","taxonrangescontroller#show()","taxonschemescontroller#show()","tripscontroller#show()","userscontroller#show()","projectscontroller#show_contributor()","shared::guidemodule#show_guide()","shared::guidemodule#show_guide_widget()","observationshelper#show_observation_coordinates?()","assessmentscontroller#show_section()","applicationhelper#simple_format_with_structure()","ubioservice#simple_namebank_search()","placegeometry#simplified_geom()","observation#single_taxon_for_name()","taxon::single_taxon_for_name()","observation#single_taxon_id_for_name()","userscontroller#site_admin_of_user_required()","observationsearch::classmethods#site_search_params()","photo#sized_url()","wikipageattachment#skip_for_non_images()","bulkobservationfile#skip_row?()","post#skip_update_for_draft()","project#slug_candidates()","project::slugs_to_ids()","guiderange#small_url()","photo#small_url()","shared::licensemodule#some_rights_reserved?()","updateaction#sort_by_date()","defaultformbuilder#sort_lexicons()","applicationhelper#sortable_table_header()","observation#sound_url()","observation#sounds?()","ratatosk::nameproviders::colnameprovider::source()","ratatosk::nameproviders::nzornameprovider::source()","ratatosk::nameproviders::ubionameprovider::source()","flickridentity#source_options()","localphoto#source_title()","photo#source_title()","photo#source_url()","activerecord::base::spammable?()","rakismet::spammable_models()","darwincore::eolmedia::instancemethods#spatial()","taxonname#species_common_name_cannot_match_taxon_name()","listedtaxon::species_for_infraspecies()","gbifservice::species_match()","taxon#species_or_lower?()","darwincore::taxon::instancemethods#specificepithet()","project#split_large_array()","facebookphoto#square_url()","photo#square_url()","project#start_time=()","darwincore::occurrence::instancemethods#stateprovince()","observationscontroller#stats()","projectscontroller#stats()","sitestatistic::stats_generated_for_day?()","projectscontroller#stats_slideshow()","conservationstatus#status_name()","atlas::still_is_marked()","place#straddles_date_line?()","yearstatistic::streaks()","observationfield#strip_allowed_values()","taxonname::strip_author()","observationfield#strip_description()","user#strip_login()","observationfield#strip_name()","taxon#strip_name()","taxonname#strip_name()","user#strip_name()","observation#strip_species_guess()","userparent#strip_strings()","observationfield#strip_tags()","taxonname#strip_tags()","project#strip_title()","observationfieldvalue#strip_value()","applicationhelper#stripped_first_paragraph_of_text()","subscriptionscontroller#subscribe()","assessmentsection#subscribe_curators_to_section()","projectuser#subscribe_to_assessment_sections()","projectuser#subscribe_to_assessment_sections_later()","user#subscribed_to?()","taxon#subtree_conditions()","user::suggest_login()","benchmarker#summarize()","statscontroller#summary()","wikipediaservice#summary()","wikipediaservice#summary_from_parsed()","userscontroller#suspend()","actsasspammable::user#suspend_if_spammer()","observation#sw_latlon()","commentsweeper#sweep_comment()","eolphoto#sync()","flickrphoto#sync()","guidetaxacontroller#sync()","photo#sync()","picasaphoto#sync()","checklist::sync_check_lists_with_parents()","guidetaxon#sync_eol()","guidetaxon#sync_eol_photos()","guidetaxon#sync_eol_ranges()","guidetaxon#sync_eol_sections()","datapartner#sync_observation_links()","datapartner::sync_observation_links()","datapartner::sync_observation_links_with_logger()","listedtaxon#sync_parent_check_list()","guidetaxon#sync_site_content()","listedtaxon#sync_species_if_infraspecies()","checklist#sync_with_parent()","taxacontroller#synonyms()","datapartnerlinkers::datapartnerlinker#system_call()","observation#system_places()","observation::system_places_for_latlon()","tripscontroller#tabulate()","taxacontroller#tag_flickr_photos()","taxacontroller#tag_flickr_photos_from_observations()","applicationhelper#tag_to_xml()","guide#tags()","taxon::tags_to_taxa()","inatapiservice::taxa()","observationscontroller#taxa()","placescontroller#taxa()","shared::listsmodule#taxa()","taxonframeworkrelationship#taxa_covered_by_taxon_framework()","user#taxa_unobserved_before_date()","taxacontroller#taxobox()","annotation#taxon()","observationfieldvalue#taxon()","ratatosk::nameproviders::coltaxonnameadapter#taxon()","ratatosk::nameproviders::nzortaxonnameadapter#taxon()","ratatosk::nameproviders::ubiotaxonnameadapter#taxon()","taxonnamescontroller#taxon()","observationfieldvalue#taxon=()","darwincore::eolmedia::instancemethods#taxonid()","darwincore::occurrence::instancemethods#taxonid()","darwincore::taxon::instancemethods#taxonid()","darwincore::occurrence::instancemethods#taxonrank()","darwincore::taxon::instancemethods#taxonrank()","observation#taxon_and_ancestors()","taxon#taxon_cant_be_its_own_ancestor()","taxonchange#taxon_change_commit_records_unique_hash()","taxon#taxon_changes_count()","darwincore::occurrence::instancemethods#taxon_class()","listedtaxon#taxon_common_name()","taxonframeworkrelationshipscontroller#taxon_curator_required()","site#taxon_describers()","mushroomobserverimportflowtask#taxon_for_name()","taxoncurator#taxon_framework_covers()","taxonframeworkrelationship#taxon_framework_has_source()","taxonframework#taxon_framework_taxon_name()","taxonframeworkrelationshipscontroller#taxon_frameworks_for_dropdowns()","annotation#taxon_id()","taxahelper#taxon_image()","taxahelper#taxon_image_url()","listedtaxon#taxon_matches_curator_identification?()","listedtaxon#taxon_matches_observation()","assessment#taxon_name()","identification#taxon_name()","listedtaxon#taxon_name()","taxon#taxon_photos_with_backfill()","taxonrangeshelper#taxon_range_creator()","taxonrangeshelper#taxon_range_file_display_name()","taxahelper#taxon_range_kml_url()","taxon#taxon_range_kml_url()","taxonrangeshelper#taxon_range_updater()","identification#taxon_rank()","taxon#taxon_schemes_count()","observationscontroller#taxon_stats()","observationscontroller#taxon_summary()","taxahelper#taxon_to_json()","applicationhelper#taxonomic_taxon_list()","taxacontroller#taxonomy_details()","controlledterm#term_label()","darwincore::occurrence::term_names()","listrule#terms()","projectobservationrule#terms()","projectscontroller#terms()","rule#terms()","user#test_groups_array()","message#thread_flags()","taxon#threatened?()","taxon#threatened_in_lat_lon?()","taxon#threatened_in_place?()","taxon#threatened_status()","rubypicasa::thumbnailurl#thumb_name()","guiderange#thumb_url()","photo#thumb_url()","rubypicasa::base#thumbnail()","darwincore::eolmedia::instancemethods#thumbnailurl()","observation#time_observed_at_in_zone()","observation#time_observed_at_utc()","timezonegeometry::time_zone_for_lat_lng()","yearstatistic::time_zone_for_options()","timezonegeometry::time_zone_from_lat_lng()","defaultformbuilder#time_zone_select()","observation#timezone_object()","observation#timezone_offset()","taxacontroller#tip()","applicationhelper#title_by_user()","observationshelper#title_for_observation_params()","array#to_csv()","projectobservation::to_csv()","projectobservation#to_csv_column()","soundcloudsound#to_local_sound()","soundcloudsound#to_local_sound!()","guide#to_ngz()","computervisiondemoupload#to_observation()","facebookphoto#to_observation()","flickrphoto#to_observation()","localphoto#to_observation()","localsound#to_observation()","picasaphoto#to_observation()","sound#to_observation()","soundcloudsound#to_observation()","assessment#to_param()","assessmentsection#to_param()","list#to_param()","post#to_param()","taxon#to_param()","comment#to_plain_s()","identification#to_plain_s()","listedtaxon#to_plain_s()","observation#to_plain_s()","photo#to_plain_s()","post#to_plain_s()","taxon#to_plain_s()","user#to_plain_s()","flickrcache::to_recursive_ostruct()","annotation#to_s()","apiendpoint#to_s()","atlas#to_s()","checklist#to_s()","comment#to_s()","conservationstatus#to_s()","controlledterm#to_s()","datapartner#to_s()","flag#to_s()","guide#to_s()","guideeolupdateflowtask#to_s()","guidephoto#to_s()","guiderange#to_s()","guidesection#to_s()","guidetaxon#to_s()","identification#to_s()","list#to_s()","listedtaxon#to_s()","message#to_s()","observation#to_s()","observationfield#to_s()","observationfieldvalue#to_s()","observationlink#to_s()","observationphoto#to_s()","observationsexportflowtask#to_s()","photo#to_s()","place#to_s()","placegeometry#to_s()","placetaxonname#to_s()","post#to_s()","project#to_s()","projectobservation#to_s()","projectuser#to_s()","providerauthorization#to_s()","qualitymetric#to_s()","ratatosk::ratatosk#to_s()","site#to_s()","source#to_s()","subscription#to_s()","taxon#to_s()","taxonchange#to_s()","taxoncurator#to_s()","taxonlink#to_s()","taxonname#to_s()","taxonphoto#to_s()","taxonschemetaxon#to_s()","updateaction#to_s()","user#to_s()","userblock#to_s()","userparent#to_s()","defaultformbuilder::inatinstancetag#to_select_tag_with_option_tags()","taxon#to_styled_s()","flickrphoto#to_tags()","localphoto#to_tags()","taxon#to_tags()","flickrphoto#to_taxa()","localphoto#to_taxa()","picasaphoto#to_taxa()","soundcloudsound#to_taxa()","photo#to_taxon()","sound#to_taxon()","message#to_user_copy()","soundcloudidentity#token()","place#too_big_for_check_list?()","observationscontroller#torquemap()","guidesection#touch_if_modified()","projectobservation#touch_observation()","shared::touchesobservationmodule#touch_observation()","projectobservationrule#touch_projects()","annotation#touch_resource()","moderatoraction#touch_resource()","project#tracking_code_allowed?()","paperclip::deanimator#transformation_command()","paperclip::rotator#transformation_command()","translationscontroller#translate()","applicationhelper#translate_with_consistent_case()","place#translated_name()","yearstatistic::translators()","yearstatistic::tree_taxa()","listedtaxon#trickle_down_establishment_means()","photo#trim_fields()","sound#trim_fields()","observation#trim_user_agent()","placedenormalizer::truncate()","applicationhelper#truncate_with_more()","userscontroller#trust()","user#trusts?()","taxacontroller#try_show()","photo::turn_remote_photo_into_local_photo()","user#twitter_identity()","darwincore::eolmedia::instancemethods#type()","inatcontenttypedetector#type_from_file_command()","inatcontenttypedetector#type_from_mime_magic()","timezonegeometry::tzid_for_lat_lng()","timezonegeometry::tzid_from_lat_lng()","userscontroller#unblock()","observation::uncertainty_cell_center_latlon()","observation::uncertainty_cell_diagonal_meters()","observation#uncertainty_cell_diagonal_meters()","projectscontroller#unfeature()","taxon#unfeature_inactive()","taxonphoto#unfeature_taxon()","guide#unique_tags()","providerauthorization#uniqueness_of_authorization_per_user()","userblock#uniqueness_of_blocked_user()","identification#uniqueness_of_current()","taxonchange#uniqueness_of_output_taxa()","taxonchange#uniqueness_of_taxa()","flickrcontroller#unlink_flickr_account()","admin::delayedjobscontroller#unlock()","userscontroller#unmute()","observation#unobscure_coordinates()","userscontroller#unsuspend()","userscontroller#untrust()","updateaction::unviewed_by_user_from_query()","votescontroller#unvote()","announcementscontroller#update()","assessmentscontroller#update()","atlasescontroller#update()","checklistscontroller#update()","commentscontroller#update()","completesetscontroller#update()","conservationstatusescontroller#update()","controlledtermlabelscontroller#update()","controlledtermscontroller#update()","customprojectscontroller#update()","datapartnerscontroller#update()","flagscontroller#update()","friendshipscontroller#update()","guidephotoscontroller#update()","guiderangescontroller#update()","guidesectionscontroller#update()","guidetaxacontroller#update()","guidescontroller#update()","identificationscontroller#update()","listedtaxacontroller#update()","moderatornotescontroller#update()","oauthapplicationscontroller#update()","observationfieldvaluescontroller#update()","observationfieldscontroller#update()","observationphotoscontroller#update()","observationsoundscontroller#update()","observationscontroller#update()","oldpreferences#update()","photo#update()","photoscontroller#update()","placescontroller#update()","postscontroller#update()","projectassetscontroller#update()","projectobservationscontroller#update()","projectuserscontroller#update()","projectscontroller#update()","shared::listsmodule#update()","sitescontroller#update()","sound#update()","sourcescontroller#update()","subscriptionscontroller#update()","taxacontroller#update()","taxonchangetaxacontroller#update()","taxonchangescontroller#update()","taxoncuratorscontroller#update()","taxonframeworkrelationshipscontroller#update()","taxonframeworkscontroller#update()","taxonlinkscontroller#update()","taxonnamescontroller#update()","taxonrangescontroller#update()","taxonschemetaxacontroller#update()","tripscontroller#update()","userscontroller#update()","cloudfrontaclupdater#update_acl()","observation#update_all_licenses()","photo#update_all_licenses()","sound#update_all_licenses()","taxon::update_ancestor_photos()","listedtaxon#update_and_primary()","listedtaxon#update_cache_columns()","listedtaxon::update_cache_columns_for()","listedtaxon#update_cache_columns_for_check_list()","identification#update_categories()","identification::update_categories_for_observation()","taxacontroller#update_colors()","observationfield#update_counts()","project#update_counts()","identification#update_curator_identification()","projectobservation#update_curator_identification()","project::update_curator_idents_on_make_curator()","project::update_curator_idents_on_remove_curator()","observation#update_default_license()","photo#update_default_license()","sound#update_default_license()","taxon#update_descendants_with_new_ancestry()","taxon::update_descendants_with_new_ancestry()","identification::update_disagreement_identifications_for_taxon()","observationscontroller#update_fields()","identification::update_for_taxon_change()","listedtaxon::update_for_taxon_change()","observation::update_for_taxon_change()","observationfieldvalue::update_for_taxon_change()","observation#update_identifications()","user::update_identifications_counter_cache()","applicationhelper#update_image_for()","observation#update_mappable()","taxon#update_obs_iconic_taxa()","identification#update_obs_stats()","identification#update_obs_stats_after_destroy()","identification#update_observation()","qualitymetric#update_observation()","identification#update_observation_after_destroy()","taxon::update_observation_counts()","observationfieldvalue#update_observation_field_counts()","conservationstatus#update_observation_geoprivacies()","identification#update_observation_if_test_env()","observationreview#update_observation_index()","user#update_observation_licenses()","user#update_observation_sites()","user#update_observation_sites_later()","projectuser#update_observations_counter_cache()","user::update_observations_counter_cache()","projectuser::update_observations_counter_cache_from_project_and_user()","projectobservation#update_observations_counter_cache_later()","observation#update_observations_places()","observation::update_observations_places()","place::update_observations_places()","placegeometry::update_observations_places()","placegeometry#update_observations_places_later()","project::update_observed_taxa_count()","listedtaxon#update_on_related_listed_taxa()","identification#update_other_identifications()","comment#update_parent_counter_cache()","userscontroller#update_password()","providerauthorization#update_photo_identities()","user#update_photo_licenses()","photo::update_photo_native_columns_and_copy_metadata()","guidetaxacontroller#update_photos()","observationscontroller#update_photos()","taxacontroller#update_photos()","projectuser#update_project_observations_curator_coordinate_access()","projectuser#update_project_observations_later()","projectobservation#update_project_observed_taxa_counter_cache_later()","projectobservationfield#update_project_rule()","observation#update_public_positional_accuracy()","identification#update_quality_metrics()","observation#update_quality_metrics()","taxonchange#update_records_of_class()","userscontroller#update_session()","user#update_sound_licenses()","actsasspammable::user#update_spam_count()","user::update_species_counter_cache()","observation#update_stats()","observation::update_stats_for_observations_of()","applicationhelper#update_tagline_for()","projectuser#update_taxa_counter_cache()","projectuser::update_taxa_counter_cache_from_project_and_user()","projectobservation#update_taxa_counter_cache_later()","projectuser::update_taxa_obs_and_observed_taxa_count_after_update_observation()","observation#update_taxon_counter_caches()","externaltaxon#update_taxon_framework_relationship()","taxon#update_taxon_framework_relationship()","checklist#update_taxon_list_rule()","admincontroller#update_user()","identification#update_user_counter_cache()","post#update_user_counter_cache()","observation#update_user_counter_caches()","observation#update_user_counter_caches_after_create()","observation#update_user_counter_caches_after_destroy()","observation#update_user_counter_caches_after_update()","observation#update_user_species_counter_cache_later()","project#update_users_observations_counts()","project#update_users_taxa_counts()","providerauthorization#update_with_auth_info()","userscontroller#updates_count()","emailer#updates_notification()","observationscontroller#upload()","darwincore::archive#upload_to_aws_s3()","taxon#upstream_taxon_framework()","applicationhelper#uri_join()","guidephoto#url()","observation#url()","rubypicasa::base#url()","taxonlink#url_cant_have_genus_without_species()","taxonlink#url_cant_have_species_without_genus()","applicationhelper#url_for_license()","applicationhelper#url_for_params()","applicationhelper#url_for_referrer_or_default()","catalogueoflife::url_for_request()","gbifservice::url_for_request()","applicationhelper#url_for_resource_with_host()","taxonlink#url_for_taxon()","wikipediaservice#url_for_title()","taxonlink#url_without_template_tags()","bulkobservationfile#user()","commentscontroller#user()","guidescontroller#user()","picasa#user()","taxon#user_can_edit_attributes()","admincontroller#user_content()","admincontroller#user_detail()","gonzo::acts::flaggable::instancemethods#user_has_flagged?()","user#user_icon_url()","updateaction#user_ids_without_blocked_and_muted()","applicationhelper#user_image()","projectuser#user_invited?()","taxoncurator#user_is_a_site_curator()","projectuserinvitation#user_is_not_already_a_member()","applicationcontroller#user_logging()","guide#user_login()","listedtaxon#user_login()","observation#user_login()","post#user_must_be_on_site_long_enough()","source#user_name()","flickrphoto#user_owns_photo()","emailer#user_parent_confirmation()","applicationcontroller#user_request_logging()","applicationhelper#user_seen_announcement?()","observationscontroller#user_stats()","emailer#user_updates_suspended()","observation#user_viewed_updates()","updateaction::user_viewed_updates()","admincontroller#users()","project#users_can_add?()","yearstatistic::users_helped()","yearstatistic::users_histogram_by_created_month()","yearstatistic::users_who_helped()","subscription::users_with_unviewed_updates_from()","updateaction::users_with_unviewed_updates_from_query()","site#using_recaptcha?()","devise::strategies::applicationjsonwebtoken#valid?()","devise::strategies::jsonwebtoken#valid?()","elasticmodel::valid_latlon?()","authenticatedsystem#valid_remember_cookie?()","photo::valid_remote_photo_url()","photo::valid_remote_photo_url?()","taxonname#valid_scientific_name_must_match_taxon_name()","goal#validate_and_add_contribution()","user#validate_email_domain_exists()","user#validate_email_pattern()","bulkobservationfile#validate_file()","placegeometry#validate_geometry()","taxonrange#validate_geometry()","taxon#validate_locked()","place#validate_name_does_not_start_with_a_number()","observationfieldvalue#validate_observation_field_allowed_values()","observationfieldvalue#validate_observation_field_datatype()","place#validate_parent_is_not_self()","message#validate_to_not_from()","mushroomobserverimportflowtask#validate_unique_hash()","place#validate_with_geom()","goalrule#validates?()","listrule#validates?()","rule#validates?()","ruler::classmethods#validates_rules_from()","darwincore::observationfields::instancemethods#value()","darwincore::projectobservations::instancemethods#value()","annotation#value_belongs_to_attribute()","annotation#value_belongs_to_taxon()","annotation#value_is_a_value()","controlledterm#values_for_observation()","taxonchange#verb_phrase()","taxonmerge#verb_phrase()","taxonsplit#verb_phrase()","taxonswap#verb_phrase()","darwincore::occurrence::instancemethods#verbatimeventdate()","darwincore::occurrence::instancemethods#verbatimlocality()","observation#verifiable?()","projectobservation#verifiable?()","googlerecaptcha::verify_recaptcha()","darwincore::vernacularname::instancemethods#vernacularname()","darwincore::eolmedia::instancemethods#view()","darwincore::observationfields::instancemethods#view()","darwincore::occurrence::instancemethods#view()","darwincore::projectobservations::instancemethods#view()","darwincore::taxon::instancemethods#view()","darwincore::user::instancemethods#view()","taxon#view_context()","observationscontroller#viewed_updates()","identification#vision()","identification#vision=()","annotation#votable_callback()","qualitymetric::vote()","qualitymetricscontroller#vote()","votescontroller#vote()","annotation#vote_score()","observation#voted_in_to_needs_id?()","observation#voted_out_of_needs_id?()","elasticmodel::wait_until_elasticsearch_is_running()","elasticmodel::wait_until_index_exists()","mushroomobserverimportflowtask#warn()","observation#was_georeferenced?()","statscontroller#wed_bioblitz()","observationscontroller#widget()","placescontroller#widget()","wikipageshelper#wiki_content()","wikipageshelper#wiki_css()","wikipageshelper#wiki_macros()","wikipageshelper#wiki_nav()","wikipageshelper#wiki_page_attachments()","wikipageshelper#wiki_topnav()","wikipageshelper#wiki_user()","shared::wikipediamodule#wikipedia()","taxondescribers::wikipedia#wikipedia()","taxondescribers::wikipediaes#wikipedia()","taxondescribers::wikipediafr#wikipedia()","taxon#wikipedia_attribution()","wikimediacommonsphoto::wikipedia_image_filename_for_title()","place#wikipedia_name()","taxon#wikipedia_summary()","projectobservation#wild?()","applicationhelper#windowed_pagination_links()","darwincore::occurrence::instancemethods#winning_annotation_value_for_term()","darwincore::occurrence::instancemethods#winning_annotations_for_term()","guidetaxon#within_count_limit()","project#within_umbrella_ids()","taxon::without_callbacks()","observationsexportflowtask#work_path()","darwincore::archive#write_observation_fields_data()","darwincore::archive#write_occurrence_data()","darwincore::archive#write_project_observations_data()","darwincore::archive#write_simple_multimedia_data()","darwincore::archive#write_user_data()","picasa#xml()","statscontroller#year()","usershelper#you_or_login()","statscontroller#your_year()",""],"info":[["ActionController","","classes/ActionController.html","",""],["ActionController::Base","","classes/ActionController/Base.html","",""],["ActiveRecord","","classes/ActiveRecord.html","","<p>lib/activerecord_reset_sublass_fix.rb gist.github.com/88826 TODO remove in rails3\n"],["ActiveRecord::Base","","classes/ActiveRecord/Base.html","",""],["ActsAsElasticModel","","classes/ActsAsElasticModel.html","",""],["ActsAsSpammable","","classes/ActsAsSpammable.html","",""],["ActsAsSpammable::User","","classes/ActsAsSpammable/User.html","",""],["ActsAsUUIDable","","classes/ActsAsUUIDable.html","",""],["Admin","","classes/Admin.html","",""],["Admin::DelayedJobsController","","classes/Admin/DelayedJobsController.html","",""],["AdminController","","classes/AdminController.html","","<p>A collection of tools useful for administrators.\n"],["Ambidextrous","","classes/Ambidextrous.html","",""],["Annotation","","classes/Annotation.html","","<p>encoding: utf-8\n"],["AnnotationsController","","classes/AnnotationsController.html","",""],["Announcement","","classes/Announcement.html","",""],["AnnouncementsController","","classes/AnnouncementsController.html","",""],["ApiEndpoint","","classes/ApiEndpoint.html","",""],["ApiEndpointCache","","classes/ApiEndpointCache.html","",""],["AppleAppSiteAssociationController","","classes/AppleAppSiteAssociationController.html","","<p>developer.apple.com/documentation/xcode/supporting-associated-domains\n"],["ApplicationController","","classes/ApplicationController.html","","<p>Filters added to this controller will be run for all controllers in the application. Likewise, all the …\n"],["ApplicationHelper","","classes/ApplicationHelper.html","","<p>encoding: utf-8\n\n<pre><code>Methods added to this helper will be available to all templates in the application.\nrequire ...\n</code></pre>\n"],["ApplicationRecord","","classes/ApplicationRecord.html","",""],["Array","","classes/Array.html","",""],["Assessment","","classes/Assessment.html","",""],["AssessmentSection","","classes/AssessmentSection.html","",""],["AssessmentSectionsController","","classes/AssessmentSectionsController.html","",""],["AssessmentsController","","classes/AssessmentsController.html","",""],["Atlas","","classes/Atlas.html","",""],["AtlasAlteration","","classes/AtlasAlteration.html","",""],["AtlasesController","","classes/AtlasesController.html","",""],["AuthenticatedSystem","","classes/AuthenticatedSystem.html","",""],["AuthenticatedTestHelper","","classes/AuthenticatedTestHelper.html","",""],["Benchmarker","","classes/Benchmarker.html","","<p>Utilitity for benchmarking code in the console. Use it like this:\n<p>Benchmarker.benchmark do |b|\n\n<pre><code>b.benchmark ...\n</code></pre>\n"],["BootstrapFormBuilder","","classes/BootstrapFormBuilder.html","",""],["BulkObservationFile","","classes/BulkObservationFile.html","","<p>Custom DelayedJob task for the bulk upload functionality.\n"],["BulkObservationFile::BulkObservationException","","classes/BulkObservationFile/BulkObservationException.html","",""],["CalendarsController","","classes/CalendarsController.html","",""],["CatalogueOfLife","","classes/CatalogueOfLife.html","","<p>Wrapper class for the CoL ReSTish web service methods.  This class doesn&#39;t  do much more than pass …\n"],["CheckList","","classes/CheckList.html","","<p>CheckLists are lists of Taxa that occur in a Place.\n"],["CheckListsController","","classes/CheckListsController.html","",""],["ClassMatchers","","classes/ClassMatchers.html","","<p>RSpec ClassMatchers classes\n"],["ClassMatchers::BeA","","classes/ClassMatchers/BeA.html","",""],["ClassMatchers::BehaveLikeA","","classes/ClassMatchers/BehaveLikeA.html","",""],["CloudfrontACLUpdater","","classes/CloudfrontACLUpdater.html","",""],["CloudfrontInvalidator","","classes/CloudfrontInvalidator.html","",""],["CloudfrontLogParser","","classes/CloudfrontLogParser.html","",""],["Color","","classes/Color.html","",""],["Comment","","classes/Comment.html","",""],["CommentSweeper","","classes/CommentSweeper.html","",""],["CommentsController","","classes/CommentsController.html","",""],["CompleteSet","","classes/CompleteSet.html","",""],["CompleteSetsController","","classes/CompleteSetsController.html","",""],["CompressedYAMLColumn","","classes/CompressedYAMLColumn.html","",""],["ComputerVisionDemoController","","classes/ComputerVisionDemoController.html","",""],["ComputerVisionDemoUpload","","classes/ComputerVisionDemoUpload.html","",""],["ComputerVisionDemoUploadsController","","classes/ComputerVisionDemoUploadsController.html","",""],["ConabioService","","classes/ConabioService.html","",""],["ConservationStatus","","classes/ConservationStatus.html","","<p>encoding: utf-8\n"],["ConservationStatusesController","","classes/ConservationStatusesController.html","",""],["ConservationStatusesHelper","","classes/ConservationStatusesHelper.html","",""],["ControlledTerm","","classes/ControlledTerm.html","","<p>encoding: utf-8\n"],["ControlledTermLabel","","classes/ControlledTermLabel.html","",""],["ControlledTermLabelsController","","classes/ControlledTermLabelsController.html","",""],["ControlledTermTaxon","","classes/ControlledTermTaxon.html","",""],["ControlledTermValue","","classes/ControlledTermValue.html","",""],["ControlledTermValuesController","","classes/ControlledTermValuesController.html","",""],["ControlledTermsController","","classes/ControlledTermsController.html","",""],["CuratorApplicationsController","","classes/CuratorApplicationsController.html","",""],["CustomLogFormatter","","classes/CustomLogFormatter.html","",""],["CustomProject","","classes/CustomProject.html","",""],["CustomProjectsController","","classes/CustomProjectsController.html","",""],["DJLogstashPlugin","","classes/DJLogstashPlugin.html","","<p>require &#39;delayed_job&#39;\n"],["DJMakaraPlugin","","classes/DJMakaraPlugin.html","",""],["DarwinCore","","classes/DarwinCore.html","","<p>wrappers and constants for expressing iNat records as Darwin Core fields\n"],["DarwinCore::Archive","","classes/DarwinCore/Archive.html","",""],["DarwinCore::Cores","","classes/DarwinCore/Cores.html","",""],["DarwinCore::Descriptor","","classes/DarwinCore/Descriptor.html","",""],["DarwinCore::EolMedia","","classes/DarwinCore/EolMedia.html","","<p>wrappers and constants for expressing iNat records as Darwin Core fields\n"],["DarwinCore::EolMedia::InstanceMethods","","classes/DarwinCore/EolMedia/InstanceMethods.html","",""],["DarwinCore::Helpers","","classes/DarwinCore/Helpers.html","",""],["DarwinCore::Metadata","","classes/DarwinCore/Metadata.html","",""],["DarwinCore::ObservationFields","","classes/DarwinCore/ObservationFields.html","",""],["DarwinCore::ObservationFields::InstanceMethods","","classes/DarwinCore/ObservationFields/InstanceMethods.html","",""],["DarwinCore::Occurrence","","classes/DarwinCore/Occurrence.html","",""],["DarwinCore::Occurrence::InstanceMethods","","classes/DarwinCore/Occurrence/InstanceMethods.html","",""],["DarwinCore::ProjectObservations","","classes/DarwinCore/ProjectObservations.html","",""],["DarwinCore::ProjectObservations::InstanceMethods","","classes/DarwinCore/ProjectObservations/InstanceMethods.html","",""],["DarwinCore::SimpleMultimedia","","classes/DarwinCore/SimpleMultimedia.html","",""],["DarwinCore::SimpleMultimedia::InstanceMethods","","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html","",""],["DarwinCore::Taxon","","classes/DarwinCore/Taxon.html","",""],["DarwinCore::Taxon::InstanceMethods","","classes/DarwinCore/Taxon/InstanceMethods.html","",""],["DarwinCore::User","","classes/DarwinCore/User.html","",""],["DarwinCore::User::InstanceMethods","","classes/DarwinCore/User/InstanceMethods.html","",""],["DarwinCore::VernacularName","","classes/DarwinCore/VernacularName.html","",""],["DarwinCore::VernacularName::InstanceMethods","","classes/DarwinCore/VernacularName/InstanceMethods.html","",""],["DataPartner","","classes/DataPartner.html","",""],["DataPartnerLinkers","","classes/DataPartnerLinkers.html","",""],["DataPartnerLinkers::Calflora","","classes/DataPartnerLinkers/Calflora.html","",""],["DataPartnerLinkers::DataPartnerLinker","","classes/DataPartnerLinkers/DataPartnerLinker.html","","<p>Creats ObservationLinks for a DataPartner. This is basically an interface with some barebones scaffolding. …\n"],["DataPartnerLinkers::DataPartnerLinkerError","","classes/DataPartnerLinkers/DataPartnerLinkerError.html","",""],["DataPartnerLinkers::GBIF","","classes/DataPartnerLinkers/GBIF.html","",""],["DataPartnerLinkers::MarylandBiodiversityProject","","classes/DataPartnerLinkers/MarylandBiodiversityProject.html","",""],["DataPartnersController","","classes/DataPartnersController.html","",""],["DefaultFormBuilder","","classes/DefaultFormBuilder.html","",""],["DefaultFormBuilder::INatInstanceTag","","classes/DefaultFormBuilder/INatInstanceTag.html","",""],["DeletedObservation","","classes/DeletedObservation.html","",""],["DeletedPhoto","","classes/DeletedPhoto.html","",""],["DeletedSound","","classes/DeletedSound.html","",""],["DeletedUser","","classes/DeletedUser.html","",""],["Denormalizer","","classes/Denormalizer.html","",""],["Devise","","classes/Devise.html","",""],["Devise::Strategies","","classes/Devise/Strategies.html","",""],["Devise::Strategies::ApplicationJsonWebToken","","classes/Devise/Strategies/ApplicationJsonWebToken.html","",""],["Devise::Strategies::JsonWebToken","","classes/Devise/Strategies/JsonWebToken.html","",""],["DeviseMailer","","classes/DeviseMailer.html","",""],["DonateController","","classes/DonateController.html","",""],["ElasticModel","","classes/ElasticModel.html","",""],["EmailSuppression","","classes/EmailSuppression.html","",""],["Emailer","","classes/Emailer.html","",""],["EolController","","classes/EolController.html","",""],["EolPhoto","","classes/EolPhoto.html","",""],["EolService","","classes/EolService.html","","<p>encoding: utf-8\n"],["ErrorsController","","classes/ErrorsController.html","",""],["ExifMetadata","","classes/ExifMetadata.html","","<p>Extracts exif tags from files and returns a hash with metadata formated for iNaturalist serialization …\n"],["ExifMetadata::ExtractionError","","classes/ExifMetadata/ExtractionError.html","",""],["ExplodedAtlasPlace","","classes/ExplodedAtlasPlace.html","",""],["ExplodedAtlasPlacesController","","classes/ExplodedAtlasPlacesController.html","",""],["ExternalTaxon","","classes/ExternalTaxon.html","",""],["FacebookController","","classes/FacebookController.html","",""],["FacebookHelper","","classes/FacebookHelper.html","",""],["FacebookPhoto","","classes/FacebookPhoto.html","","<p>encoding: utf-8\n"],["FakeView","","classes/FakeView.html","","<p>Allows access to rendering, helpers, and URL helpers from anywhere. Works by including URL helpers and …\n"],["FileExtension","","classes/FileExtension.html","",""],["FilePrefix","","classes/FilePrefix.html","",""],["Flag","","classes/Flag.html","",""],["FlagsController","","classes/FlagsController.html","",""],["FlagsHelper","","classes/FlagsHelper.html","",""],["FlickrCache","","classes/FlickrCache.html","",""],["FlickrController","","classes/FlickrController.html","",""],["FlickrIdentity","","classes/FlickrIdentity.html","",""],["FlickrPhoto","","classes/FlickrPhoto.html","","<p>encoding: utf-8\n"],["FlowTasksController","","classes/FlowTasksController.html","",""],["FlowTasksHelper","","classes/FlowTasksHelper.html","",""],["FrequencyCell","","classes/FrequencyCell.html","",""],["FrequencyCellMonthTaxon","","classes/FrequencyCellMonthTaxon.html","",""],["Friendship","","classes/Friendship.html","",""],["FriendshipsController","","classes/FriendshipsController.html","",""],["GbifService","","classes/GbifService.html","","<p>encoding: utf-8\n"],["Goal","","classes/Goal.html","",""],["GoalContribution","","classes/GoalContribution.html","",""],["GoalParticipant","","classes/GoalParticipant.html","",""],["GoalRule","","classes/GoalRule.html","",""],["Gonzo","","classes/Gonzo.html","","<p>ActsAsFlaggable\n"],["Gonzo::Acts","","classes/Gonzo/Acts.html","",""],["Gonzo::Acts::Flaggable","","classes/Gonzo/Acts/Flaggable.html","",""],["Gonzo::Acts::Flaggable::ClassMethods","","classes/Gonzo/Acts/Flaggable/ClassMethods.html","",""],["Gonzo::Acts::Flaggable::InstanceMethods","","classes/Gonzo/Acts/Flaggable/InstanceMethods.html","","<p>This module contains instance methods\n"],["Gonzo::Acts::Flaggable::SingletonMethods","","classes/Gonzo/Acts/Flaggable/SingletonMethods.html","","<p>This module contains class methods\n"],["GooglePhotosApi","","classes/GooglePhotosApi.html","",""],["GoogleRecaptcha","","classes/GoogleRecaptcha.html","",""],["GoogleStreetViewPhoto","","classes/GoogleStreetViewPhoto.html","",""],["Guide","","classes/Guide.html","",""],["GuideEolUpdateFlowTask","","classes/GuideEolUpdateFlowTask.html","","<p>encoding: utf-8\n"],["GuidePhoto","","classes/GuidePhoto.html","","<p>encoding: utf-8\n"],["GuidePhotosController","","classes/GuidePhotosController.html","",""],["GuideRange","","classes/GuideRange.html","",""],["GuideRangesController","","classes/GuideRangesController.html","",""],["GuideSection","","classes/GuideSection.html","",""],["GuideSectionsController","","classes/GuideSectionsController.html","",""],["GuideTaxaController","","classes/GuideTaxaController.html","",""],["GuideTaxon","","classes/GuideTaxon.html","","<p>encoding: utf-8\n"],["GuideUser","","classes/GuideUser.html","",""],["GuidesController","","classes/GuidesController.html","","<p>encoding: utf-8\n"],["GuidesHelper","","classes/GuidesHelper.html","","<p>encoding: utf-8\n"],["HasSubscribers","","classes/HasSubscribers.html","",""],["HasSubscribers::ClassMethods","","classes/HasSubscribers/ClassMethods.html","",""],["HasSubscribers::InstanceMethods","","classes/HasSubscribers/InstanceMethods.html","",""],["HelpController","","classes/HelpController.html","",""],["I18nExtensions","","classes/I18nExtensions.html","",""],["INatAPIService","","classes/INatAPIService.html","","<p>encoding: utf-8\n"],["INatAWS","","classes/INatAWS.html","","<p>encoding: utf-8\n"],["Identification","","classes/Identification.html","","<p>encoding: utf-8\n"],["IdentificationsController","","classes/IdentificationsController.html","",""],["InatContentTypeDetector","","classes/InatContentTypeDetector.html","","<p>Custom Paperclip content detector. Generally we want to rely on the file command to ensure images get …\n"],["JsonWebToken","","classes/JsonWebToken.html","",""],["LifelistsController","","classes/LifelistsController.html","",""],["List","","classes/List.html","","<p>A List is a list of taxa.  Naturalists often keep lists of taxa, whether they be lists of things they&#39;ve …\n"],["ListRule","","classes/ListRule.html","","<p>A ListRule determines whether or not a taxon should be added to a list.  When a taxon is added to a list, …\n"],["ListedTaxaController","","classes/ListedTaxaController.html","",""],["ListedTaxaFromCsvFlowTask","","classes/ListedTaxaFromCsvFlowTask.html","","<p>encoding: utf-8\n"],["ListedTaxaHelper","","classes/ListedTaxaHelper.html","",""],["ListedTaxon","","classes/ListedTaxon.html","","<p>Join model for Lists and Taxa.  In addition to storing a reference to the last observed taxon (saving …\n"],["ListedTaxonAlteration","","classes/ListedTaxonAlteration.html","",""],["ListsController","","classes/ListsController.html","",""],["LocalPhoto","","classes/LocalPhoto.html","","<p>encoding: utf-8\n"],["LocalSound","","classes/LocalSound.html","",""],["Message","","classes/Message.html","",""],["MessagesController","","classes/MessagesController.html","",""],["MetaService","","classes/MetaService.html","",""],["ModelAdapter","","classes/ModelAdapter.html","","<p>Module for ActiveRecord model adapters.\n<p>Usage:\n\n<pre><code>class YourModelAdapter\n  include ModelAdapter\n  alias :your_model ...\n</code></pre>\n"],["ModelAttributeChange","","classes/ModelAttributeChange.html","",""],["ModeratorAction","","classes/ModeratorAction.html","",""],["ModeratorActionsController","","classes/ModeratorActionsController.html","",""],["ModeratorNote","","classes/ModeratorNote.html","",""],["ModeratorNotesController","","classes/ModeratorNotesController.html","",""],["MushroomObserverImportFlowTask","","classes/MushroomObserverImportFlowTask.html","",""],["MushroomObserverImportFlowTask::ForbiddenError","","classes/MushroomObserverImportFlowTask/ForbiddenError.html","",""],["MushroomObserverImportFlowTask::MushroomObserverImportFlowTaskError","","classes/MushroomObserverImportFlowTask/MushroomObserverImportFlowTaskError.html","",""],["MushroomObserverImportFlowTask::TimeoutError","","classes/MushroomObserverImportFlowTask/TimeoutError.html","",""],["MushroomObserverImportFlowTask::TooManyRequestsError","","classes/MushroomObserverImportFlowTask/TooManyRequestsError.html","",""],["NameProviderError","","classes/NameProviderError.html","",""],["NewZealandOrganismsRegister","","classes/NewZealandOrganismsRegister.html","","<p>Wrapper class for the NZOR ReSTish web service methods.  This class doesn&#39;t  do much more than pass …\n"],["OauthApplication","","classes/OauthApplication.html","",""],["OauthApplicationsController","","classes/OauthApplicationsController.html","",""],["OauthAuthorizationsController","","classes/OauthAuthorizationsController.html","",""],["OauthAuthorizedApplicationsController","","classes/OauthAuthorizedApplicationsController.html","",""],["OauthTokensController","","classes/OauthTokensController.html","",""],["Object","","classes/Object.html","",""],["Observation","","classes/Observation.html","","<p>encoding: utf-8\n"],["ObservationField","","classes/ObservationField.html","",""],["ObservationFieldValue","","classes/ObservationFieldValue.html","",""],["ObservationFieldValuesController","","classes/ObservationFieldValuesController.html","",""],["ObservationFieldsController","","classes/ObservationFieldsController.html","",""],["ObservationLink","","classes/ObservationLink.html","",""],["ObservationPhoto","","classes/ObservationPhoto.html","",""],["ObservationPhotosController","","classes/ObservationPhotosController.html","",""],["ObservationReview","","classes/ObservationReview.html","",""],["ObservationSearch","","classes/ObservationSearch.html","",""],["ObservationSearch::ClassMethods","","classes/ObservationSearch/ClassMethods.html","",""],["ObservationSound","","classes/ObservationSound.html","",""],["ObservationSoundsController","","classes/ObservationSoundsController.html","",""],["ObservationSweeper","","classes/ObservationSweeper.html","",""],["ObservationsController","","classes/ObservationsController.html","","<p>encoding: utf-8\n"],["ObservationsExportFlowTask","","classes/ObservationsExportFlowTask.html","","<p>encoding: utf-8\n"],["ObservationsExportFlowTask::ObservationsExportDeleted","","classes/ObservationsExportFlowTask/ObservationsExportDeleted.html","",""],["ObservationsExportFlowTask::ObservationsExportError","","classes/ObservationsExportFlowTask/ObservationsExportError.html","",""],["ObservationsExportFlowTask::ObservationsExportNotSaved","","classes/ObservationsExportFlowTask/ObservationsExportNotSaved.html","",""],["ObservationsHelper","","classes/ObservationsHelper.html","",""],["ObservationsPlace","","classes/ObservationsPlace.html","",""],["OldPreferences","","classes/OldPreferences.html","",""],["Paperclip","","classes/Paperclip.html","","<p>Use only the first frame of animated gifs\n<p>Remove most metadata from a photo but preserve color profile …\n"],["Paperclip::Deanimator","","classes/Paperclip/Deanimator.html","",""],["Paperclip::MetadataFilter","","classes/Paperclip/MetadataFilter.html","",""],["Paperclip::Rotator","","classes/Paperclip/Rotator.html","",""],["Password","","classes/Password.html","",""],["PasswordMailer","","classes/PasswordMailer.html","",""],["Photo","","classes/Photo.html","","<p>encoding: utf-8\n"],["Photo::MissingPhotoError","","classes/Photo/MissingPhotoError.html","",""],["PhotoMetadata","","classes/PhotoMetadata.html","",""],["PhotoSweeper","","classes/PhotoSweeper.html","",""],["PhotosController","","classes/PhotosController.html","","<p>encoding: utf-8\n"],["Picasa","","classes/Picasa.html","",""],["PicasaController","","classes/PicasaController.html","",""],["PicasaPhoto","","classes/PicasaPhoto.html","","<p>encoding: utf-8\n"],["Place","","classes/Place.html","","<p>encoding: utf-8\n"],["PlaceDenormalizer","","classes/PlaceDenormalizer.html","",""],["PlaceGeometry","","classes/PlaceGeometry.html","","<p>Stores the geometries of places.  We COULD have had a geometry column in the places table, but geometries …\n"],["PlaceSources","","classes/PlaceSources.html","","<p>encoding: utf-8\n\n<pre><code>Just a place to shove some useful data &amp; functionality related to place\nsources.  Note ...\n</code></pre>\n"],["PlaceSweeper","","classes/PlaceSweeper.html","",""],["PlaceTaxonName","","classes/PlaceTaxonName.html","",""],["PlacesController","","classes/PlacesController.html","","<p>encoding: utf-8\n"],["PlacesHelper","","classes/PlacesHelper.html","",""],["PlacesSite","","classes/PlacesSite.html","",""],["Post","","classes/Post.html","",""],["PostsController","","classes/PostsController.html","",""],["Privileges","","classes/Privileges.html","",""],["Privileges::ClassMethods","","classes/Privileges/ClassMethods.html","",""],["Privileges::Controller","","classes/Privileges/Controller.html","",""],["Privileges::Controller::ClassMethods","","classes/Privileges/Controller/ClassMethods.html","",""],["Privileges::InstanceMethods","","classes/Privileges/InstanceMethods.html","",""],["Project","","classes/Project.html","",""],["Project::ProjectAggregatorAlreadyRunning","","classes/Project/ProjectAggregatorAlreadyRunning.html","",""],["ProjectAsset","","classes/ProjectAsset.html","",""],["ProjectAssetsController","","classes/ProjectAssetsController.html","",""],["ProjectList","","classes/ProjectList.html","",""],["ProjectObservation","","classes/ProjectObservation.html","",""],["ProjectObservationField","","classes/ProjectObservationField.html","",""],["ProjectObservationRule","","classes/ProjectObservationRule.html","",""],["ProjectObservationsController","","classes/ProjectObservationsController.html","",""],["ProjectUser","","classes/ProjectUser.html","",""],["ProjectUserInvitation","","classes/ProjectUserInvitation.html","","<p>encoding: utf-8\n"],["ProjectUserInvitationsController","","classes/ProjectUserInvitationsController.html","",""],["ProjectUserRule","","classes/ProjectUserRule.html","",""],["ProjectUsersController","","classes/ProjectUsersController.html","",""],["ProjectsController","","classes/ProjectsController.html","",""],["ProviderAuthorization","","classes/ProviderAuthorization.html","","<p>would&#39;ve liked to call this simply Authorization, but that model name clashes with restful_authentication …\n"],["ProviderAuthorizationsController","","classes/ProviderAuthorizationsController.html","",""],["ProviderOauthController","","classes/ProviderOauthController.html","",""],["ProviderOauthController::BadAssertionTypeError","","classes/ProviderOauthController/BadAssertionTypeError.html","",""],["ProviderOauthController::ChildWithoutPermissionError","","classes/ProviderOauthController/ChildWithoutPermissionError.html","",""],["ProviderOauthController::SuspendedError","","classes/ProviderOauthController/SuspendedError.html","",""],["QualityMetric","","classes/QualityMetric.html","",""],["QualityMetricsController","","classes/QualityMetricsController.html","",""],["Rakismet","","classes/Rakismet.html","","<p>added a disable attribute on the class which can be used to disable akismet API calls, for example when …\n"],["Ratatosk","","classes/Ratatosk.html","",""],["Ratatosk::NameProviders","","classes/Ratatosk/NameProviders.html","",""],["Ratatosk::NameProviders::ColNameProvider","","classes/Ratatosk/NameProviders/ColNameProvider.html","","<p>Concrete strategy for getting names from the Catalogue of Life\n"],["Ratatosk::NameProviders::ColTaxonAdapter","","classes/Ratatosk/NameProviders/ColTaxonAdapter.html","",""],["Ratatosk::NameProviders::ColTaxonNameAdapter","","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html","",""],["Ratatosk::NameProviders::NZORNameProvider","","classes/Ratatosk/NameProviders/NZORNameProvider.html","","<p>Concrete strategy for getting names from NZOR\n"],["Ratatosk::NameProviders::NZORTaxonAdapter","","classes/Ratatosk/NameProviders/NZORTaxonAdapter.html","",""],["Ratatosk::NameProviders::NZORTaxonNameAdapter","","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html","",""],["Ratatosk::NameProviders::UBioNameProvider","","classes/Ratatosk/NameProviders/UBioNameProvider.html","",""],["Ratatosk::NameProviders::UBioTaxonAdapter","","classes/Ratatosk/NameProviders/UBioTaxonAdapter.html","",""],["Ratatosk::NameProviders::UBioTaxonNameAdapter","","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html","","<p>Adapt a uBio namebank RDF response to an iNat TaxonName\n"],["Ratatosk::Ratatosk","","classes/Ratatosk/Ratatosk.html","",""],["RatatoskGraftError","","classes/RatatoskGraftError.html","",""],["RelationshipsController","","classes/RelationshipsController.html","","<p>Bit of a hack to make expose an API for relationships that doesn&#39;t use the model name Friendship …\n"],["Role","","classes/Role.html","",""],["Rubaidh","","classes/Rubaidh.html","",""],["Rubaidh::GoogleAnalyticsMixin","","classes/Rubaidh/GoogleAnalyticsMixin.html","",""],["RubyPicasa","","classes/RubyPicasa.html","",""],["RubyPicasa::Album","","classes/RubyPicasa/Album.html","","<p>Includes attributes and associations defined on Base, plus:\n\n<pre><code>attributes :published,\n  :summary,\n  :rights, ...\n</code></pre>\n"],["RubyPicasa::Author","","classes/RubyPicasa/Author.html","",""],["RubyPicasa::Base","","classes/RubyPicasa/Base.html","","<p>Note that in all defined classes I&#39;m ignoring values I don&#39;t happen to need or know about. Please …\n"],["RubyPicasa::Photo","","classes/RubyPicasa/Photo.html","","<p>Includes attributes and associations defined on Base, plus:\n\n<pre><code>attributes :published,\n  :summary,\n  :version, ...\n</code></pre>\n"],["RubyPicasa::Photo::License","","classes/RubyPicasa/Photo/License.html","",""],["RubyPicasa::Photo::Point","","classes/RubyPicasa/Photo/Point.html","",""],["RubyPicasa::PhotoUrl","","classes/RubyPicasa/PhotoUrl.html","","<p>attributes :url, :height, :width\n"],["RubyPicasa::PicasaError","","classes/RubyPicasa/PicasaError.html","",""],["RubyPicasa::PicasaTokenError","","classes/RubyPicasa/PicasaTokenError.html","",""],["RubyPicasa::RecentPhotos","","classes/RubyPicasa/RecentPhotos.html","","<p>Includes attributes and associations defined on Base and User, plus:\n\n<pre><code>has_many :entries, :Photo, &#39;entry&#39;\n</code></pre>\n"],["RubyPicasa::Search","","classes/RubyPicasa/Search.html","",""],["RubyPicasa::ThumbnailUrl","","classes/RubyPicasa/ThumbnailUrl.html","",""],["RubyPicasa::User","","classes/RubyPicasa/User.html","","<p>Includes attributes and associations defined on Base, plus:\n\n<pre><code>attributes :total_results, # represents total ...\n</code></pre>\n"],["Rule","","classes/Rule.html","",""],["Ruler","","classes/Ruler.html","",""],["Ruler::ClassMethods","","classes/Ruler/ClassMethods.html","",""],["SavedLocation","","classes/SavedLocation.html","",""],["SavedLocationsController","","classes/SavedLocationsController.html","",""],["SearchController","","classes/SearchController.html","","<p>encoding: utf-8\n"],["Shared","","classes/Shared.html","",""],["Shared::FiltersModule","","classes/Shared/FiltersModule.html","",""],["Shared::GuideModule","","classes/Shared/GuideModule.html","",""],["Shared::LicenseModule","","classes/Shared/LicenseModule.html","",""],["Shared::LicenseModule::ClassMethods","","classes/Shared/LicenseModule/ClassMethods.html","","<p>Make some class methods on the class including this module, e.g. Photo.license_number_for_code\n"],["Shared::ListsModule","","classes/Shared/ListsModule.html","",""],["Shared::MailerModule","","classes/Shared/MailerModule.html","",""],["Shared::SweepersModule","","classes/Shared/SweepersModule.html","",""],["Shared::TouchesObservationModule","","classes/Shared/TouchesObservationModule.html","",""],["Shared::WikipediaModule","","classes/Shared/WikipediaModule.html","",""],["SimplifiedTreeMilestoneTaxon","","classes/SimplifiedTreeMilestoneTaxon.html","",""],["Site","","classes/Site.html","",""],["SiteAdmin","","classes/SiteAdmin.html","",""],["SiteAdminsController","","classes/SiteAdminsController.html","",""],["SiteConfig","","classes/SiteConfig.html","",""],["SiteDataExporter","","classes/SiteDataExporter.html","",""],["SiteFeaturedProject","","classes/SiteFeaturedProject.html","",""],["SiteStatistic","","classes/SiteStatistic.html","",""],["SitesController","","classes/SitesController.html","",""],["Sound","","classes/Sound.html","",""],["SoundcloudIdentity","","classes/SoundcloudIdentity.html","",""],["SoundcloudSound","","classes/SoundcloudSound.html","",""],["SoundcloudSoundsController","","classes/SoundcloudSoundsController.html","",""],["SoundsController","","classes/SoundsController.html","",""],["Source","","classes/Source.html","",""],["SourcesController","","classes/SourcesController.html","",""],["SphericalMercator","","classes/SphericalMercator.html","","<p>Quick and dirty port from Dane Springmeyer&#39;s tilelite Originally from:\n\n<pre><code>http://svn.openstreetmap.org/applications/rendering/mapnik/generate_tiles.py\n</code></pre>\n"],["StatsController","","classes/StatsController.html","",""],["Subscription","","classes/Subscription.html","",""],["SubscriptionsController","","classes/SubscriptionsController.html","",""],["TaxaController","","classes/TaxaController.html","","<p>encoding: utf-8\n"],["TaxaHelper","","classes/TaxaHelper.html","","<p>encoding: utf-8\n"],["Taxon","","classes/Taxon.html","",""],["TaxonAdapterError","","classes/TaxonAdapterError.html","",""],["TaxonChange","","classes/TaxonChange.html","",""],["TaxonChange::ActiveChildrenError","","classes/TaxonChange/ActiveChildrenError.html","",""],["TaxonChange::PermissionError","","classes/TaxonChange/PermissionError.html","",""],["TaxonChange::RankLevelError","","classes/TaxonChange/RankLevelError.html","",""],["TaxonChangeTaxaController","","classes/TaxonChangeTaxaController.html","",""],["TaxonChangeTaxon","","classes/TaxonChangeTaxon.html","",""],["TaxonChangesController","","classes/TaxonChangesController.html","",""],["TaxonCurator","","classes/TaxonCurator.html","",""],["TaxonCuratorsController","","classes/TaxonCuratorsController.html","",""],["TaxonDescribers","","classes/TaxonDescribers.html","","<p>Trivial taxon describer that uses Taxon#auto_summary to provide a bare bones summary of any iNat taxon …\n"],["TaxonDescribers::AmphibiaWeb","","classes/TaxonDescribers/AmphibiaWeb.html","",""],["TaxonDescribers::Base","","classes/TaxonDescribers/Base.html","",""],["TaxonDescribers::Conabio","","classes/TaxonDescribers/Conabio.html","",""],["TaxonDescribers::Eol","","classes/TaxonDescribers/Eol.html","",""],["TaxonDescribers::Inaturalist","","classes/TaxonDescribers/Inaturalist.html","",""],["TaxonDescribers::Wikipedia","","classes/TaxonDescribers/Wikipedia.html","",""],["TaxonDescribers::WikipediaEs","","classes/TaxonDescribers/WikipediaEs.html","",""],["TaxonDescribers::WikipediaFr","","classes/TaxonDescribers/WikipediaFr.html","",""],["TaxonDescription","","classes/TaxonDescription.html","",""],["TaxonDrop","","classes/TaxonDrop.html","",""],["TaxonFramework","","classes/TaxonFramework.html","",""],["TaxonFrameworkRelationship","","classes/TaxonFrameworkRelationship.html","",""],["TaxonFrameworkRelationshipsController","","classes/TaxonFrameworkRelationshipsController.html","",""],["TaxonFrameworksController","","classes/TaxonFrameworksController.html","",""],["TaxonLink","","classes/TaxonLink.html","",""],["TaxonLinksController","","classes/TaxonLinksController.html","",""],["TaxonMerge","","classes/TaxonMerge.html","",""],["TaxonName","","classes/TaxonName.html","",""],["TaxonNameAdapterError","","classes/TaxonNameAdapterError.html","",""],["TaxonNameSweeper","","classes/TaxonNameSweeper.html","",""],["TaxonNamesController","","classes/TaxonNamesController.html","",""],["TaxonPhoto","","classes/TaxonPhoto.html","",""],["TaxonPhotosController","","classes/TaxonPhotosController.html","",""],["TaxonRange","","classes/TaxonRange.html","",""],["TaxonRangesController","","classes/TaxonRangesController.html","",""],["TaxonRangesHelper","","classes/TaxonRangesHelper.html","",""],["TaxonScheme","","classes/TaxonScheme.html","",""],["TaxonSchemeTaxaController","","classes/TaxonSchemeTaxaController.html","",""],["TaxonSchemeTaxon","","classes/TaxonSchemeTaxon.html","",""],["TaxonSchemesController","","classes/TaxonSchemesController.html","",""],["TaxonSplit","","classes/TaxonSplit.html","",""],["TaxonStage","","classes/TaxonStage.html","",""],["TaxonSwap","","classes/TaxonSwap.html","",""],["TaxonSweeper","","classes/TaxonSweeper.html","",""],["TimeZoneGeometry","","classes/TimeZoneGeometry.html","","<p>Contains a time zone geometry as defined by github.com/evansiroky/timezone-boundary-builder/releases …\n"],["TranslationsController","","classes/TranslationsController.html","",""],["Trip","","classes/Trip.html","",""],["TripPurpose","","classes/TripPurpose.html","",""],["TripTaxon","","classes/TripTaxon.html","",""],["TripsController","","classes/TripsController.html","",""],["UBioAuthorizationError","","classes/UBioAuthorizationError.html","",""],["UBioConnectionError","","classes/UBioConnectionError.html","",""],["UBioService","","classes/UBioService.html","","<p>Wrapper class for the uBio ReSTish web service methods.  This class doesn&#39;t  do much more than pass …\n"],["UpdateAction","","classes/UpdateAction.html","",""],["User","","classes/User.html","",""],["UserBlock","","classes/UserBlock.html","",""],["UserBlocksController","","classes/UserBlocksController.html","",""],["UserMute","","classes/UserMute.html","",""],["UserMutesController","","classes/UserMutesController.html","",""],["UserParent","","classes/UserParent.html","",""],["UserParentsController","","classes/UserParentsController.html","",""],["UserPrivilege","","classes/UserPrivilege.html","",""],["UserSweeper","","classes/UserSweeper.html","",""],["Users","","classes/Users.html","",""],["Users::PasswordsController","","classes/Users/PasswordsController.html","",""],["Users::RegistrationsController","","classes/Users/RegistrationsController.html","",""],["Users::SessionsController","","classes/Users/SessionsController.html","",""],["UsersController","","classes/UsersController.html","","<p>encoding: utf-8\n"],["UsersHelper","","classes/UsersHelper.html","",""],["VotesController","","classes/VotesController.html","",""],["WelcomeController","","classes/WelcomeController.html","",""],["WikiPage","","classes/WikiPage.html","",""],["WikiPageAttachment","","classes/WikiPageAttachment.html","",""],["WikiPageVersion","","classes/WikiPageVersion.html","",""],["WikiPagesController","","classes/WikiPagesController.html","",""],["WikiPagesHelper","","classes/WikiPagesHelper.html","",""],["WikimediaCommonsController","","classes/WikimediaCommonsController.html","",""],["WikimediaCommonsPhoto","","classes/WikimediaCommonsPhoto.html","","<p>encoding: utf-8\n"],["WikimediaCommonsService","","classes/WikimediaCommonsService.html","",""],["WikipediaService","","classes/WikipediaService.html","",""],["YearStatistic","","classes/YearStatistic.html","",""],["CreateDate","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-CreateDate","()",""],["Owner","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-Owner","()",""],["UsageTerms","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-UsageTerms","()",""],["abbreviate_binomial","TaxaHelper","classes/TaxaHelper.html#method-i-abbreviate_binomial","(name)","<p>Abbreviate a binomal / trinomail name string.  Homo sapiens =&gt; H. sapiens\n"],["absent_only_if_not_confirming_observations","ListedTaxon","classes/ListedTaxon.html#method-i-absent_only_if_not_confirming_observations","()",""],["accepted?","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-accepted-3F","()",""],["accepted_name","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-accepted_name","()",""],["accepted_name_hxml","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-accepted_name_hxml","()",""],["accepted_name_hxml","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-accepted_name_hxml","()","<p>returns the xml for the accepted name related to this common/english/vernacular TaxonName\n"],["accessURI","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-accessURI","()",""],["access_denied","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-access_denied","()","<p>Redirect as appropriate when an access request fails.\n<p>The default action is to redirect to the login screen. …\n"],["accumulation","ObservationsController","classes/ObservationsController.html#method-i-accumulation","()",""],["activated_protected_attributes_editable_by?","Taxon","classes/Taxon.html#method-i-activated_protected_attributes_editable_by-3F","( user )",""],["active","Admin::DelayedJobsController","classes/Admin/DelayedJobsController.html#method-i-active","()",""],["active?","User","classes/User.html#method-i-active-3F","()",""],["active_children_conflict?","TaxonChange","classes/TaxonChange.html#method-i-active_children_conflict-3F","()",""],["active_for_authentication?","User","classes/User.html#method-i-active_for_authentication-3F","()","<p>This is a dangerous override in that it doesn&#39;t call super, thereby ignoring the results of all the …\n"],["active_ids","User","classes/User.html#method-c-active_ids","(at_time = Time.now)",""],["active_in_placement","Announcement","classes/Announcement.html#method-c-active_in_placement","( placement, site )",""],["active_parent_if_active","Taxon","classes/Taxon.html#method-i-active_parent_if_active","()",""],["activity_snippet","ApplicationHelper","classes/ApplicationHelper.html#method-i-activity_snippet","(update, notifier, notifier_user, options = {})",""],["acts_as_flaggable","Gonzo::Acts::Flaggable::ClassMethods","classes/Gonzo/Acts/Flaggable/ClassMethods.html#method-i-acts_as_flaggable","()",""],["acts_as_spammable","ActiveRecord::Base","classes/ActiveRecord/Base.html#method-c-acts_as_spammable","(options={})",""],["adapt","DarwinCore::EolMedia","classes/DarwinCore/EolMedia.html#method-c-adapt","(record, options = {})","<p>Extend observation with DwC methods.  For reasons unclear to me, url methods are protected if you instantiate …\n"],["adapt","DarwinCore::ObservationFields","classes/DarwinCore/ObservationFields.html#method-c-adapt","(record, options = {})",""],["adapt","DarwinCore::Occurrence","classes/DarwinCore/Occurrence.html#method-c-adapt","( record, options = {} )","<p>Extend observation with DwC methods.  For reasons unclear to me, url methods are protected if you instantiate …\n"],["adapt","DarwinCore::ProjectObservations","classes/DarwinCore/ProjectObservations.html#method-c-adapt","(record, options = {})",""],["adapt","DarwinCore::SimpleMultimedia","classes/DarwinCore/SimpleMultimedia.html#method-c-adapt","(record, options = {})",""],["adapt","DarwinCore::Taxon","classes/DarwinCore/Taxon.html#method-c-adapt","(record, options = {})",""],["adapt","DarwinCore::User","classes/DarwinCore/User.html#method-c-adapt","( record, options = {} )",""],["adapt","DarwinCore::VernacularName","classes/DarwinCore/VernacularName.html#method-c-adapt","( record, options = {} )",""],["adapted?","GuideSection","classes/GuideSection.html#method-i-adapted-3F","()",""],["add","ProjectsController","classes/ProjectsController.html#method-i-add","()",""],["add_admins","Project","classes/Project.html#method-i-add_admins","()",""],["add_batch","ProjectsController","classes/ProjectsController.html#method-i-add_batch","()",""],["add_color_tags","GuideTaxon","classes/GuideTaxon.html#method-i-add_color_tags","()",""],["add_color_tags","GuidesController","classes/GuidesController.html#method-i-add_color_tags","()",""],["add_comment","FacebookPhoto","classes/FacebookPhoto.html#method-c-add_comment","(user, fb_photo_id, comment_text)",""],["add_comment","FlickrPhoto","classes/FlickrPhoto.html#method-c-add_comment","(user, flickr_photo_id, comment_text)",""],["add_custom_error","Place","classes/Place.html#method-i-add_custom_error","(scope, error)",""],["add_flag","Gonzo::Acts::Flaggable::InstanceMethods","classes/Gonzo/Acts/Flaggable/InstanceMethods.html#method-i-add_flag","(options)","<p>Add a flag.  You can either pass in an instance of a flag or pass in a hash of attributes to be used …\n"],["add_friend","UsersController","classes/UsersController.html#method-i-add_friend","()",""],["add_from_list","ObservationsController","classes/ObservationsController.html#method-i-add_from_list","()",""],["add_from_observations_now","ListsController","classes/ListsController.html#method-i-add_from_observations_now","()",""],["add_google_analytics_code","Rubaidh::GoogleAnalyticsMixin","classes/Rubaidh/GoogleAnalyticsMixin.html#method-i-add_google_analytics_code","()","<p>An after_action to automatically add the analytics code.\n"],["add_input_taxon","TaxonChange","classes/TaxonChange.html#method-i-add_input_taxon","(taxon)","<p>Override in subclasses that use self.taxon_change_taxa as the input\n"],["add_input_taxon","TaxonMerge","classes/TaxonMerge.html#method-i-add_input_taxon","(t)",""],["add_input_taxon","TaxonStage","classes/TaxonStage.html#method-i-add_input_taxon","(t)",""],["add_input_taxon","TaxonSwap","classes/TaxonSwap.html#method-i-add_input_taxon","(t)",""],["add_new_listed_taxa","CheckList","classes/CheckList.html#method-c-add_new_listed_taxa","(taxon, new_place_ids, current_place_ids, taxon_ids)",""],["add_observed_taxa","CheckList","classes/CheckList.html#method-i-add_observed_taxa","(options = {})",""],["add_output_taxon","TaxonChange","classes/TaxonChange.html#method-i-add_output_taxon","(taxon)","<p>Override in subclasses that use self.taxon as the output\n"],["add_output_taxon","TaxonDrop","classes/TaxonDrop.html#method-i-add_output_taxon","(t)",""],["add_output_taxon","TaxonMerge","classes/TaxonMerge.html#method-i-add_output_taxon","(t)",""],["add_output_taxon","TaxonStage","classes/TaxonStage.html#method-i-add_output_taxon","(t)",""],["add_output_taxon","TaxonSwap","classes/TaxonSwap.html#method-i-add_output_taxon","(t)",""],["add_owner_as_project_user","Project","classes/Project.html#method-i-add_owner_as_project_user","(options = {})",""],["add_provider_auth","User","classes/User.html#method-i-add_provider_auth","(auth_info)","<p>add a provider_authorization to this user.\n<p>auth_info is the omniauth info from rack.\n"],["add_rank_tag","GuideTaxon","classes/GuideTaxon.html#method-i-add_rank_tag","(rank, options = {})",""],["add_role","UsersController","classes/UsersController.html#method-i-add_role","()",""],["add_tags","FlickrController","classes/FlickrController.html#method-i-add_tags","()",""],["add_tags_for_rank","GuidesController","classes/GuidesController.html#method-i-add_tags_for_rank","()",""],["add_taxa_from_eol_collection","Guide","classes/Guide.html#method-i-add_taxa_from_eol_collection","( collection_url )",""],["add_taxa_from_names","Guide","classes/Guide.html#method-i-add_taxa_from_names","( names )",""],["add_taxa_from_observations","Trip","classes/Trip.html#method-i-add_taxa_from_observations","()",""],["add_taxa_from_observations","TripsController","classes/TripsController.html#method-i-add_taxa_from_observations","()",""],["add_taxa_from_source_url","Guide","classes/Guide.html#method-i-add_taxa_from_source_url","()",""],["add_taxon","CheckList","classes/CheckList.html#method-i-add_taxon","(taxon, options = {})",""],["add_taxon","List","classes/List.html#method-i-add_taxon","(taxon, options = {})","<p>Adds a taxon to this list and returns the listed_taxon (valid or not).  Note that subclasses like CheckList …\n"],["add_taxon_batch","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-add_taxon_batch","()",""],["add_to_intersecting_places","Taxon","classes/Taxon.html#method-i-add_to_intersecting_places","()",""],["adjust_initial_bounds","ApplicationHelper","classes/ApplicationHelper.html#method-i-adjust_initial_bounds","(map_tag_attrs, options = {})",""],["admin?","User","classes/User.html#method-i-admin-3F","()",""],["affiliation","SitesController","classes/SitesController.html#method-i-affiliation","()",""],["after_create","ObservationSweeper","classes/ObservationSweeper.html#method-i-after_create","(observation)",""],["after_destroy","CommentSweeper","classes/CommentSweeper.html#method-i-after_destroy","(item)",""],["after_destroy","ObservationSweeper","classes/ObservationSweeper.html#method-i-after_destroy","(observation)",""],["after_destroy","PlaceSweeper","classes/PlaceSweeper.html#method-i-after_destroy","(place)",""],["after_destroy","TaxonNameSweeper","classes/TaxonNameSweeper.html#method-i-after_destroy","(taxon_name)",""],["after_destroy","TaxonSweeper","classes/TaxonSweeper.html#method-i-after_destroy","(taxon)",""],["after_merge","PlaceSweeper","classes/PlaceSweeper.html#method-i-after_merge","(place)",""],["after_save","CommentSweeper","classes/CommentSweeper.html#method-i-after_save","(item)",""],["after_save","TaxonNameSweeper","classes/TaxonNameSweeper.html#method-i-after_save","(taxon_name)",""],["after_update","ObservationSweeper","classes/ObservationSweeper.html#method-i-after_update","(observation)",""],["after_update","PhotoSweeper","classes/PhotoSweeper.html#method-i-after_update","(photo)",""],["after_update","PlaceSweeper","classes/PlaceSweeper.html#method-i-after_update","(place)",""],["after_update","TaxonSweeper","classes/TaxonSweeper.html#method-i-after_update","(taxon)",""],["after_update","UserSweeper","classes/UserSweeper.html#method-i-after_update","( user )",""],["aggregate_observations","Project","classes/Project.html#method-i-aggregate_observations","(options = {})",""],["aggregate_observations_for","Project","classes/Project.html#method-c-aggregate_observations_for","(project_id)",""],["aggregation_allowed?","Project","classes/Project.html#method-i-aggregation_allowed-3F","()",""],["aggregation_preference_allowed?","Project","classes/Project.html#method-i-aggregation_preference_allowed-3F","()",""],["agree","IdentificationsController","classes/IdentificationsController.html#method-i-agree","()","<p>Agree with an identification\n"],["album","FacebookController","classes/FacebookController.html#method-i-album","()","<p>Return an HTML fragment containing photos in the album with the given fb native album id (i.e., params …\n"],["album","Picasa","classes/Picasa.html#method-i-album","(album_id_or_url, options = {})","<p>Retrieve a RubyPicasa::Album record. If you pass an id or a feed url it will include all photos. If you …\n"],["album","PicasaController","classes/PicasaController.html#method-i-album","()","<p>Return an HTML fragment containing photos in the album with the given fb native album id (i.e., params …\n"],["album_by_title","Picasa","classes/Picasa.html#method-i-album_by_title","(title, options = {})","<p>Retrieves the user&#39;s albums and finds the first one with a matching title. Returns a RubyPicasa::Album …\n"],["albums","GooglePhotosApi","classes/GooglePhotosApi.html#method-i-albums","()",""],["albums","RubyPicasa::User","classes/RubyPicasa/User.html#method-i-albums","()","<p>The current page of albums associated to the user.\n"],["all_names","Taxon","classes/Taxon.html#method-i-all_names","()",""],["all_rights_reserved?","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-all_rights_reserved-3F","()",""],["allow_some_licenses","User","classes/User.html#method-i-allow_some_licenses","()",""],["allowed?","OldPreferences","classes/OldPreferences.html#method-i-allowed-3F","(preference, val)",""],["allowed_values_has_pipes","ObservationField","classes/ObservationField.html#method-i-allowed_values_has_pipes","()",""],["alter_atlas_presence","AtlasesController","classes/AtlasesController.html#method-i-alter_atlas_presence","()","<p>Custom actions ############################################################\n"],["analyze_id_destinations","TaxonSplit","classes/TaxonSplit.html#method-c-analyze_id_destinations","( taxon_change )",""],["analyze_ids","TaxonChangesController","classes/TaxonChangesController.html#method-i-analyze_ids","()",""],["ancestor_of?","Taxon","classes/Taxon.html#method-i-ancestor_of-3F","( taxon )",""],["ancestor_place_ids","Place","classes/Place.html#method-i-ancestor_place_ids","()",""],["ancestry","ListedTaxon","classes/ListedTaxon.html#method-i-ancestry","()",""],["ancestry_and_active_if_taxon_framework","Taxon","classes/Taxon.html#method-i-ancestry_and_active_if_taxon_framework","()",""],["annotation_attribute_and_value","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-annotation_attribute_and_value","()",""],["api_endpoint","EolService","classes/EolService.html#method-i-api_endpoint","()",""],["api_endpoint","MetaService","classes/MetaService.html#method-i-api_endpoint","()",""],["api_key","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-api_key","()",""],["api_key_present","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-api_key_present","()",""],["api_token","User","classes/User.html#method-i-api_token","()",""],["api_token","UsersController","classes/UsersController.html#method-i-api_token","()",""],["app_owner_application","Emailer","classes/Emailer.html#method-i-app_owner_application","( user, application )",""],["app_owner_application","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-app_owner_application","()",""],["append_bounds_to_map_tag_attrs","ApplicationHelper","classes/ApplicationHelper.html#method-i-append_bounds_to_map_tag_attrs","(map_tag_attrs, instance_with_bounds)",""],["append_geom","Place","classes/Place.html#method-i-append_geom","(geom, other_attrs = {})","<p>Appends a geom instead of replacing it\n"],["append_observation_layers","ApplicationHelper","classes/ApplicationHelper.html#method-i-append_observation_layers","(map_tag_attrs, options = {})",""],["append_place_layers","ApplicationHelper","classes/ApplicationHelper.html#method-i-append_place_layers","(map_tag_attrs, options = {})",""],["append_subscribers","UpdateAction","classes/UpdateAction.html#method-i-append_subscribers","( user_ids )",""],["append_taxon_layers","ApplicationHelper","classes/ApplicationHelper.html#method-i-append_taxon_layers","(map_tag_attrs, options = {})",""],["applicable_to_taxon","ControlledTerm","classes/ControlledTerm.html#method-i-applicable_to_taxon","( candidate_taxon )",""],["applicationToken","JsonWebToken","classes/JsonWebToken.html#method-c-applicationToken","(expiration = 5.minutes.from_now)",""],["application_id_to_index","Observation","classes/Observation.html#method-i-application_id_to_index","()",""],["apply_orphan_strategy","Taxon","classes/Taxon.html#method-i-apply_orphan_strategy","()",""],["apply_orphan_strategy","Taxon","classes/Taxon.html#method-c-apply_orphan_strategy","( child_ancestry_was )",""],["apply_pagination_options","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-apply_pagination_options","(params, options={})",""],["appropriate?","Observation","classes/Observation.html#method-i-appropriate-3F","()",""],["approved_create_params","RelationshipsController","classes/RelationshipsController.html#method-i-approved_create_params","()",""],["approved_params","FriendshipsController","classes/FriendshipsController.html#method-i-approved_params","()",""],["approved_params","ModeratorActionsController","classes/ModeratorActionsController.html#method-i-approved_params","()",""],["approved_params","RelationshipsController","classes/RelationshipsController.html#method-i-approved_params","()",""],["archives","PostsController","classes/PostsController.html#method-i-archives","()",""],["arel_attributes_to_es_filters","UpdateAction","classes/UpdateAction.html#method-c-arel_attributes_to_es_filters","( attrs )",""],["as_csv","Observation","classes/Observation.html#method-c-as_csv","(scope, methods, options = {})",""],["as_indexed_json","Annotation","classes/Annotation.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","Color","classes/Color.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","Comment","classes/Comment.html#method-i-as_indexed_json","()",""],["as_indexed_json","ConservationStatus","classes/ConservationStatus.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ControlledTerm","classes/ControlledTerm.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","Flag","classes/Flag.html#method-i-as_indexed_json","()",""],["as_indexed_json","Identification","classes/Identification.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ListedTaxon","classes/ListedTaxon.html#method-i-as_indexed_json","()",""],["as_indexed_json","ModeratorAction","classes/ModeratorAction.html#method-i-as_indexed_json","()",""],["as_indexed_json","Observation","classes/Observation.html#method-i-as_indexed_json","(options={})","<p>Obs as a JSON document for indexing in Elastic Search. If you&#39;re going to modify this, make sure …\n"],["as_indexed_json","ObservationField","classes/ObservationField.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ObservationLink","classes/ObservationLink.html#method-i-as_indexed_json","()",""],["as_indexed_json","Photo","classes/Photo.html#method-i-as_indexed_json","( options={ } )",""],["as_indexed_json","Place","classes/Place.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","PlaceTaxonName","classes/PlaceTaxonName.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","Project","classes/Project.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ProjectObservation","classes/ProjectObservation.html#method-i-as_indexed_json","()",""],["as_indexed_json","ProjectObservationField","classes/ProjectObservationField.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","ProjectUser","classes/ProjectUser.html#method-i-as_indexed_json","()",""],["as_indexed_json","QualityMetric","classes/QualityMetric.html#method-i-as_indexed_json","()",""],["as_indexed_json","SiteFeaturedProject","classes/SiteFeaturedProject.html#method-i-as_indexed_json","()",""],["as_indexed_json","Sound","classes/Sound.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","Taxon","classes/Taxon.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","TaxonName","classes/TaxonName.html#method-i-as_indexed_json","( options = {} )",""],["as_indexed_json","TaxonPhoto","classes/TaxonPhoto.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","UpdateAction","classes/UpdateAction.html#method-i-as_indexed_json","(options={})",""],["as_indexed_json","User","classes/User.html#method-i-as_indexed_json","(options={})",""],["as_json","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-as_json","()",""],["as_json","TaxonName","classes/TaxonName.html#method-i-as_json","( options = {} )",""],["assertion","ProviderOauthController","classes/ProviderOauthController.html#method-i-assertion","()","<p>OAuth2 assertion flow: tools.ietf.org/html/draft-ietf-oauth-assertions-01#section-6.3 Accepts Facebook …\n"],["asset_path","FakeView","classes/FakeView.html#method-i-asset_path","( source, options = {} )","<p>Overriding this so that assets we have chosen not to be used with a digest don&#39;t actually use a digest …\n"],["assign_auth_info","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-assign_auth_info","(auth_info)",""],["associated_place_ids","Project","classes/Project.html#method-i-associated_place_ids","()",""],["atlased?","Taxon","classes/Taxon.html#method-i-atlased-3F","()","<p>rubocop:enable Naming/PredicateName\n"],["attribute_belongs_to_taxon","Annotation","classes/Annotation.html#method-i-attribute_belongs_to_taxon","()",""],["attribute_is_an_attribute","Annotation","classes/Annotation.html#method-i-attribute_is_an_attribute","()",""],["attribution","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-i-attribution","()",""],["attribution","GuideRange","classes/GuideRange.html#method-i-attribution","()",""],["attribution","GuideSection","classes/GuideSection.html#method-i-attribution","()",""],["attribution","List","classes/List.html#method-i-attribution","()",""],["attribution","LocalPhoto","classes/LocalPhoto.html#method-i-attribution","()",""],["attribution","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-attribution","()","<p>Return a string with attribution info about this photo\n"],["attribution_name","GuideRange","classes/GuideRange.html#method-i-attribution_name","()",""],["attribution_name","GuideSection","classes/GuideSection.html#method-i-attribution_name","()",""],["attribution_name","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-attribution_name","()",""],["auth_callback_test","ProviderAuthorizationsController","classes/ProviderAuthorizationsController.html#method-i-auth_callback_test","()","<p>change the /auth/:provider/callback route to point to this if you want to examine the rack data returned …\n"],["auth_url_for","Ambidextrous","classes/Ambidextrous.html#method-i-auth_url_for","(provider, options = {})",""],["authenticate","User","classes/User.html#method-c-authenticate","(login, password)","<p>stackoverflow.com/questions/6724494\n"],["authenticate!","Devise::Strategies::ApplicationJsonWebToken","classes/Devise/Strategies/ApplicationJsonWebToken.html#method-i-authenticate-21","()",""],["authenticate!","Devise::Strategies::JsonWebToken","classes/Devise/Strategies/JsonWebToken.html#method-i-authenticate-21","()",""],["authorize_as","AuthenticatedTestHelper","classes/AuthenticatedTestHelper.html#method-i-authorize_as","(user)",""],["authorized?","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-authorized-3F","(action = action_name, resource = nil)","<p>Check if the user is authorized\n<p>Override this method in your controllers if you want to restrict access …\n"],["auto_removable_from_check_list?","ListedTaxon","classes/ListedTaxon.html#method-i-auto_removable_from_check_list-3F","()",""],["auto_subscribes","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-auto_subscribes","(subscriber, options = {})","<p>Subscribe an associated user to an associated object when this record is created. For example, you might …\n"],["auto_summary","Taxon","classes/Taxon.html#method-i-auto_summary","()",""],["autocomplete","PlacesController","classes/PlacesController.html#method-i-autocomplete","()",""],["autocomplete","TaxaController","classes/TaxaController.html#method-i-autocomplete","()",""],["automatable?","TaxonChange","classes/TaxonChange.html#method-i-automatable-3F","()",""],["automatable?","TaxonSplit","classes/TaxonSplit.html#method-i-automatable-3F","()",""],["automatable_for_output?","TaxonChange","classes/TaxonChange.html#method-i-automatable_for_output-3F","( output_taxon )",""],["base_scope","DarwinCore::VernacularName","classes/DarwinCore/VernacularName.html#method-c-base_scope","()",""],["basename","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-basename","()",""],["basename_for_site","SiteDataExporter","classes/SiteDataExporter.html#method-c-basename_for_site","( site )",""],["basisOfRecord","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-basisOfRecord","()",""],["batch_edit","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-batch_edit","()",""],["bbox_contains_lat_lng?","Place","classes/Place.html#method-i-bbox_contains_lat_lng-3F","(lat, lng)",""],["bbox_contains_lat_lng_acc?","Place","classes/Place.html#method-i-bbox_contains_lat_lng_acc-3F","(lat, lng, acc = nil)",""],["bbox_privately_contains_observation?","Place","classes/Place.html#method-i-bbox_privately_contains_observation-3F","( o )",""],["bbox_publicly_contains_observation?","Place","classes/Place.html#method-i-bbox_publicly_contains_observation-3F","( o )",""],["be_a","ClassMatchers","classes/ClassMatchers.html#method-i-be_a","(expected)",""],["be_an","ClassMatchers","classes/ClassMatchers.html#method-i-be_an","(expected)",""],["before_create","Password","classes/Password.html#method-i-before_create","()",""],["before_edit","UsersController","classes/UsersController.html#method-i-before_edit","()",""],["behave_like_a","ClassMatchers","classes/ClassMatchers.html#method-i-behave_like_a","(expected)",""],["behave_like_an","ClassMatchers","classes/ClassMatchers.html#method-i-behave_like_an","(expected)",""],["benchmark","Benchmarker","classes/Benchmarker.html#method-i-benchmark","( name, options = {} )",""],["benchmark","Benchmarker","classes/Benchmarker.html#method-c-benchmark","()",""],["benchmark","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-benchmark","( key )",""],["best_available_url","Photo","classes/Photo.html#method-i-best_available_url","()","<p>to be used primarly for turn_remote_photo_into_local_photo\n"],["best_url","Photo","classes/Photo.html#method-i-best_url","(size = \"medium\")",""],["bioblitz?","Project","classes/Project.html#method-i-bioblitz-3F","()",""],["block","UsersController","classes/UsersController.html#method-i-block","()",""],["blocked_by?","User","classes/User.html#method-i-blocked_by-3F","( user )",""],["blocks_spam","ActionController::Base","classes/ActionController/Base.html#method-c-blocks_spam","(options={})",""],["bold","IdentificationsController","classes/IdentificationsController.html#method-i-bold","()",""],["bootstrapTargetID","ApplicationHelper","classes/ApplicationHelper.html#method-i-bootstrapTargetID","()",""],["bounding_box","Place","classes/Place.html#method-i-bounding_box","()",""],["bounding_box_geojson","Place","classes/Place.html#method-i-bounding_box_geojson","()","<p>Note that swlng etc accommodate bounding boxes that cross the dateline, while using ST_Envelope( geom …\n"],["bounds","Place","classes/Place.html#method-i-bounds","()",""],["bounds","Site","classes/Site.html#method-i-bounds","()",""],["bounds","TaxonRange","classes/TaxonRange.html#method-i-bounds","()",""],["bounds?","Site","classes/Site.html#method-i-bounds-3F","()",""],["branding_statement","ApplicationHelper","classes/ApplicationHelper.html#method-i-branding_statement","()",""],["browse","PostsController","classes/PostsController.html#method-i-browse","()",""],["browse","ProjectsController","classes/ProjectsController.html#method-i-browse","()",""],["browse","TaxaController","classes/TaxaController.html#method-i-browse","()",""],["browse_photos","TaxaController","classes/TaxaController.html#method-i-browse_photos","()",""],["bubble_up_establishment_means","ListedTaxon","classes/ListedTaxon.html#method-i-bubble_up_establishment_means","()",""],["bud_off_child_taxon_framework","TaxonFramework","classes/TaxonFramework.html#method-c-bud_off_child_taxon_framework","( taxon_id )","<p>attempting this through the UI will destroy relevant taxon_framework_relationships here&#39;s a way to …\n"],["build_observation_fields_from_tags","Observation","classes/Observation.html#method-i-build_observation_fields_from_tags","(tags)",""],["build_taxon_rule","List","classes/List.html#method-i-build_taxon_rule","(taxon)",""],["bulk_insert_subscribers","UpdateAction","classes/UpdateAction.html#method-i-bulk_insert_subscribers","(subscriber_ids)",""],["bulk_observation_error","Emailer","classes/Emailer.html#method-i-bulk_observation_error","( user, filename, error_details )","<p>Send the user an email saying the bulk observation import encountered an error.\n"],["bulk_observation_success","Emailer","classes/Emailer.html#method-i-bulk_observation_success","( user, filename )","<p>Send the user an email saying the bulk observation import was successful.\n"],["bulk_template","ProjectsController","classes/ProjectsController.html#method-i-bulk_template","()",""],["by_login","IdentificationsController","classes/IdentificationsController.html#method-i-by_login","()",""],["by_login","LifelistsController","classes/LifelistsController.html#method-i-by_login","()",""],["by_login","ListsController","classes/ListsController.html#method-i-by_login","()","<p>gets lists by user login\n"],["by_login","ObservationsController","classes/ObservationsController.html#method-i-by_login","()","<p>gets observations by user login\n"],["by_login","ProjectsController","classes/ProjectsController.html#method-i-by_login","()",""],["by_login","TripsController","classes/TripsController.html#method-i-by_login","()","<p>api :GET, &#39;/trips/:login&#39;, &#39;Retrieve recently created trips by a particular user&#39; description …\n"],["by_login","VotesController","classes/VotesController.html#method-i-by_login","()",""],["by_login_all","ObservationsController","classes/ObservationsController.html#method-i-by_login_all","()",""],["by_taxon","TaxonLink","classes/TaxonLink.html#method-c-by_taxon","( taxon, options = {} )",""],["cache","ApplicationController","classes/ApplicationController.html#method-i-cache","(time = 1.hour)","<p>Caching common place to put caching related code for simplier tuning\n"],["cache_columns","ListedTaxon","classes/ListedTaxon.html#method-i-cache_columns","()","<p>Retrieve the first and last observations and the month counts. Note that at present first_observation …\n"],["cache_columns_options","CheckList","classes/CheckList.html#method-i-cache_columns_options","(lt)","<p>For CheckLists, returns first_observation_id which represents the first one added to the site (e.g. not …\n"],["cached?","ApiEndpointCache","classes/ApiEndpointCache.html#method-i-cached-3F","()",""],["cached_ancestor","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-cached_ancestor","(rank)",""],["cached_atlas_presence_places","Taxon","classes/Taxon.html#method-i-cached_atlas_presence_places","()",""],["cached_guide","PlacesController","classes/PlacesController.html#method-i-cached_guide","()","<p>page cached version of guide\n"],["cached_slug","Project","classes/Project.html#method-i-cached_slug","()",""],["calculate_bbox_area","Place","classes/Place.html#method-i-calculate_bbox_area","()","<p>Calculate and cache the bbox area for place area size queries\n"],["calculate_mappable","Observation","classes/Observation.html#method-i-calculate_mappable","()",""],["calculate_public_positional_accuracy","Observation","classes/Observation.html#method-i-calculate_public_positional_accuracy","()",""],["calendar","ProjectsController","classes/ProjectsController.html#method-i-calendar","()",""],["call","CustomLogFormatter","classes/CustomLogFormatter.html#method-i-call","(severity, time, program_name, message)",""],["can_be_converted_to_collection_project?","Project","classes/Project.html#method-i-can_be_converted_to_collection_project-3F","()",""],["can_be_grafted_to","Taxon","classes/Taxon.html#method-i-can_be_grafted_to","()",""],["can_only_be_featured_if_photos","Taxon","classes/Taxon.html#method-i-can_only_be_featured_if_photos","()",""],["can_set_as_primary?","ListedTaxon","classes/ListedTaxon.html#method-i-can_set_as_primary-3F","()",""],["canada_150","StatsController","classes/StatsController.html#method-i-canada_150","()",""],["cannot_edit_parent_during_content_freeze","Taxon","classes/Taxon.html#method-i-cannot_edit_parent_during_content_freeze","()","<p>Callbacks ###############################################################\n"],["cannot_subscribe_to_north_america","Subscription","classes/Subscription.html#method-i-cannot_subscribe_to_north_america","()",""],["cannot_suspend_staff","ModeratorAction","classes/ModeratorAction.html#method-i-cannot_suspend_staff","()",""],["cant_block_staff","UserBlock","classes/UserBlock.html#method-i-cant_block_staff","()",""],["cant_block_yourself","UserBlock","classes/UserBlock.html#method-i-cant_block_yourself","()",""],["cant_mute_yourself","UserMute","classes/UserMute.html#method-i-cant_mute_yourself","()",""],["capitalize_name","TaxaHelper","classes/TaxaHelper.html#method-i-capitalize_name","( comname )",""],["capitalize_name","Taxon","classes/Taxon.html#method-i-capitalize_name","()",""],["capitalize_piece","TaxaHelper","classes/TaxaHelper.html#method-i-capitalize_piece","( piece )",""],["capitalize_scientific_name","Taxon","classes/Taxon.html#method-c-capitalize_scientific_name","( name, rank )",""],["capitalize_scientific_name","TaxonName","classes/TaxonName.html#method-i-capitalize_scientific_name","()",""],["captive","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-captive","()",""],["captive?","ProjectObservation","classes/ProjectObservation.html#method-i-captive-3F","()",""],["captive_cultivated","Observation","classes/Observation.html#method-i-captive_cultivated","()",""],["captive_cultivated?","Observation","classes/Observation.html#method-i-captive_cultivated-3F","()",""],["captive_flag","Observation","classes/Observation.html#method-i-captive_flag","()",""],["captive_flag=","Observation","classes/Observation.html#method-i-captive_flag-3D","(v)",""],["casual?","Observation","classes/Observation.html#method-i-casual-3F","()",""],["catalogNumber","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-catalogNumber","()",""],["catalogNumber","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-catalogNumber","()",""],["catch_and_release","ApplicationHelper","classes/ApplicationHelper.html#method-i-catch_and_release","(&block)",""],["change_admin","ProjectsController","classes/ProjectsController.html#method-i-change_admin","()",""],["change_photo_bucket_if_needed","LocalPhoto","classes/LocalPhoto.html#method-c-change_photo_bucket_if_needed","( p )",""],["change_photo_bucket_if_needed","LocalPhoto","classes/LocalPhoto.html#method-i-change_photo_bucket_if_needed","()",""],["change_role","ProjectsController","classes/ProjectsController.html#method-i-change_role","()",""],["char_wrap","ApplicationHelper","classes/ApplicationHelper.html#method-i-char_wrap","(text, len)",""],["check","UserPrivilege","classes/UserPrivilege.html#method-c-check","( user, privilege )",""],["check_accepted_actions","ModeratorAction","classes/ModeratorAction.html#method-i-check_accepted_actions","()",""],["check_default_check_list","Place","classes/Place.html#method-i-check_default_check_list","()","<p>Create a CheckList associated with this place\n"],["check_for_completion!","Goal","classes/Goal.html#method-i-check_for_completion-21","(goal_participant=nil)","<p>Most goals will be individual goals, however some, like our initial goal of 5,000 observations can be …\n"],["check_if_covered","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-check_if_covered","(taxon)",""],["check_list_editability","ListedTaxon","classes/ListedTaxon.html#method-i-check_list_editability","()",""],["check_other_taxon_framework_relationships","TaxonFramework","classes/TaxonFramework.html#method-i-check_other_taxon_framework_relationships","()",""],["check_primary_listing","ListedTaxon","classes/ListedTaxon.html#method-i-check_primary_listing","()",""],["check_radio_field","BootstrapFormBuilder","classes/BootstrapFormBuilder.html#method-i-check_radio_field","( field, field_content = nil, options = {}, wrapper_options = {}, description = nil )","<p>rubocop:disable Metrics/ParameterLists\n"],["check_recent_probable_spammers","User","classes/User.html#method-c-check_recent_probable_spammers","( limit = 100 )","<p>Iterates over recently created accounts of unknown spammer status, zero obs or ids, and a description …\n"],["check_resolved","Flag","classes/Flag.html#method-i-check_resolved","()",""],["check_role","ProjectUser","classes/ProjectUser.html#method-i-check_role","()",""],["check_spam","ActionController::Base","classes/ActionController/Base.html#method-c-check_spam","( options = {} )","<p>Set instance variables on an instance that acts_as_spammable will use when checking with akismet. It …\n"],["check_suspended_by_user","User","classes/User.html#method-i-check_suspended_by_user","()",""],["check_taxon_curators","TaxonFramework","classes/TaxonFramework.html#method-i-check_taxon_curators","()",""],["check_taxon_framework_relationships","TaxonFramework","classes/TaxonFramework.html#method-i-check_taxon_framework_relationships","()",""],["check_user_last_active","ApplicationController","classes/ApplicationController.html#method-i-check_user_last_active","()",""],["child_without_permission?","User","classes/User.html#method-i-child_without_permission-3F","()",""],["children","PlacesController","classes/PlacesController.html#method-i-children","()",""],["children","TaxaController","classes/TaxaController.html#method-i-children","()","<p>List child taxa of this taxon\n"],["choose_cbank_id","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-i-choose_cbank_id","(cbank_response)","<p>Chooses a uBio ClassificationBank object ID from an Hpricot return from classificationbank_search.   …\n"],["choose_common_name","TaxonName","classes/TaxonName.html#method-c-choose_common_name","( taxon_names, options = {} )",""],["choose_default_name","TaxonName","classes/TaxonName.html#method-c-choose_default_name","( taxon_names, options = {} )",""],["choose_scientific_name","TaxonName","classes/TaxonName.html#method-c-choose_scientific_name","( taxon_names )",""],["citation_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-citation_for","(record)",""],["citation_object","ListedTaxon","classes/ListedTaxon.html#method-i-citation_object","()",""],["cite","ApplicationHelper","classes/ApplicationHelper.html#method-i-cite","(citation = nil, options = {}, &block)",""],["clash_analysis","Taxon","classes/Taxon.html#method-i-clash_analysis","( new_parent_id )",""],["clashes","TaxaController","classes/TaxaController.html#method-i-clashes","()","<p>Custom actions ############################################################\n"],["clean_geometry","Place","classes/Place.html#method-i-clean_geometry","()",""],["clean_html","TaxonDescribers::Wikipedia","classes/TaxonDescribers/Wikipedia.html#method-i-clean_html","(html, options = {})",""],["clear_caches","Subscription","classes/Subscription.html#method-i-clear_caches","()",""],["clear_operand","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-clear_operand","()",""],["clear_warnings_for_url","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-clear_warnings_for_url","( url )",""],["client_for_user","SoundcloudSound","classes/SoundcloudSound.html#method-c-client_for_user","(user)",""],["cloudfront_invalidate","INatAWS","classes/INatAWS.html#method-c-cloudfront_invalidate","(path)",""],["cnc2016","StatsController","classes/StatsController.html#method-i-cnc2016","()",""],["cnc2017","StatsController","classes/StatsController.html#method-i-cnc2017","()",""],["cnc2017_stats","StatsController","classes/StatsController.html#method-i-cnc2017_stats","()",""],["collate_errors","BulkObservationFile","classes/BulkObservationFile.html#method-i-collate_errors","( exception )",""],["collectionCode","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-collectionCode","()",""],["collection_project_changed_for_trusting_member","Emailer","classes/Emailer.html#method-i-collection_project_changed_for_trusting_member","( project_user )",""],["collection_projects","Observation","classes/Observation.html#method-i-collection_projects","( api_params = {} )",""],["collection_search_parameters","Project","classes/Project.html#method-i-collection_search_parameters","(options = {})","<p>TODO: probably merge most of this logic with observations_url_params\n"],["colors_for_taxa","ApplicationHelper","classes/ApplicationHelper.html#method-i-colors_for_taxa","(taxa)",""],["commas_and","ApplicationHelper","classes/ApplicationHelper.html#method-i-commas_and","(list, options = {})",""],["commit","TaxonChange","classes/TaxonChange.html#method-i-commit","()","<p>Override in subclasses\n"],["commit","TaxonChangesController","classes/TaxonChangesController.html#method-i-commit","()",""],["commit","TaxonMerge","classes/TaxonMerge.html#method-i-commit","()",""],["commit","TaxonSwap","classes/TaxonSwap.html#method-i-commit","()",""],["commit_for_user","TaxonChangesController","classes/TaxonChangesController.html#method-i-commit_for_user","()",""],["commit_records","TaxonChange","classes/TaxonChange.html#method-i-commit_records","( options = {} )","<p>For all records with a taxon association affected by this change, update the record if  possible / desired …\n"],["commit_records","TaxonChangesController","classes/TaxonChangesController.html#method-i-commit_records","()",""],["commit_records","TaxonStage","classes/TaxonStage.html#method-i-commit_records","( options = {} )",""],["commit_records_job","TaxonChange","classes/TaxonChange.html#method-i-commit_records_job","()",""],["commit_records_later","TaxonChange","classes/TaxonChange.html#method-i-commit_records_later","()",""],["committable_by?","TaxonChange","classes/TaxonChange.html#method-i-committable_by-3F","( u )",""],["committed?","TaxonChange","classes/TaxonChange.html#method-i-committed-3F","()",""],["common_name","Observation","classes/Observation.html#method-i-common_name","(options = {})",""],["common_name","Taxon","classes/Taxon.html#method-i-common_name","( options = {} )","<p>Return just one common name.  Defaults to the first English common name, then first name of unspecified …\n"],["common_name_string","Taxon","classes/Taxon.html#method-i-common_name_string","()",""],["common_taxon_name","TaxaHelper","classes/TaxaHelper.html#method-i-common_taxon_name","(taxon, options = {})",""],["community_supported_id?","Observation","classes/Observation.html#method-i-community_supported_id-3F","()",""],["community_taxon_at_family_or_lower?","Observation","classes/Observation.html#method-i-community_taxon_at_family_or_lower-3F","()",""],["community_taxon_at_species_or_lower?","Observation","classes/Observation.html#method-i-community_taxon_at_species_or_lower-3F","()",""],["community_taxon_below_family?","Observation","classes/Observation.html#method-i-community_taxon_below_family-3F","()",""],["community_taxon_nodes","Observation","classes/Observation.html#method-i-community_taxon_nodes","( options = {} )",""],["community_taxon_rejected?","Observation","classes/Observation.html#method-i-community_taxon_rejected-3F","()",""],["community_taxon_summary","ObservationsController","classes/ObservationsController.html#method-i-community_taxon_summary","()",""],["comname_taxon","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-comname_taxon","()","<p>Return a UBioTaxonAdapter for this name if this is a common name\n"],["compact","ApplicationHelper","classes/ApplicationHelper.html#method-i-compact","(*args, &block)","<p>remove unecessary whitespace btwn divs\n"],["compact_date","ApplicationHelper","classes/ApplicationHelper.html#method-i-compact_date","( date, options = {} )",""],["compact_locales","Announcement","classes/Announcement.html#method-i-compact_locales","()",""],["compare","ListsController","classes/ListsController.html#method-i-compare","()","<p>Compare two lists. Defaults to comparing the list in the URL with the viewer&#39;s list.\n"],["compare","ObservationsController","classes/ObservationsController.html#method-i-compare","()",""],["complete_species_count","Taxon","classes/Taxon.html#method-i-complete_species_count","()",""],["component_cache_key","Observation","classes/Observation.html#method-i-component_cache_key","(options = {})",""],["component_cache_key","Observation","classes/Observation.html#method-c-component_cache_key","(id, options = {})",""],["components_of_class","UpdateAction","classes/UpdateAction.html#method-c-components_of_class","(klass, updates)",""],["components_with_assoc","UpdateAction","classes/UpdateAction.html#method-c-components_with_assoc","(assoc, updates)",""],["config","INatAWS","classes/INatAWS.html#method-c-config","()",""],["confirm","UserParentsController","classes/UserParentsController.html#method-i-confirm","()",""],["confirm_leave","ProjectsController","classes/ProjectsController.html#method-i-confirm_leave","()",""],["conservation_status_code","Taxon","classes/Taxon.html#method-i-conservation_status_code","()",""],["conservation_status_name","Taxon","classes/Taxon.html#method-i-conservation_status_name","()","<p>TODO: make this work for different conservation status sources\n"],["contact","Site","classes/Site.html#method-i-contact","()","<p>contact element for a DarwinCore Archive (DwC-A). This is supposed to be the person data consumers can …\n"],["contains_lat_lng?","Place","classes/Place.html#method-i-contains_lat_lng-3F","(lat, lng)",""],["content_flagged_as_spam","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-content_flagged_as_spam","()",""],["contributor","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-contributor","()",""],["contributors","ProjectsController","classes/ProjectsController.html#method-i-contributors","()",""],["controlled_attribute_label","Annotation","classes/Annotation.html#method-i-controlled_attribute_label","()",""],["controlled_value_label","Annotation","classes/Annotation.html#method-i-controlled_value_label","()",""],["controller","FakeView","classes/FakeView.html#method-i-controller","()",""],["convert_cloudfront_log","CloudfrontLogParser","classes/CloudfrontLogParser.html#method-i-convert_cloudfront_log","( unzipped_path, converted_path )",""],["convert_cloudfront_logs_to_logstash_format","CloudfrontLogParser","classes/CloudfrontLogParser.html#method-i-convert_cloudfront_logs_to_logstash_format","()",""],["convert_collection_project_to_traditional_project","Project","classes/Project.html#method-i-convert_collection_project_to_traditional_project","()",""],["convert_properties_for_collection_project","Project","classes/Project.html#method-i-convert_properties_for_collection_project","()",""],["convert_to_collection","ProjectsController","classes/ProjectsController.html#method-i-convert_to_collection","()",""],["convert_to_collection_project","Project","classes/Project.html#method-i-convert_to_collection_project","()",""],["convert_to_traditional","ProjectsController","classes/ProjectsController.html#method-i-convert_to_traditional","()",""],["coordinateUncertaintyInMeters","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-coordinateUncertaintyInMeters","()",""],["coordinate_system_select_options","ObservationsHelper","classes/ObservationsHelper.html#method-i-coordinate_system_select_options","(options = {})",""],["coordinate_systems","Site","classes/Site.html#method-i-coordinate_systems","()",""],["coordinates_changed?","Observation","classes/Observation.html#method-i-coordinates_changed-3F","()",""],["coordinates_obscured","Observation","classes/Observation.html#method-i-coordinates_obscured","()",""],["coordinates_obscured?","Observation","classes/Observation.html#method-i-coordinates_obscured-3F","()",""],["coordinates_private?","Observation","classes/Observation.html#method-i-coordinates_private-3F","()",""],["coordinates_shareable_by_project_curators?","ProjectObservation","classes/ProjectObservation.html#method-i-coordinates_shareable_by_project_curators-3F","()",""],["coordinates_viewable_by?","Observation","classes/Observation.html#method-i-coordinates_viewable_by-3F","( viewer )",""],["coords","RubyPicasa::Photo::Point","classes/RubyPicasa/Photo/Point.html#method-i-coords","()",""],["copyrighted?","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-copyrighted-3F","()",""],["core_id","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-core_id","()",""],["core_id","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-core_id","()",""],["could_be_public","LocalPhoto","classes/LocalPhoto.html#method-i-could_be_public","()",""],["count","MessagesController","classes/MessagesController.html#method-i-count","()",""],["count_flags_with_flag","Gonzo::Acts::Flaggable::InstanceMethods","classes/Gonzo/Acts/Flaggable/InstanceMethods.html#method-i-count_flags_with_flag","(flag)","<p>Count the number of flags tha have this specific flag set\n"],["count_taxa_in_rank","Taxon","classes/Taxon.html#method-c-count_taxa_in_rank","( rank )","<p>Count the number of taxa in the given rank.\n<p>I don&#39;t like hard-coding it like this, so if you know …\n"],["countryCode","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-countryCode","()",""],["countryCode","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-countryCode","()",""],["counts_for_users","UsersController","classes/UsersController.html#method-i-counts_for_users","()",""],["cover_dimensions","Project","classes/Project.html#method-i-cover_dimensions","()",""],["covers?","TaxonFramework","classes/TaxonFramework.html#method-i-covers-3F","()",""],["create","AnnotationsController","classes/AnnotationsController.html#method-i-create","()",""],["create","AnnouncementsController","classes/AnnouncementsController.html#method-i-create","()",""],["create","AssessmentsController","classes/AssessmentsController.html#method-i-create","()",""],["create","AtlasesController","classes/AtlasesController.html#method-i-create","()",""],["create","CheckListsController","classes/CheckListsController.html#method-i-create","()",""],["create","CommentsController","classes/CommentsController.html#method-i-create","()",""],["create","CompleteSetsController","classes/CompleteSetsController.html#method-i-create","()",""],["create","ComputerVisionDemoUploadsController","classes/ComputerVisionDemoUploadsController.html#method-i-create","()",""],["create","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-create","()",""],["create","ControlledTermLabelsController","classes/ControlledTermLabelsController.html#method-i-create","()",""],["create","ControlledTermValuesController","classes/ControlledTermValuesController.html#method-i-create","()",""],["create","ControlledTermsController","classes/ControlledTermsController.html#method-i-create","()",""],["create","CuratorApplicationsController","classes/CuratorApplicationsController.html#method-i-create","()",""],["create","CustomProjectsController","classes/CustomProjectsController.html#method-i-create","()","<p>POST /custom_projects POST /custom_projects.xml\n"],["create","DataPartnersController","classes/DataPartnersController.html#method-i-create","()",""],["create","ExplodedAtlasPlacesController","classes/ExplodedAtlasPlacesController.html#method-i-create","()",""],["create","FlagsController","classes/FlagsController.html#method-i-create","()",""],["create","FlowTasksController","classes/FlowTasksController.html#method-i-create","()",""],["create","GuidePhotosController","classes/GuidePhotosController.html#method-i-create","()","<p>POST /guide_photos POST /guide_photos.json\n"],["create","GuideRangesController","classes/GuideRangesController.html#method-i-create","()","<p>POST /guide_ranges POST /guide_ranges.json\n"],["create","GuideSectionsController","classes/GuideSectionsController.html#method-i-create","()","<p>POST /guide_sections POST /guide_sections.json\n"],["create","GuideTaxaController","classes/GuideTaxaController.html#method-i-create","()","<p>POST /guide_taxa POST /guide_taxa.json\n"],["create","GuidesController","classes/GuidesController.html#method-i-create","()","<p>POST /guides POST /guides.json\n"],["create","IdentificationsController","classes/IdentificationsController.html#method-i-create","()","<p>POST identification_url\n"],["create","ListedTaxaController","classes/ListedTaxaController.html#method-i-create","()",""],["create","MessagesController","classes/MessagesController.html#method-i-create","()",""],["create","ModeratorActionsController","classes/ModeratorActionsController.html#method-i-create","()",""],["create","ModeratorNotesController","classes/ModeratorNotesController.html#method-i-create","()",""],["create","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-create","()",""],["create","OauthTokensController","classes/OauthTokensController.html#method-i-create","()",""],["create","ObservationFieldValuesController","classes/ObservationFieldValuesController.html#method-i-create","()",""],["create","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-create","()","<p>POST /observation_fields POST /observation_fields.xml\n"],["create","ObservationPhotosController","classes/ObservationPhotosController.html#method-i-create","()",""],["create","ObservationSoundsController","classes/ObservationSoundsController.html#method-i-create","()",""],["create","ObservationsController","classes/ObservationsController.html#method-i-create","()","<p>POST /observations POST /observations.xml\n"],["create","PhotosController","classes/PhotosController.html#method-i-create","()",""],["create","PlacesController","classes/PlacesController.html#method-i-create","()",""],["create","PostsController","classes/PostsController.html#method-i-create","()",""],["create","ProjectAssetsController","classes/ProjectAssetsController.html#method-i-create","()","<p>POST /project_assets POST /project_assets.xml\n"],["create","ProjectObservationsController","classes/ProjectObservationsController.html#method-i-create","()",""],["create","ProjectUserInvitationsController","classes/ProjectUserInvitationsController.html#method-i-create","()",""],["create","ProjectsController","classes/ProjectsController.html#method-i-create","()",""],["create","ProviderAuthorizationsController","classes/ProviderAuthorizationsController.html#method-i-create","()",""],["create","RelationshipsController","classes/RelationshipsController.html#method-i-create","()",""],["create","SavedLocationsController","classes/SavedLocationsController.html#method-i-create","()",""],["create","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-create","()",""],["create","SiteAdminsController","classes/SiteAdminsController.html#method-i-create","()","<p>POST /site_admins POST /site_admins.json\n"],["create","SitesController","classes/SitesController.html#method-i-create","()","<p>POST /sites POST /sites.json\n"],["create","SoundsController","classes/SoundsController.html#method-i-create","()",""],["create","SourcesController","classes/SourcesController.html#method-i-create","()",""],["create","SubscriptionsController","classes/SubscriptionsController.html#method-i-create","()",""],["create","TaxaController","classes/TaxaController.html#method-i-create","()",""],["create","TaxonChangeTaxaController","classes/TaxonChangeTaxaController.html#method-i-create","()",""],["create","TaxonChangesController","classes/TaxonChangesController.html#method-i-create","()",""],["create","TaxonCuratorsController","classes/TaxonCuratorsController.html#method-i-create","()",""],["create","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-create","()",""],["create","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-create","()",""],["create","TaxonLinksController","classes/TaxonLinksController.html#method-i-create","()",""],["create","TaxonNamesController","classes/TaxonNamesController.html#method-i-create","()",""],["create","TaxonPhotosController","classes/TaxonPhotosController.html#method-i-create","()",""],["create","TaxonRangesController","classes/TaxonRangesController.html#method-i-create","()",""],["create","TaxonSchemeTaxaController","classes/TaxonSchemeTaxaController.html#method-i-create","()",""],["create","TripsController","classes/TripsController.html#method-i-create","()","<p>api :POST, &#39;/trips&#39;, “Create a new trip” param :trip, Hash, :required =&gt; true, :desc …\n"],["create","UserBlocksController","classes/UserBlocksController.html#method-i-create","()",""],["create","UserMutesController","classes/UserMutesController.html#method-i-create","()",""],["create","UserParentsController","classes/UserParentsController.html#method-i-create","()",""],["create","Users::RegistrationsController","classes/Users/RegistrationsController.html#method-i-create","()",""],["create","Users::SessionsController","classes/Users/SessionsController.html#method-i-create","()",""],["create_annotation","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-create_annotation","()",""],["create_app_owner_application","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-create_app_owner_application","()",""],["create_callback","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-create_callback","(subscribable_association, options = {})",""],["create_community_goal_participants","Goal","classes/Goal.html#method-i-create_community_goal_participants","()","<p>Watch out for this! This might run very slowly when there are a bazzillion inaturaslits, but it should …\n"],["create_country_records_from_lexicons","PlaceTaxonName","classes/PlaceTaxonName.html#method-c-create_country_records_from_lexicons","(options = {})","<p>Create PlaceTaxonNames for matching countries. This helps people who cannot choose a locale that matches …\n"],["create_deleted_observation","Observation","classes/Observation.html#method-i-create_deleted_observation","()",""],["create_deleted_sound","Sound","classes/Sound.html#method-i-create_deleted_sound","()",""],["create_deleted_user","User","classes/User.html#method-i-create_deleted_user","()",""],["create_from_omniauth","User","classes/User.html#method-c-create_from_omniauth","(auth_info)","<p>create a user using 3rd party provider credentials (via omniauth) note that this bypasses validation …\n"],["create_geom_from_kml_attachment","TaxonRange","classes/TaxonRange.html#method-i-create_geom_from_kml_attachment","()",""],["create_guide_user","Guide","classes/Guide.html#method-i-create_guide_user","()",""],["create_kml_attachment","TaxonRange","classes/TaxonRange.html#method-i-create_kml_attachment","()",""],["create_matching_taxon_name","Taxon","classes/Taxon.html#method-i-create_matching_taxon_name","()","<p>Create a taxon name with the same name as this taxon\n"],["create_observation_review","Identification","classes/Identification.html#method-i-create_observation_review","()",""],["create_observation_review","Observation","classes/Observation.html#method-i-create_observation_review","()",""],["create_photo_identity","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-create_photo_identity","()","<p>Try to create a photo identity if the auth provider has/is a photo  service\n"],["create_project_rule","ProjectObservationField","classes/ProjectObservationField.html#method-i-create_project_rule","()",""],["create_sound_identity","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-create_sound_identity","()",""],["create_subscription_after_update","Friendship","classes/Friendship.html#method-i-create_subscription_after_update","()",""],["create_the_project_list","Project","classes/Project.html#method-i-create_the_project_list","()",""],["create_update_for_user","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-create_update_for_user","()",""],["created","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-created","()",""],["created","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-created","()",""],["created","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-created","()",""],["created","DarwinCore::User::InstanceMethods","classes/DarwinCore/User/InstanceMethods.html#method-i-created","()",""],["created","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-created","()",""],["creative_commons?","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-creative_commons-3F","()",""],["creator","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-creator","()",""],["creator","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-creator","()",""],["css?","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-i-css-3F","()",""],["csv_archive","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-csv_archive","()",""],["curated_by?","Assessment","classes/Assessment.html#method-i-curated_by-3F","(user)",""],["curated_by?","Project","classes/Project.html#method-i-curated_by-3F","(user)",""],["curated_taxon_framework?","Taxon","classes/Taxon.html#method-i-curated_taxon_framework-3F","( taxon_framework )",""],["curation","ObservationsController","classes/ObservationsController.html#method-i-curation","()","<p>Custom actions ############################################################\n"],["curation","TaxaController","classes/TaxaController.html#method-i-curation","()",""],["curation","UsersController","classes/UsersController.html#method-i-curation","()",""],["curator_application","Emailer","classes/Emailer.html#method-i-curator_application","( user, application )",""],["curator_of?","ApplicationHelper","classes/ApplicationHelper.html#method-i-curator_of-3F","(project)",""],["curator_required","ApplicationController","classes/ApplicationController.html#method-i-curator_required","()","<p>Filter method to require a curator for certain actions.\n"],["curators","Project","classes/Project.html#method-i-curators","()",""],["current_preferences","ApplicationController","classes/ApplicationController.html#method-i-current_preferences","(update_params = nil)","<p>Get current_user&#39;s preferences, prefs in the session, or stash new prefs in the session\n"],["current_synonymous_taxa","Taxon","classes/Taxon.html#method-i-current_synonymous_taxa","( options = {} )",""],["current_synonymous_taxa_from_split","Taxon","classes/Taxon.html#method-i-current_synonymous_taxa_from_split","( options = {} )",""],["current_synonymous_taxon","Taxon","classes/Taxon.html#method-i-current_synonymous_taxon","( options = {} )",""],["current_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-current_url","(new_params)",""],["current_user","ApplicationController","classes/ApplicationController.html#method-i-current_user","()","<p>Override Devise implementation so we can set this for oauth2 / doorkeeper requests\n"],["current_user","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-current_user","()","<p>Accesses the current user from the session. Future calls avoid the database because nil is not equal …\n"],["current_user=","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-current_user-3D","(new_user)","<p>Store the given user id in the session.\n"],["current_user_curates_taxon?","Taxon","classes/Taxon.html#method-i-current_user_curates_taxon-3F","( user, taxon_framework )",""],["custom_email","Emailer","classes/Emailer.html#method-i-custom_email","( user, subject, body )",""],["custom_errors","Place","classes/Place.html#method-i-custom_errors","()",""],["dashboard","UsersController","classes/UsersController.html#method-i-dashboard","()",""],["dashboard_updates","UsersController","classes/UsersController.html#method-i-dashboard_updates","()",""],["data","DarwinCore::VernacularName","classes/DarwinCore/VernacularName.html#method-c-data","( options = {} )",""],["dataType","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-dataType","()",""],["data_for_name","TaxonDescribers::AmphibiaWeb","classes/TaxonDescribers/AmphibiaWeb.html#method-i-data_for_name","(name)",""],["data_objects","EolService","classes/EolService.html#method-i-data_objects","(*args)","<p>This is a temporary workaround until EOL fixes their data objects API.  See github.com/EOL/tramea/issues/137 …\n"],["data_objects_from_page","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-i-data_objects_from_page","(page, options = {})",""],["datasetName","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-datasetName","()",""],["dateIdentified","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-dateIdentified","()",""],["date_details","ElasticModel","classes/ElasticModel.html#method-c-date_details","(datetime)","<p>used when indexing dates to enable queries like: `show me all observations from April of any year`\n"],["date_observed_must_be_before_date_created","Observation","classes/Observation.html#method-i-date_observed_must_be_before_date_created","()",""],["datetime","Observation","classes/Observation.html#method-i-datetime","()","<p>Return a time from observed_on and time_observed_at\n"],["decimalLatitude","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-decimalLatitude","()",""],["decimalLongitude","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-decimalLongitude","()",""],["decode","JsonWebToken","classes/JsonWebToken.html#method-c-decode","(token)",""],["decodeApplication","JsonWebToken","classes/JsonWebToken.html#method-c-decodeApplication","( token )",""],["dedupe_for_user","Observation","classes/Observation.html#method-c-dedupe_for_user","(user, options = {})",""],["default","Site","classes/Site.html#method-c-default","( options = {} )",""],["default_guide_photo","GuideTaxon","classes/GuideTaxon.html#method-i-default_guide_photo","()",""],["default_json_options","ObservationField","classes/ObservationField.html#method-c-default_json_options","()",""],["default_json_options","Photo","classes/Photo.html#method-c-default_json_options","()",""],["default_json_options","Project","classes/Project.html#method-c-default_json_options","()",""],["default_json_options","ProjectObservationField","classes/ProjectObservationField.html#method-c-default_json_options","()",""],["default_json_options","Taxon","classes/Taxon.html#method-c-default_json_options","()",""],["default_json_options","User","classes/User.html#method-c-default_json_options","()",""],["default_name","Taxon","classes/Taxon.html#method-i-default_name","( options = {} )",""],["default_observation_precision","Place","classes/Place.html#method-i-default_observation_precision","()",""],["default_photo","Taxon","classes/Taxon.html#method-i-default_photo","()",""],["default_taxon_name","TaxaHelper","classes/TaxaHelper.html#method-i-default_taxon_name","(taxon, options = {})","<p>Return a default name string for this taxon, English common if available.\n"],["default_url_options","FakeView","classes/FakeView.html#method-i-default_url_options","()",""],["deletable_by?","Comment","classes/Comment.html#method-i-deletable_by-3F","( deleting_user )",""],["deletable_by?","Flag","classes/Flag.html#method-i-deletable_by-3F","( user )",""],["deletable_by?","TaxonLink","classes/TaxonLink.html#method-i-deletable_by-3F","( user )",""],["delete","UsersController","classes/UsersController.html#method-i-delete","()",""],["delete_and_purge","UpdateAction","classes/UpdateAction.html#method-c-delete_and_purge","(*args)",""],["delete_batch","ObservationsController","classes/ObservationsController.html#method-i-delete_batch","()",""],["delete_observations_places","Observation","classes/Observation.html#method-i-delete_observations_places","()",""],["delete_project_observations_on_leave_project","Project","classes/Project.html#method-c-delete_project_observations_on_leave_project","(project_id, user_id)",""],["delete_subscriptions","HasSubscribers::InstanceMethods","classes/HasSubscribers/InstanceMethods.html#method-i-delete_subscriptions","()",""],["delete_update_actions","HasSubscribers::InstanceMethods","classes/HasSubscribers/InstanceMethods.html#method-i-delete_update_actions","()",""],["deleteable_by?","Taxon","classes/Taxon.html#method-i-deleteable_by-3F","( user )",""],["deleted_users","AdminController","classes/AdminController.html#method-i-deleted_users","()",""],["deliver_confirmation_email_if_donor_verified","UserParent","classes/UserParent.html#method-i-deliver_confirmation_email_if_donor_verified","()",""],["deliver_email","Message","classes/Message.html#method-i-deliver_email","()",""],["denormalize","PlaceDenormalizer","classes/PlaceDenormalizer.html#method-c-denormalize","()",""],["derive_missing_values","TaxonRange","classes/TaxonRange.html#method-i-derive_missing_values","()",""],["derivedFrom","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-derivedFrom","()",""],["desc","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-desc","(taxon)","<p>Not sure how to test a method named “describe” in rspec\n"],["descendant_conditions","Place","classes/Place.html#method-i-descendant_conditions","()",""],["descendant_conditions","Taxon","classes/Taxon.html#method-i-descendant_conditions","()",""],["descendant_of?","Taxon","classes/Taxon.html#method-i-descendant_of-3F","( taxon )",""],["descendants_count","Taxon","classes/Taxon.html#method-i-descendants_count","()",""],["describe","TaxaController","classes/TaxaController.html#method-i-describe","()",""],["describe","TaxonDescribers","classes/TaxonDescribers.html#method-c-describe","(taxon, options = {})",""],["describe","TaxonDescribers::AmphibiaWeb","classes/TaxonDescribers/AmphibiaWeb.html#method-i-describe","(taxon)",""],["describe","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-describe","(taxon)",""],["describe","TaxonDescribers::Conabio","classes/TaxonDescribers/Conabio.html#method-c-describe","(taxon)",""],["describe","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-i-describe","(taxon)",""],["describe","TaxonDescribers::Inaturalist","classes/TaxonDescribers/Inaturalist.html#method-i-describe","( taxon )",""],["describe","TaxonDescribers::Wikipedia","classes/TaxonDescribers/Wikipedia.html#method-i-describe","( taxon )",""],["describer_name","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-describer_name","()",""],["describer_name","TaxonDescribers::Conabio","classes/TaxonDescribers/Conabio.html#method-c-describer_name","()",""],["describer_name","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-c-describer_name","()",""],["describer_name","TaxonDescribers::Inaturalist","classes/TaxonDescribers/Inaturalist.html#method-i-describer_name","()",""],["describer_name","TaxonDescribers::WikipediaEs","classes/TaxonDescribers/WikipediaEs.html#method-c-describer_name","()",""],["describer_name","TaxonDescribers::WikipediaFr","classes/TaxonDescribers/WikipediaFr.html#method-c-describer_name","()",""],["description","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-description","()",""],["descriptor","DarwinCore::VernacularName","classes/DarwinCore/VernacularName.html#method-c-descriptor","()",""],["destroy","AnnotationsController","classes/AnnotationsController.html#method-i-destroy","()",""],["destroy","AnnouncementsController","classes/AnnouncementsController.html#method-i-destroy","()",""],["destroy","AssessmentsController","classes/AssessmentsController.html#method-i-destroy","()",""],["destroy","AtlasesController","classes/AtlasesController.html#method-i-destroy","()",""],["destroy","CommentsController","classes/CommentsController.html#method-i-destroy","()",""],["destroy","CompleteSetsController","classes/CompleteSetsController.html#method-i-destroy","()",""],["destroy","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-destroy","()",""],["destroy","ControlledTermLabelsController","classes/ControlledTermLabelsController.html#method-i-destroy","()",""],["destroy","ControlledTermValuesController","classes/ControlledTermValuesController.html#method-i-destroy","()",""],["destroy","ControlledTermsController","classes/ControlledTermsController.html#method-i-destroy","()",""],["destroy","CustomProjectsController","classes/CustomProjectsController.html#method-i-destroy","()","<p>DELETE /custom_projects/1 DELETE /custom_projects/1.xml\n"],["destroy","DataPartnersController","classes/DataPartnersController.html#method-i-destroy","()",""],["destroy","ExplodedAtlasPlacesController","classes/ExplodedAtlasPlacesController.html#method-i-destroy","()",""],["destroy","FlagsController","classes/FlagsController.html#method-i-destroy","()",""],["destroy","FlowTasksController","classes/FlowTasksController.html#method-i-destroy","()",""],["destroy","FriendshipsController","classes/FriendshipsController.html#method-i-destroy","()",""],["destroy","GuidePhotosController","classes/GuidePhotosController.html#method-i-destroy","()","<p>DELETE /guide_photos/1 DELETE /guide_photos/1.json\n"],["destroy","GuideRangesController","classes/GuideRangesController.html#method-i-destroy","()","<p>DELETE /guide_ranges/1 DELETE /guide_ranges/1.json\n"],["destroy","GuideSectionsController","classes/GuideSectionsController.html#method-i-destroy","()","<p>DELETE /guide_sections/1 DELETE /guide_sections/1.json\n"],["destroy","GuideTaxaController","classes/GuideTaxaController.html#method-i-destroy","()","<p>DELETE /guide_taxa/1 DELETE /guide_taxa/1.json\n"],["destroy","GuidesController","classes/GuidesController.html#method-i-destroy","()","<p>DELETE /guides/1 DELETE /guides/1.json\n"],["destroy","IdentificationsController","classes/IdentificationsController.html#method-i-destroy","()","<p>DELETE identification_url\n"],["destroy","ListedTaxaController","classes/ListedTaxaController.html#method-i-destroy","()",""],["destroy","MessagesController","classes/MessagesController.html#method-i-destroy","()",""],["destroy","ModeratorNotesController","classes/ModeratorNotesController.html#method-i-destroy","()",""],["destroy","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-destroy","()",""],["destroy","OauthAuthorizedApplicationsController","classes/OauthAuthorizedApplicationsController.html#method-i-destroy","()",""],["destroy","ObservationFieldValuesController","classes/ObservationFieldValuesController.html#method-i-destroy","()",""],["destroy","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-destroy","()","<p>DELETE /observation_fields/1 DELETE /observation_fields/1.xml\n"],["destroy","ObservationPhotosController","classes/ObservationPhotosController.html#method-i-destroy","()",""],["destroy","ObservationSoundsController","classes/ObservationSoundsController.html#method-i-destroy","()",""],["destroy","ObservationsController","classes/ObservationsController.html#method-i-destroy","()","<p>DELETE /observations/1 DELETE /observations/1.xml\n"],["destroy","PhotosController","classes/PhotosController.html#method-i-destroy","()",""],["destroy","PlacesController","classes/PlacesController.html#method-i-destroy","()",""],["destroy","PostsController","classes/PostsController.html#method-i-destroy","()",""],["destroy","ProjectAssetsController","classes/ProjectAssetsController.html#method-i-destroy","()","<p>DELETE /project_assets/1 DELETE /project_assets/1.xml\n"],["destroy","ProjectObservationsController","classes/ProjectObservationsController.html#method-i-destroy","()",""],["destroy","ProjectUserInvitationsController","classes/ProjectUserInvitationsController.html#method-i-destroy","()",""],["destroy","ProjectsController","classes/ProjectsController.html#method-i-destroy","()","<p>DELETE /projects/1 DELETE /projects/1.xml\n"],["destroy","ProviderAuthorizationsController","classes/ProviderAuthorizationsController.html#method-i-destroy","()",""],["destroy","SavedLocationsController","classes/SavedLocationsController.html#method-i-destroy","()",""],["destroy","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-destroy","()",""],["destroy","SiteAdminsController","classes/SiteAdminsController.html#method-i-destroy","()","<p>DELETE /site_admins/1 DELETE /site_admins/1.json\n"],["destroy","SitesController","classes/SitesController.html#method-i-destroy","()","<p>DELETE /sites/1 DELETE /sites/1.json\n"],["destroy","SourcesController","classes/SourcesController.html#method-i-destroy","()",""],["destroy","SubscriptionsController","classes/SubscriptionsController.html#method-i-destroy","()",""],["destroy","TaxaController","classes/TaxaController.html#method-i-destroy","()",""],["destroy","TaxonChangeTaxaController","classes/TaxonChangeTaxaController.html#method-i-destroy","()",""],["destroy","TaxonChangesController","classes/TaxonChangesController.html#method-i-destroy","()",""],["destroy","TaxonCuratorsController","classes/TaxonCuratorsController.html#method-i-destroy","()",""],["destroy","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-destroy","()",""],["destroy","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-destroy","()",""],["destroy","TaxonLinksController","classes/TaxonLinksController.html#method-i-destroy","()",""],["destroy","TaxonNamesController","classes/TaxonNamesController.html#method-i-destroy","()",""],["destroy","TaxonRangesController","classes/TaxonRangesController.html#method-i-destroy","()",""],["destroy","TaxonSchemeTaxaController","classes/TaxonSchemeTaxaController.html#method-i-destroy","()",""],["destroy","TripsController","classes/TripsController.html#method-i-destroy","()","<p>api :DELETE, “/trips/:id”, “Delete an existing trip” param :id, :number, :required …\n"],["destroy","UserBlocksController","classes/UserBlocksController.html#method-i-destroy","()",""],["destroy","UserMutesController","classes/UserMutesController.html#method-i-destroy","()",""],["destroy","UserParentsController","classes/UserParentsController.html#method-i-destroy","()",""],["destroy","Users::SessionsController","classes/Users/SessionsController.html#method-i-destroy","()",""],["destroy","UsersController","classes/UsersController.html#method-i-destroy","()",""],["destroy","VotesController","classes/VotesController.html#method-i-destroy","()",""],["destroy_all_alterations","AtlasesController","classes/AtlasesController.html#method-i-destroy_all_alterations","()",""],["destroy_annotation","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-destroy_annotation","()",""],["destroy_friendships","UserBlock","classes/UserBlock.html#method-i-destroy_friendships","()",""],["destroy_messages_by_suspended_user","User","classes/User.html#method-i-destroy_messages_by_suspended_user","()",""],["destroy_orphan_photo","GuidePhoto","classes/GuidePhoto.html#method-i-destroy_orphan_photo","()",""],["destroy_orphan_photo","ObservationPhoto","classes/ObservationPhoto.html#method-i-destroy_orphan_photo","()",""],["destroy_orphan_photo","TaxonPhoto","classes/TaxonPhoto.html#method-i-destroy_orphan_photo","()",""],["destroy_orphans","Photo","classes/Photo.html#method-c-destroy_orphans","(ids)","<p>Destroy a photo if it no longer belongs to any observations or taxa\n"],["destroy_orphans","Sound","classes/Sound.html#method-c-destroy_orphans","( ids )",""],["destroy_photo_identity","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-destroy_photo_identity","()",""],["destroy_project_rule","ProjectObservationField","classes/ProjectObservationField.html#method-i-destroy_project_rule","()",""],["destroy_project_rules","Place","classes/Place.html#method-i-destroy_project_rules","()",""],["destroy_project_rules","Project","classes/Project.html#method-i-destroy_project_rules","()",""],["destroy_project_rules","User","classes/User.html#method-i-destroy_project_rules","()",""],["destroy_range?","TaxonRange","classes/TaxonRange.html#method-i-destroy_range-3F","()",""],["destroy_relevant_listings","CompleteSetsController","classes/CompleteSetsController.html#method-i-destroy_relevant_listings","()",""],["destroy_sound_identity","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-destroy_sound_identity","()",""],["destroy_synonyms","TaxonNamesController","classes/TaxonNamesController.html#method-i-destroy_synonyms","()",""],["destroy_updates","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-destroy_updates","()",""],["destroy_user_content","AdminController","classes/AdminController.html#method-i-destroy_user_content","()",""],["detect","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-i-detect","()",""],["detect_clashes","Taxon","classes/Taxon.html#method-i-detect_clashes","( narrowed_parents, child_ids )",""],["device_name","Observation","classes/Observation.html#method-i-device_name","()",""],["device_url","Observation","classes/Observation.html#method-i-device_url","()",""],["devise_mail","DeviseMailer","classes/DeviseMailer.html#method-i-devise_mail","( record, action, opts={ } )",""],["dismiss","AnnouncementsController","classes/AnnouncementsController.html#method-i-dismiss","()",""],["dismissed_by?","Announcement","classes/Announcement.html#method-i-dismissed_by-3F","( user )",""],["display_donor_since","User","classes/User.html#method-i-display_donor_since","()",""],["display_list_title","ListedTaxaHelper","classes/ListedTaxaHelper.html#method-i-display_list_title","( list, trunc = 85 )",""],["display_name","Assessment","classes/Assessment.html#method-i-display_name","()",""],["display_name","Place","classes/Place.html#method-i-display_name","(options = {})","<p>Wrap the attr call to set it if unset (or if :reload =&gt; true)\n"],["display_title","AssessmentSection","classes/AssessmentSection.html#method-i-display_title","()",""],["distinct_taxon","Observation","classes/Observation.html#method-i-distinct_taxon","()",""],["dom_id","DefaultFormBuilder","classes/DefaultFormBuilder.html#method-i-dom_id","( record, prefix = nil )",""],["donor?","User","classes/User.html#method-i-donor-3F","()",""],["donor?","UserParent","classes/UserParent.html#method-i-donor-3F","()",""],["donors","YearStatistic","classes/YearStatistic.html#method-c-donors","( year, options = {} )",""],["double_check_index","Place","classes/Place.html#method-i-double_check_index","()",""],["downcase_path","WikiPage","classes/WikiPage.html#method-i-downcase_path","()",""],["download","DataPartnerLinkers::GBIF","classes/DataPartnerLinkers/GBIF.html#method-i-download","()",""],["download","SoundcloudSound","classes/SoundcloudSound.html#method-i-download","()",""],["download_cloudfront_log","CloudfrontLogParser","classes/CloudfrontLogParser.html#method-i-download_cloudfront_log","( log_object )",""],["download_remote_icon","User","classes/User.html#method-i-download_remote_icon","()",""],["draft?","Post","classes/Post.html#method-i-draft-3F","()",""],["draft?","TaxonChange","classes/TaxonChange.html#method-i-draft-3F","()",""],["dump","CompressedYAMLColumn","classes/CompressedYAMLColumn.html#method-c-dump","( obj )",""],["duplicate","Project","classes/Project.html#method-i-duplicate","()",""],["dwc_creator","Site","classes/Site.html#method-i-dwc_creator","()","<p>creator element for use in a DarwinCore Archive (DwC-A) According to the schema, “The creator is …\n"],["dwc_filter_text","DarwinCore::Helpers","classes/DarwinCore/Helpers.html#method-i-dwc_filter_text","(s)",""],["dwc_license","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-dwc_license","()",""],["dwc_license","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-dwc_license","()",""],["dwc_source","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-dwc_source","()",""],["dwc_taxon","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-dwc_taxon","()",""],["dwc_type","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-dwc_type","()",""],["dwc_use_community_taxon","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-dwc_use_community_taxon","()",""],["dwca_frequency_allowed","DataPartner","classes/DataPartner.html#method-i-dwca_frequency_allowed","()",""],["each_taxon_batch_with_index","Denormalizer","classes/Denormalizer.html#method-c-each_taxon_batch_with_index","(batch_size)","<p>Called like:\n\n<pre><code>Denormalize::each_taxon_batch_with_index(10000) do |taxa, index, total_batches|\n  ...\nend\n</code></pre>\n"],["earliest_and_latest_ids","ListedTaxon","classes/ListedTaxon.html#method-c-earliest_and_latest_ids","(options)",""],["earned_coordinate_access?","UserPrivilege","classes/UserPrivilege.html#method-c-earned_coordinate_access-3F","( user )",""],["earned_organizer?","UserPrivilege","classes/UserPrivilege.html#method-c-earned_organizer-3F","( user )",""],["earned_speech?","UserPrivilege","classes/UserPrivilege.html#method-c-earned_speech-3F","( user )","<p>The earned_#{privilege}? methods are intended to calculate whether the user has <strong>currently</strong> earned a privilege. …\n"],["earns_privilege","Privileges::ClassMethods","classes/Privileges/ClassMethods.html#method-i-earns_privilege","( privilege, options = { on: [:create, :destroy] } )",""],["edit","AnnouncementsController","classes/AnnouncementsController.html#method-i-edit","()",""],["edit","AssessmentsController","classes/AssessmentsController.html#method-i-edit","()",""],["edit","AtlasesController","classes/AtlasesController.html#method-i-edit","()",""],["edit","CheckListsController","classes/CheckListsController.html#method-i-edit","()",""],["edit","CommentsController","classes/CommentsController.html#method-i-edit","()",""],["edit","CompleteSetsController","classes/CompleteSetsController.html#method-i-edit","()",""],["edit","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-edit","()",""],["edit","ControlledTermsController","classes/ControlledTermsController.html#method-i-edit","()",""],["edit","CustomProjectsController","classes/CustomProjectsController.html#method-i-edit","()","<p>GET /custom_projects/1/edit\n"],["edit","DataPartnersController","classes/DataPartnersController.html#method-i-edit","()",""],["edit","GuidePhotosController","classes/GuidePhotosController.html#method-i-edit","()","<p>GET /guide_photos/1/edit\n"],["edit","GuideRangesController","classes/GuideRangesController.html#method-i-edit","()","<p>GET /guide_ranges/1/edit\n"],["edit","GuideSectionsController","classes/GuideSectionsController.html#method-i-edit","()","<p>GET /guide_sections/1/edit\n"],["edit","GuideTaxaController","classes/GuideTaxaController.html#method-i-edit","()","<p>GET /guide_taxa/1/edit\n"],["edit","GuidesController","classes/GuidesController.html#method-i-edit","()","<p>GET /guides/1/edit\n"],["edit","IdentificationsController","classes/IdentificationsController.html#method-i-edit","()",""],["edit","ModeratorNotesController","classes/ModeratorNotesController.html#method-i-edit","()",""],["edit","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-edit","()",""],["edit","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-edit","()","<p>GET /observation_fields/1/edit\n"],["edit","ObservationsController","classes/ObservationsController.html#method-i-edit","()","<p>GET /observations/1/edit\n"],["edit","PlacesController","classes/PlacesController.html#method-i-edit","()",""],["edit","PostsController","classes/PostsController.html#method-i-edit","()",""],["edit","ProjectAssetsController","classes/ProjectAssetsController.html#method-i-edit","()","<p>GET /project_assets/1/edit\n"],["edit","ProjectsController","classes/ProjectsController.html#method-i-edit","()",""],["edit","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-edit","()","<p>GET /lists/1/edit\n"],["edit","SitesController","classes/SitesController.html#method-i-edit","()","<p>GET /sites/1/edit\n"],["edit","SourcesController","classes/SourcesController.html#method-i-edit","()",""],["edit","SubscriptionsController","classes/SubscriptionsController.html#method-i-edit","()",""],["edit","TaxaController","classes/TaxaController.html#method-i-edit","()",""],["edit","TaxonChangeTaxaController","classes/TaxonChangeTaxaController.html#method-i-edit","()",""],["edit","TaxonChangesController","classes/TaxonChangesController.html#method-i-edit","()",""],["edit","TaxonCuratorsController","classes/TaxonCuratorsController.html#method-i-edit","()",""],["edit","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-edit","()",""],["edit","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-edit","()",""],["edit","TaxonLinksController","classes/TaxonLinksController.html#method-i-edit","()",""],["edit","TaxonNamesController","classes/TaxonNamesController.html#method-i-edit","()",""],["edit","TaxonRangesController","classes/TaxonRangesController.html#method-i-edit","()",""],["edit","TaxonSchemeTaxaController","classes/TaxonSchemeTaxaController.html#method-i-edit","()",""],["edit","TripsController","classes/TripsController.html#method-i-edit","()",""],["edit","UsersController","classes/UsersController.html#method-i-edit","()",""],["edit_after_auth","UsersController","classes/UsersController.html#method-i-edit_after_auth","()","<p>this is the page that&#39;s shown after a new user is created via 3rd party provider_authorization allows …\n"],["edit_allowed?","WikiPagesController","classes/WikiPagesController.html#method-i-edit_allowed-3F","()",""],["edit_batch","ObservationsController","classes/ObservationsController.html#method-i-edit_batch","()","<p>Edit a batch of observations\n"],["edit_photos","ObservationsController","classes/ObservationsController.html#method-i-edit_photos","()",""],["edit_post_path","ApplicationHelper","classes/ApplicationHelper.html#method-i-edit_post_path","(post, options = {})",""],["editable?","GuideSection","classes/GuideSection.html#method-i-editable-3F","()",""],["editable_by?","CheckList","classes/CheckList.html#method-i-editable_by-3F","(user)",""],["editable_by?","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-i-editable_by-3F","(user)",""],["editable_by?","Guide","classes/Guide.html#method-i-editable_by-3F","( user )",""],["editable_by?","List","classes/List.html#method-i-editable_by-3F","(user)","<p>Determine whether this list can be edited or added to by a user. Default permission is for the owner …\n"],["editable_by?","ListedTaxon","classes/ListedTaxon.html#method-i-editable_by-3F","(target_user)",""],["editable_by?","ModeratorNote","classes/ModeratorNote.html#method-i-editable_by-3F","( editor )",""],["editable_by?","ObservationField","classes/ObservationField.html#method-i-editable_by-3F","(u)",""],["editable_by?","Photo","classes/Photo.html#method-i-editable_by-3F","(user)",""],["editable_by?","Place","classes/Place.html#method-i-editable_by-3F","(user)",""],["editable_by?","Post","classes/Post.html#method-i-editable_by-3F","( u )",""],["editable_by?","Project","classes/Project.html#method-i-editable_by-3F","(user)",""],["editable_by?","ProjectList","classes/ProjectList.html#method-i-editable_by-3F","(user)","<p>Curators and admins can alter the list.\n"],["editable_by?","Site","classes/Site.html#method-i-editable_by-3F","( user )",""],["editable_by?","Sound","classes/Sound.html#method-i-editable_by-3F","(user)",""],["editable_by?","Source","classes/Source.html#method-i-editable_by-3F","(u)",""],["editable_by?","Taxon","classes/Taxon.html#method-i-editable_by-3F","( user )",""],["editable_by?","TaxonChange","classes/TaxonChange.html#method-i-editable_by-3F","(u)",""],["elastic_delete!","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-i-elastic_delete-21","()",""],["elastic_delete_by_ids!","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_delete_by_ids-21","( ids, options = { } )",""],["elastic_index!","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_index-21","(options = { })","<p>standard way to bulk index instances. Called without options it will page through all instances 1000 …\n"],["elastic_index!","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-i-elastic_index-21","()",""],["elastic_paginate","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_paginate","(options={})",""],["elastic_prune","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_prune","(start_id, end_id, options)",""],["elastic_query","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_query","(params, options = {})",""],["elastic_search","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_search","(options = {})",""],["elastic_sync","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-elastic_sync","(start_id, end_id, options)",""],["elastic_taxon_leaf_counts","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_taxon_leaf_counts","(elastic_params = {})",""],["elastic_taxon_leaf_ids","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_taxon_leaf_ids","(elastic_params = {})",""],["elastic_user_observation_counts","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_user_observation_counts","(elastic_params, limit = 500)",""],["elastic_user_taxon_counts","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_user_taxon_counts","(elastic_params, options = {})",""],["elastic_user_taxon_counts_batch","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-elastic_user_taxon_counts_batch","(elastic_params, options = {})",""],["elasticsearch_is_running?","ElasticModel","classes/ElasticModel.html#method-c-elasticsearch_is_running-3F","()",""],["elasticsearch_url","ElasticModel","classes/ElasticModel.html#method-c-elasticsearch_url","()",""],["email=","User","classes/User.html#method-i-email-3D","(value)",""],["email_does_not_belong_to_another_user","UserParent","classes/UserParent.html#method-i-email_does_not_belong_to_another_user","()",""],["email_export","ObservationsController","classes/ObservationsController.html#method-i-email_export","()",""],["email_required?","User","classes/User.html#method-i-email_required-3F","()","<p>only validate_presence_of email if user hasn&#39;t auth&#39;d via a 3rd-party provider you can also force …\n"],["email_suppressed_in_group?","User","classes/User.html#method-i-email_suppressed_in_group-3F","( suppressed_groups )",""],["email_updates","UpdateAction","classes/UpdateAction.html#method-c-email_updates","()",""],["email_updates_to_user","UpdateAction","classes/UpdateAction.html#method-c-email_updates_to_user","(subscriber, start_time, end_time)",""],["email_user","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-email_user","()",""],["enable_replica","ApplicationController","classes/ApplicationController.html#method-i-enable_replica","()","<p>if Makara is configured with replica DBs, querying of replicas is currently disabled by default. Actions …\n"],["encode","JsonWebToken","classes/JsonWebToken.html#method-c-encode","(payload, expiration = 24.hours.from_now)",""],["end_of_month","YearStatistic","classes/YearStatistic.html#method-c-end_of_month","( date )",""],["end_time=","Project","classes/Project.html#method-i-end_time-3D","(value)",""],["ended?","Goal","classes/Goal.html#method-i-ended-3F","()","<p>checks to see if the goal has ended __NOT__ completed!\n"],["endemic?","ListedTaxon","classes/ListedTaxon.html#method-i-endemic-3F","()",""],["englishize_month_abbrevs_for_locale","Observation","classes/Observation.html#method-i-englishize_month_abbrevs_for_locale","(date_string, locale)",""],["enqueue_options","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-enqueue_options","()",""],["enqueue_photo_bucket_moving_jobs","User","classes/User.html#method-c-enqueue_photo_bucket_moving_jobs","( user )","<p>this method will look at all this users photos and create separate delayed jobs for each photo that should …\n"],["ensure_parent_ancestry_in_ancestry","Taxon","classes/Taxon.html#method-i-ensure_parent_ancestry_in_ancestry","()",""],["ensure_user_is_current_user_or_admin","UsersController","classes/UsersController.html#method-i-ensure_user_is_current_user_or_admin","()",""],["envelope_filter","ElasticModel","classes/ElasticModel.html#method-c-envelope_filter","(options={})",""],["eol","GuideEolUpdateFlowTask","classes/GuideEolUpdateFlowTask.html#method-i-eol","()",""],["eol_page_id","GuideTaxon","classes/GuideTaxon.html#method-i-eol_page_id","()",""],["eol_service","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-i-eol_service","()",""],["error_404","ErrorsController","classes/ErrorsController.html#method-i-error_404","()",""],["error_422","ErrorsController","classes/ErrorsController.html#method-i-error_422","()",""],["error_500","ErrorsController","classes/ErrorsController.html#method-i-error_500","()",""],["errors_for_hidden_fields","ApplicationHelper","classes/ApplicationHelper.html#method-i-errors_for_hidden_fields","( record, options = {} )",""],["est_max_obs_distances","YearStatistic","classes/YearStatistic.html#method-i-est_max_obs_distances","( year, options = {} )","<p>Stats on maximum distance in meters between obs created by all users for each month of the year. Instead …\n"],["establishment_blob","ApplicationHelper","classes/ApplicationHelper.html#method-i-establishment_blob","(listed_taxon, options = {})",""],["establishment_means_allowed","ListedTaxon","classes/ListedTaxon.html#method-i-establishment_means_allowed","()",""],["establishment_means_description","ListedTaxon","classes/ListedTaxon.html#method-i-establishment_means_description","()",""],["establishment_means_in_place?","Taxon","classes/Taxon.html#method-i-establishment_means_in_place-3F","( means, place, options = {} )",""],["establishment_means_label","ListedTaxon","classes/ListedTaxon.html#method-i-establishment_means_label","()",""],["eventDate","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-eventDate","()",""],["eventTime","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-eventTime","()",""],["event_ended?","Project","classes/Project.html#method-i-event_ended-3F","()",""],["event_in_progress?","Project","classes/Project.html#method-i-event_in_progress-3F","()",""],["event_started?","Project","classes/Project.html#method-i-event_started-3F","()",""],["eventbrite_id","Project","classes/Project.html#method-i-eventbrite_id","()",""],["existing_comprehensive_list","ListedTaxon","classes/ListedTaxon.html#method-i-existing_comprehensive_list","()",""],["existing_comprehensive_listed_taxon","ListedTaxon","classes/ListedTaxon.html#method-i-existing_comprehensive_listed_taxon","()",""],["expire_caches","Guide","classes/Guide.html#method-i-expire_caches","( options = {} )",""],["expire_caches","ListedTaxon","classes/ListedTaxon.html#method-i-expire_caches","()",""],["expire_caches","ProjectObservation","classes/ProjectObservation.html#method-i-expire_caches","()",""],["expire_caches","TaxonPhoto","classes/TaxonPhoto.html#method-i-expire_caches","()",""],["expire_caches_for","ListedTaxon","classes/ListedTaxon.html#method-c-expire_caches_for","(taxon)",""],["expire_listed_taxa","Shared::SweepersModule","classes/Shared/SweepersModule.html#method-i-expire_listed_taxa","(taxon)",""],["expire_listed_taxon","Shared::SweepersModule","classes/Shared/SweepersModule.html#method-i-expire_listed_taxon","(listed_taxon)",""],["expire_taxon","Shared::SweepersModule","classes/Shared/SweepersModule.html#method-i-expire_taxon","(taxon)",""],["export","FrequencyCell","classes/FrequencyCell.html#method-c-export","( path )",""],["export","ObservationsController","classes/ObservationsController.html#method-i-export","()",""],["export","SiteDataExporter","classes/SiteDataExporter.html#method-i-export","()",""],["export","SitesController","classes/SitesController.html#method-i-export","()",""],["export_columns","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-export_columns","()",""],["export_output","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-export_output","()",""],["export_path","Site","classes/Site.html#method-i-export_path","()","<p>Path where the site data export file <strong>should</strong> be. Actual generation happens via the export_site_data.rb …\n"],["export_taxa","FrequencyCell","classes/FrequencyCell.html#method-c-export_taxa","( path )",""],["extension_paths","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-extension_paths","()",""],["extract","ExifMetadata","classes/ExifMetadata.html#method-i-extract","()","<p>Extracts metadata from file and returns key/value pairs @return [Hash] metadata Hash of metadata extracted, …\n"],["extract_dimensions","LocalPhoto","classes/LocalPhoto.html#method-i-extract_dimensions","(style)",""],["extract_metadata","ComputerVisionDemoUpload","classes/ComputerVisionDemoUpload.html#method-i-extract_metadata","( path )",""],["extract_metadata","LocalPhoto","classes/LocalPhoto.html#method-i-extract_metadata","(path = nil)",""],["facebook_albums","FacebookController","classes/FacebookController.html#method-i-facebook_albums","(user, friend_id=nil)","<p>returns an array of album data hashes like [{ &#39;name&#39;=&gt;&#39;Safari Pics&#39;, &#39;cover_photo_src&#39;=&gt;( …\n"],["facebook_api","User","classes/User.html#method-i-facebook_api","()","<p>returns a koala object to make (authenticated) facebook api calls e.g. @facebook_api.get_object(&#39;me&#39;) …\n"],["facebook_friends","FacebookController","classes/FacebookController.html#method-i-facebook_friends","(user)",""],["facebook_groups","FacebookController","classes/FacebookController.html#method-i-facebook_groups","(user)",""],["facebook_identity","User","classes/User.html#method-i-facebook_identity","()","<p>returns nil or the facebook ProviderAuthorization\n"],["facebook_token","User","classes/User.html#method-i-facebook_token","()",""],["failed","Admin::DelayedJobsController","classes/Admin/DelayedJobsController.html#method-i-failed","()",""],["failure","ProviderAuthorizationsController","classes/ProviderAuthorizationsController.html#method-i-failure","()",""],["failure_message","ClassMatchers::BeA","classes/ClassMatchers/BeA.html#method-i-failure_message","()",""],["failure_message","ClassMatchers::BehaveLikeA","classes/ClassMatchers/BehaveLikeA.html#method-i-failure_message","()",""],["fake_environment_variables","Rakismet","classes/Rakismet.html#method-c-fake_environment_variables","()",""],["fake_instance","FakeView","classes/FakeView.html#method-c-fake_instance","()",""],["fake_view","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-fake_view","()",""],["family","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-family","()",""],["family","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-family","()",""],["faves_count","Observation","classes/Observation.html#method-i-faves_count","()",""],["favicon_url_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-favicon_url_for","(url)",""],["feature","ProjectsController","classes/ProjectsController.html#method-i-feature","()",""],["feature_test","ApplicationHelper","classes/ApplicationHelper.html#method-i-feature_test","(test, options = {}, &block)",""],["feed","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-feed","(options = {})","<p>Retrieves the data feed at the url of the current record.\n"],["fetch","FlickrCache","classes/FlickrCache.html#method-c-fetch","(flickraw, type, method, params={})",""],["fetch_from_fb_group","FacebookPhoto","classes/FacebookPhoto.html#method-c-fetch_from_fb_group","(fb_group_id, user, options={})","<p>Get all the photos posted to the feed of the specified facebook group\n"],["fetch_request_uri","MetaService","classes/MetaService.html#method-c-fetch_request_uri","(options = {})",""],["fetch_with_redirects","MetaService","classes/MetaService.html#method-c-fetch_with_redirects","(options, attempts = 3)",""],["fieldID","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-fieldID","()",""],["fieldName","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-fieldName","()",""],["field_value_example","ObservationsHelper","classes/ObservationsHelper.html#method-i-field_value_example","(datatype, allowed_values = nil, field_id = nil)",""],["fields","ObservationsController","classes/ObservationsController.html#method-i-fields","()",""],["fields_addable_by?","Observation","classes/Observation.html#method-i-fields_addable_by-3F","(u)",""],["file=","LocalPhoto","classes/LocalPhoto.html#method-i-file-3D","(data)","<p>I think this may be impossible using delayed_paperclip validates_attachment_presence :file validates_attachment_size …\n"],["file=","LocalSound","classes/LocalSound.html#method-i-file-3D","( data )",""],["file_names","DarwinCore::VernacularName","classes/DarwinCore/VernacularName.html#method-c-file_names","()",""],["find","Ratatosk","classes/Ratatosk.html#method-c-find","(name)","<p>Alias for Ratatosk::Ratatosk#find\n"],["find","Ratatosk::NameProviders::ColNameProvider","classes/Ratatosk/NameProviders/ColNameProvider.html#method-i-find","(name)",""],["find","Ratatosk::NameProviders::NZORNameProvider","classes/Ratatosk/NameProviders/NZORNameProvider.html#method-i-find","(name)",""],["find","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-i-find","(name)",""],["find","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-find","(q)","<p>Find a taxon using each of the name providers in sequence, returning the first successful response.\n"],["find_batched_records_of","TaxonChange","classes/TaxonChange.html#method-i-find_batched_records_of","( reflection )",""],["find_by_path","WikiPage","classes/WikiPage.html#method-c-find_by_path","(path)",""],["find_class_name","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-find_class_name","()",""],["find_duplicates","Taxon","classes/Taxon.html#method-c-find_duplicates","()",""],["find_existing_taxon","Ratatosk","classes/Ratatosk.html#method-c-find_existing_taxon","(taxon)","<p>Alias for Ratatosk::Ratatosk#find_existing_taxon\n"],["find_existing_taxon","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-find_existing_taxon","(taxon_adapter, name_provider = nil)",""],["find_external","TaxonName","classes/TaxonName.html#method-c-find_external","( query, options = {} )",""],["find_flaggable","Flag","classes/Flag.html#method-c-find_flaggable","(flaggable_str, flaggable_id)","<p>Helper class method to look up a flaggable object given the flaggable class name and id\n"],["find_flags_by_user","Flag","classes/Flag.html#method-c-find_flags_by_user","(user)","<p>Helper class method to lookup all flags assigned to all flaggable types for a given user.\n"],["find_flags_by_user","Gonzo::Acts::Flaggable::SingletonMethods","classes/Gonzo/Acts/Flaggable/SingletonMethods.html#method-i-find_flags_by_user","(user)","<p>Helper class method to lookup flags for the mixin flaggable type written by a given user.\n<p>This method …\n"],["find_flags_for","Gonzo::Acts::Flaggable::SingletonMethods","classes/Gonzo/Acts/Flaggable/SingletonMethods.html#method-i-find_flags_for","(obj)","<p>Helper method to lookup for flags for a given object. This method is equivalent to obj.flags.\n"],["find_flags_for_flaggable","Flag","classes/Flag.html#method-c-find_flags_for_flaggable","(flaggable_str, flaggable_id)","<p>Helper class method to look up all flags for flaggable class name and flaggable id.\n"],["find_for_authentication","User","classes/User.html#method-c-find_for_authentication","(conditions = {})",""],["find_from_omniauth","ProviderAuthorization","classes/ProviderAuthorization.html#method-c-find_from_omniauth","(auth_info)",""],["find_lexicons_by_translation","TaxonName","classes/TaxonName.html#method-c-find_lexicons_by_translation","( translation )",""],["find_listed_taxa_and_ancestry_as_hashes","CheckList","classes/CheckList.html#method-i-find_listed_taxa_and_ancestry_as_hashes","()",""],["find_listed_taxa_and_ancestry_on_other_lists_as_hashes","CheckList","classes/CheckList.html#method-i-find_listed_taxa_and_ancestry_on_other_lists_as_hashes","(list_ids)",""],["find_observations_of","Observation","classes/Observation.html#method-c-find_observations_of","(taxon)",""],["find_observed_and_total_for_project","Project","classes/Project.html#method-i-find_observed_and_total_for_project","()",""],["find_single","TaxonName","classes/TaxonName.html#method-c-find_single","( name, options = {} )",""],["find_taxon_framework_relationship","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-find_taxon_framework_relationship","()",""],["find_user","UsersController","classes/UsersController.html#method-i-find_user","()",""],["first_improving_identification","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-first_improving_identification","()","<p>As noted in github.com/gbif/occurrence/issues/89, identifiedBy and identifiedByID are primarily meant …\n"],["first_stat","SiteStatistic","classes/SiteStatistic.html#method-c-first_stat","()",""],["first_term_by_label","ControlledTerm","classes/ControlledTerm.html#method-c-first_term_by_label","(label)",""],["first_with_attributes","UpdateAction","classes/UpdateAction.html#method-c-first_with_attributes","(attrs, options = {})",""],["fix","PhotosController","classes/PhotosController.html#method-i-fix","()",""],["fix_annotation_after_update","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-fix_annotation_after_update","()",""],["flag_actions","FlagsHelper","classes/FlagsHelper.html#method-i-flag_actions","( flag )",""],["flag_content","FlagsHelper","classes/FlagsHelper.html#method-i-flag_content","( flag )",""],["flag_content_author","FlagsHelper","classes/FlagsHelper.html#method-i-flag_content_author","( flag )",""],["flag_flagger","FlagsHelper","classes/FlagsHelper.html#method-i-flag_flagger","( flag, site )",""],["flag_not_about_duplicate","Flag","classes/Flag.html#method-i-flag_not_about_duplicate","()",""],["flag_resolution","FlagsHelper","classes/FlagsHelper.html#method-i-flag_resolution","( flag, site )",""],["flaggable_content_viewable_by?","Flag","classes/Flag.html#method-i-flaggable_content_viewable_by-3F","( user )",""],["flaggable_edit","FlagsHelper","classes/FlagsHelper.html#method-i-flaggable_edit","( flaggable )",""],["flaggable_type_valid","Flag","classes/Flag.html#method-i-flaggable_type_valid","()",""],["flaggable_user","FlagsHelper","classes/FlagsHelper.html#method-i-flaggable_user","( flaggable )",""],["flaggable_with_body","FlagsHelper","classes/FlagsHelper.html#method-i-flaggable_with_body","( flaggable )",""],["flagged","Gonzo::Acts::Flaggable::InstanceMethods","classes/Gonzo/Acts/Flaggable/InstanceMethods.html#method-i-flagged","(flag, flag_count)","<p>Meant to be overriden\n"],["flagged_object","Flag","classes/Flag.html#method-i-flagged_object","()",""],["flagged_with","Comment","classes/Comment.html#method-i-flagged_with","(flag, options)",""],["flagged_with","Identification","classes/Identification.html#method-i-flagged_with","(flag, options)",""],["flagged_with","Message","classes/Message.html#method-i-flagged_with","(flag, options = {})",""],["flagged_with","Observation","classes/Observation.html#method-i-flagged_with","(flag, options)",""],["flagged_with","Photo","classes/Photo.html#method-i-flagged_with","(flag, options = {})",""],["flagged_with","Project","classes/Project.html#method-i-flagged_with","( flag, options = {} )",""],["flagged_with","Sound","classes/Sound.html#method-i-flagged_with","(flag, options = {})",""],["flagged_with","Taxon","classes/Taxon.html#method-i-flagged_with","( _flag, _options = {} )",""],["flagged_with","User","classes/User.html#method-i-flagged_with","( flag, options = {} )",""],["flags_on_spam_content","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-flags_on_spam_content","()",""],["flexible_post_path","ApplicationHelper","classes/ApplicationHelper.html#method-i-flexible_post_path","(post, options = {})",""],["flexible_post_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-flexible_post_url","(post, options = {})",""],["flickr_buddyicon","ApplicationHelper","classes/ApplicationHelper.html#method-i-flickr_buddyicon","(iconfarm,iconserver,nsid)",""],["flickr_photos_tagged","TaxaController","classes/TaxaController.html#method-i-flickr_photos_tagged","()",""],["flickr_tagger","TaxaController","classes/TaxaController.html#method-i-flickr_tagger","()",""],["flickraw_for_user","FlickrPhoto","classes/FlickrPhoto.html#method-c-flickraw_for_user","(user)",""],["flow_task_redirect_url","FlowTasksHelper","classes/FlowTasksHelper.html#method-i-flow_task_redirect_url","(flow_task)",""],["followees","User","classes/User.html#method-i-followees","()",""],["followers","User","classes/User.html#method-i-followers","()",""],["followers","UsersController","classes/UsersController.html#method-i-followers","()",""],["following","UsersController","classes/UsersController.html#method-i-following","()",""],["for_each_observation","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-for_each_observation","( search_params )",""],["for_project_user","PostsController","classes/PostsController.html#method-i-for_project_user","()",""],["for_user","PostsController","classes/PostsController.html#method-i-for_user","()",""],["forget","User","classes/User.html#method-c-forget","( user_id, options = {} )","<p>Wipes all the data related to a user, within reason (can&#39;t do backups). Only for extreme cases and …\n"],["forgot_password","PasswordMailer","classes/PasswordMailer.html#method-i-forgot_password","(password)",""],["form_field","BootstrapFormBuilder","classes/BootstrapFormBuilder.html#method-i-form_field","( field, field_content = nil, options = {}, &block )",""],["form_field","DefaultFormBuilder","classes/DefaultFormBuilder.html#method-i-form_field","( field, field_content = nil, options = {}, &block )",""],["format","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-format","()",""],["format","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-format","()",""],["formatted_error_sentence_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-formatted_error_sentence_for","( record, attribute )",""],["formatted_user_text","ApplicationHelper","classes/ApplicationHelper.html#method-i-formatted_user_text","(text, options = {})",""],["friend_button","ApplicationHelper","classes/ApplicationHelper.html#method-i-friend_button","(user, potential_friend, html_options = {})",""],["friend_link","UsersHelper","classes/UsersHelper.html#method-i-friend_link","(user, potential_friend)","<p>Below here, added for iNaturalist\n"],["friends_observations","User","classes/User.html#method-i-friends_observations","(limit = 5)","<p>TODO: named_scope\n"],["friends_with?","User","classes/User.html#method-i-friends_with-3F","(user)",""],["from_eol_data_object","Source","classes/Source.html#method-c-from_eol_data_object","(data_object)",""],["from_ll_to_pixel","SphericalMercator","classes/SphericalMercator.html#method-i-from_ll_to_pixel","(lonlat, zoom, options = {})",""],["from_ll_to_world_coordinate","SphericalMercator","classes/SphericalMercator.html#method-i-from_ll_to_world_coordinate","(lonlat, zoom)",""],["from_observation_params","Sound","classes/Sound.html#method-c-from_observation_params","(params, fieldset_index, owner)",""],["from_pixel_to_ll","SphericalMercator","classes/SphericalMercator.html#method-i-from_pixel_to_ll","(px, zoom)","<p>Convert from URL pixel scheme to mercator bbox.\n"],["from_user_copy","Message","classes/Message.html#method-i-from_user_copy","()",""],["furtherInformationURL","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-furtherInformationURL","()",""],["gbif_lifeStage","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-gbif_lifeStage","()",""],["gbif_sex","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-gbif_sex","()","<p>Attempting to match terms used on iNat to rs.gbif.org/vocabulary/gbif/sex.xml\n"],["generate","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-c-generate","(opts = {})",""],["generate","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-generate","()",""],["generate_bulk_upload_template","Project","classes/Project.html#method-i-generate_bulk_upload_template","()",""],["generate_csv","List","classes/List.html#method-i-generate_csv","(options = {})",""],["generate_csv","Observation","classes/Observation.html#method-c-generate_csv","(scope, options = {})","<p>2014-01 I tried improving performance by loading ancestor taxa for each batch, but it didn&#39;t really …\n"],["generate_csv","Project","classes/Project.html#method-i-generate_csv","(path, columns, options = {})",""],["generate_csv","User","classes/User.html#method-i-generate_csv","(path, columns, options = {})",""],["generate_csv_cache_key","List","classes/List.html#method-i-generate_csv_cache_key","(options = {})",""],["generate_csv_for","Observation","classes/Observation.html#method-c-generate_csv_for","(record, options = {})",""],["generate_csv_for_cache_key","Observation","classes/Observation.html#method-c-generate_csv_for_cache_key","(record, options = {})",""],["generate_dwca","DataPartner","classes/DataPartner.html#method-i-generate_dwca","( options = {} )",""],["generate_dwcas","DataPartner","classes/DataPartner.html#method-c-generate_dwcas","( options = {} )",""],["generate_dwcas_with_logger","DataPartner","classes/DataPartner.html#method-c-generate_dwcas_with_logger","( logger )",""],["generate_for_site_year","YearStatistic","classes/YearStatistic.html#method-c-generate_for_site_year","( site, year )","<p>Generates stats for a specific network site for a single year\n"],["generate_for_user_year","YearStatistic","classes/YearStatistic.html#method-c-generate_for_user_year","( user, year )","<p>Generates stats for a specific user for a single year\n"],["generate_for_year","YearStatistic","classes/YearStatistic.html#method-c-generate_for_year","( year, options = {} )","<p>Generates stats for all of iNat for a single year\n"],["generate_ngz","Guide","classes/Guide.html#method-i-generate_ngz","( options = {} )",""],["generate_ngz_cache_key","Guide","classes/Guide.html#method-i-generate_ngz_cache_key","()",""],["generate_ngz_if_necessary","Guide","classes/Guide.html#method-i-generate_ngz_if_necessary","()",""],["generate_ngz_later","Guide","classes/Guide.html#method-i-generate_ngz_later","( options = {} )",""],["generate_ranked_ancestors","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-c-generate_ranked_ancestors","( taxon_id, cached_taxa = { } )","<p>given a taxon_id and cached taxon information from #lookup_taxa_for_obs_batch, return a hash of each …\n"],["generate_shareable_image","YearStatistic","classes/YearStatistic.html#method-i-generate_shareable_image","()",""],["generate_shareable_image_no_obs","YearStatistic","classes/YearStatistic.html#method-i-generate_shareable_image_no_obs","( options = {} )",""],["generate_shareable_image_obs_grid","YearStatistic","classes/YearStatistic.html#method-i-generate_shareable_image_obs_grid","()",""],["generate_stats_for_date_range","SiteStatistic","classes/SiteStatistic.html#method-c-generate_stats_for_date_range","(start_time, end_time = Time.now, options = {})",""],["generate_stats_for_day","SiteStatistic","classes/SiteStatistic.html#method-c-generate_stats_for_day","(at_time = Time.now, options = {})",""],["generate_year","StatsController","classes/StatsController.html#method-i-generate_year","()",""],["generating","DataPartnerLinkers::GBIF","classes/DataPartnerLinkers/GBIF.html#method-i-generating","()",""],["genus","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-genus","()",""],["genus","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-genus","()",""],["geodeticDatum","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-geodeticDatum","()",""],["geoip_lookup","INatAPIService","classes/INatAPIService.html#method-c-geoip_lookup","(params={}, options = {})",""],["geom","PlaceGeometry","classes/PlaceGeometry.html#method-i-geom","()","<p>During the Rails 5 upgrade, invalid WKT assigned to geom raised this error when the geometry tried to …\n"],["geom_geojson","ElasticModel","classes/ElasticModel.html#method-c-geom_geojson","(geom)",""],["geom_in_elastic_index?","Place","classes/Place.html#method-i-geom_in_elastic_index-3F","()",""],["geometry","PlacesController","classes/PlacesController.html#method-i-geometry","()",""],["geoprivacy","Taxon","classes/Taxon.html#method-i-geoprivacy","( options = {} )",""],["geoprivacy_obscured?","Observation","classes/Observation.html#method-i-geoprivacy_obscured-3F","()",""],["geoprivacy_private?","Observation","classes/Observation.html#method-i-geoprivacy_private-3F","()",""],["geoprivacy_with_consistent_case","ApplicationHelper","classes/ApplicationHelper.html#method-i-geoprivacy_with_consistent_case","( geoprivacy )","<p>Workaround for our inconsistent i18n keys\n"],["georeferenced?","Observation","classes/Observation.html#method-i-georeferenced-3F","()",""],["georeferenced?","ProjectObservation","classes/ProjectObservation.html#method-i-georeferenced-3F","()",""],["get","INatAPIService","classes/INatAPIService.html#method-c-get","( path, params = {}, options = {} )",""],["get","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-get","( url, params = {} )",""],["get_api_response","EolPhoto","classes/EolPhoto.html#method-c-get_api_response","( photo_id )",""],["get_api_response","FacebookPhoto","classes/FacebookPhoto.html#method-c-get_api_response","(native_photo_id, options = {})",""],["get_api_response","FlickrPhoto","classes/FlickrPhoto.html#method-c-get_api_response","(native_photo_id, options = {})",""],["get_api_response","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-c-get_api_response","(native_photo_id, options = {})",""],["get_api_response","Photo","classes/Photo.html#method-c-get_api_response","(native_photo_id, options = {})","<p>Retrieve info about a photo from its native source given its native id.\n<p>Should be implemented by descendents …\n"],["get_api_response","PicasaPhoto","classes/PicasaPhoto.html#method-c-get_api_response","(native_photo_id, options = {})","<p>Retrieve info about a photo from its native source given its native id.\n"],["get_api_response","WikimediaCommonsPhoto","classes/WikimediaCommonsPhoto.html#method-c-get_api_response","(file_name)",""],["get_atlas_presence_place_listed_taxa","Atlas","classes/Atlas.html#method-i-get_atlas_presence_place_listed_taxa","(place_id)",""],["get_calflora_rows","DataPartnerLinkers::Calflora","classes/DataPartnerLinkers/Calflora.html#method-i-get_calflora_rows","( after = nil, before = nil )",""],["get_community_taxon","Observation","classes/Observation.html#method-i-get_community_taxon","(options = {})","<p>Community Taxon #########################################################\n"],["get_complete_taxon_framework_for_internode_or_root","Taxon","classes/Taxon.html#method-i-get_complete_taxon_framework_for_internode_or_root","()",""],["get_current_place_ids_to_refresh","CheckList","classes/CheckList.html#method-c-get_current_place_ids_to_refresh","(observation, options = {})",""],["get_defaults_for_taxon_place","AtlasesController","classes/AtlasesController.html#method-i-get_defaults_for_taxon_place","()",""],["get_defaults_for_taxon_place","ListedTaxon","classes/ListedTaxon.html#method-c-get_defaults_for_taxon_place","( place,taxon, options = { } )",""],["get_describer","TaxonDescribers","classes/TaxonDescribers.html#method-c-get_describer","(name)",""],["get_downstream_taxon_frameworks","TaxonFramework","classes/TaxonFramework.html#method-i-get_downstream_taxon_frameworks","()",""],["get_downstream_taxon_frameworks_count","TaxonFramework","classes/TaxonFramework.html#method-i-get_downstream_taxon_frameworks_count","()",""],["get_eol_page","GuideTaxon","classes/GuideTaxon.html#method-i-get_eol_page","(options = {})",""],["get_exploded_place_ids_to_include_and_exclude","Atlas","classes/Atlas.html#method-i-get_exploded_place_ids_to_include_and_exclude","()",""],["get_flaggable_user","Flag","classes/Flag.html#method-i-get_flaggable_user","()",""],["get_flagged_taxa","TaxonFramework","classes/TaxonFramework.html#method-i-get_flagged_taxa","(options = {})",""],["get_flagged_taxa_count","TaxonFramework","classes/TaxonFramework.html#method-i-get_flagged_taxa_count","(options = {})",""],["get_flickraw","ApplicationController","classes/ApplicationController.html#method-i-get_flickraw","()",""],["get_gbif_id","Taxon","classes/Taxon.html#method-i-get_gbif_id","()",""],["get_graft_point_for","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-get_graft_point_for","(lineage)",""],["get_id_count_and_obs","TaxonSplit","classes/TaxonSplit.html#method-i-get_id_count_and_obs","( params )",""],["get_internal_taxa_covered_by","Taxon","classes/Taxon.html#method-c-get_internal_taxa_covered_by","( taxon_framework )",""],["get_internal_taxa_covered_by_taxon_framework","TaxonFramework","classes/TaxonFramework.html#method-i-get_internal_taxa_covered_by_taxon_framework","()",""],["get_is_valid","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-get_is_valid","()",""],["get_is_valid","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-get_is_valid","()","<p>We assume that if the result has an accepted name and that the nameID is equal to the nameID of the actual …\n"],["get_is_valid","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-get_is_valid","()",""],["get_json","INatAPIService","classes/INatAPIService.html#method-c-get_json","( path, params = {}, options = {} )",""],["get_keepers","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-i-get_keepers","(name, results)","<p>Filter a simple_namebank_search response to keep the size down (so we don&#39;t call uBio 2 trillion …\n"],["get_lat_lon_from_ip","User","classes/User.html#method-i-get_lat_lon_from_ip","()",""],["get_lat_lon_from_ip_if_last_ip_changed","User","classes/User.html#method-i-get_lat_lon_from_ip_if_last_ip_changed","()",""],["get_lexicon","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-get_lexicon","()",""],["get_lexicon","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-get_lexicon","()","<p>todo, check if it&#39;s always Scientific or English, and whether this has an effect&#39;\n"],["get_lexicon","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-get_lexicon","()",""],["get_lineage_for","Ratatosk::NameProviders::ColNameProvider","classes/Ratatosk/NameProviders/ColNameProvider.html#method-i-get_lineage_for","(taxon)","<p>Finds a taxon&#39;s ancestors from the name provider and returns an array of them as <strong>new</strong> Taxon objects …\n"],["get_lineage_for","Ratatosk::NameProviders::NZORNameProvider","classes/Ratatosk/NameProviders/NZORNameProvider.html#method-i-get_lineage_for","(taxon)","<p>Finds a taxon&#39;s ancestors from the name provider and returns an array of them as <strong>new</strong> Taxon objects …\n"],["get_lineage_for","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-i-get_lineage_for","(taxon)",""],["get_local_onboarding_content","UsersController","classes/UsersController.html#method-i-get_local_onboarding_content","()",""],["get_name","Ratatosk::NameProviders::UBioTaxonAdapter","classes/Ratatosk/NameProviders/UBioTaxonAdapter.html#method-i-get_name","()",""],["get_name","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-get_name","()",""],["get_namebank_id","Ratatosk::NameProviders::UBioTaxonAdapter","classes/Ratatosk/NameProviders/UBioTaxonAdapter.html#method-i-get_namebank_id","()",""],["get_namebank_id","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-get_namebank_id","()",""],["get_nearby_taxa_obs_counts","UsersController","classes/UsersController.html#method-i-get_nearby_taxa_obs_counts","(search_params)",""],["get_observation_to_refresh","CheckList","classes/CheckList.html#method-c-get_observation_to_refresh","(observation)",""],["get_old_place_ids_to_refresh","CheckList","classes/CheckList.html#method-c-get_old_place_ids_to_refresh","(observation, options = {})",""],["get_phylum_for","Ratatosk::NameProviders::ColNameProvider","classes/Ratatosk/NameProviders/ColNameProvider.html#method-i-get_phylum_for","(taxon, lineage = nil)","<p>Gets the phylum name for this taxon.\n"],["get_phylum_for","Ratatosk::NameProviders::NZORNameProvider","classes/Ratatosk/NameProviders/NZORNameProvider.html#method-i-get_phylum_for","(taxon, lineage = nil)","<p>Gets the phylum name for this taxon.\n"],["get_phylum_for","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-i-get_phylum_for","(taxon, lineage = nil)",""],["get_quality_grade","Observation","classes/Observation.html#method-i-get_quality_grade","()",""],["get_relevant_listings","CompleteSetsController","classes/CompleteSetsController.html#method-i-get_relevant_listings","()",""],["get_results_xml","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-get_results_xml","( options = {} )",""],["get_search_params","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-get_search_params","(raw_params, options={})",""],["get_taxa_for_place_taxon","CompleteSet","classes/CompleteSet.html#method-i-get_taxa_for_place_taxon","()",""],["get_taxon","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-get_taxon","()",""],["get_taxon","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-get_taxon","()",""],["get_taxon","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-get_taxon","()",""],["get_taxon_for_nzor_id","NewZealandOrganismsRegister","classes/NewZealandOrganismsRegister.html#method-i-get_taxon_for_nzor_id","(params)","<p>creates an xml response off the NZOR NameID\n"],["get_taxon_ids_to_refresh","CheckList","classes/CheckList.html#method-c-get_taxon_ids_to_refresh","(observation, options)",""],["get_unassigned_taxa","TaxonFramework","classes/TaxonFramework.html#method-i-get_unassigned_taxa","()",""],["get_upstream_taxon_framework","Taxon","classes/Taxon.html#method-i-get_upstream_taxon_framework","( supplied_ancestor_ids = ancestor_ids )",""],["get_uri","EolService","classes/EolService.html#method-i-get_uri","(method, *args)",""],["get_url","Picasa","classes/Picasa.html#method-i-get_url","(url, options = {})","<p>Retrieve a RubyPicasa object determined by the type of xml results returned by Picasa. Any supported …\n"],["getting_started","HelpController","classes/HelpController.html#method-i-getting_started","()",""],["global_conservation_status","Taxon","classes/Taxon.html#method-i-global_conservation_status","()",""],["globally_threatened?","Taxon","classes/Taxon.html#method-i-globally_threatened-3F","()",""],["goal_must_not_have_ended","GoalContribution","classes/GoalContribution.html#method-i-goal_must_not_have_ended","()","\n<pre><code>Validations #########################################################\n</code></pre>\n<p>Used for a validation to ensure …\n"],["google_charts_map_for_places","PlacesHelper","classes/PlacesHelper.html#method-i-google_charts_map_for_places","(places, options = {}, tag_options = {})",""],["google_maps_js","ApplicationHelper","classes/ApplicationHelper.html#method-i-google_maps_js","(options = {})",""],["google_oauth_allowed?","Site","classes/Site.html#method-i-google_oauth_allowed-3F","()","<p>We can&#39;t use OAuth to authenticate a user with Google unless our OAuth authentication page has been …\n"],["google_static_map_for_observation_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-google_static_map_for_observation_url","(o, options = {})",""],["google_static_map_for_place","PlacesHelper","classes/PlacesHelper.html#method-i-google_static_map_for_place","(place, options = {}, tag_options = {})",""],["google_static_map_for_place_url","PlacesHelper","classes/PlacesHelper.html#method-i-google_static_map_for_place_url","(place, options = {})",""],["graft","Ratatosk","classes/Ratatosk.html#method-c-graft","(taxon, options = {})","<p>Alias for Ratatosk::Ratatosk#graft\n"],["graft","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-graft","(taxon, options = {})","<p>Take an ungrafted taxon and find its ancestor taxa from itself to an existing taxon in our tree, saving …\n"],["graft","TaxaController","classes/TaxaController.html#method-i-graft","()",""],["graft","Taxon","classes/Taxon.html#method-i-graft","( options = {} )",""],["graft_point_and_lineage","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-graft_point_and_lineage","(taxon, options = {})",""],["graft_silently","Taxon","classes/Taxon.html#method-i-graft_silently","( options = {} )",""],["graftable_destination_relative_to_taxon_framework_coverage","Taxon","classes/Taxon.html#method-i-graftable_destination_relative_to_taxon_framework_coverage","()",""],["graftable_relative_to_taxon_framework_coverage","Taxon","classes/Taxon.html#method-i-graftable_relative_to_taxon_framework_coverage","()",""],["grafted?","Taxon","classes/Taxon.html#method-i-grafted-3F","()",""],["grant_user_privilege","AdminController","classes/AdminController.html#method-i-grant_user_privilege","()",""],["group","FacebookController","classes/FacebookController.html#method-i-group","()","<p>Return an HTML fragment containing photos from the group&#39;s feed  facebook group id should be specified …\n"],["group","TaxonChangesController","classes/TaxonChangesController.html#method-i-group","()",""],["group_and_sort","UpdateAction","classes/UpdateAction.html#method-c-group_and_sort","(updates, options = {})",""],["guide","ListsController","classes/ListsController.html#method-i-guide","()",""],["guide","PlacesController","classes/PlacesController.html#method-i-guide","()",""],["guide_asset_filename","GuidesHelper","classes/GuidesHelper.html#method-i-guide_asset_filename","(record, options = {})",""],["guide_cache_key","Place","classes/Place.html#method-c-guide_cache_key","(id)",""],["guide_photo_for_tag","GuideTaxon","classes/GuideTaxon.html#method-i-guide_photo_for_tag","(tag=nil)",""],["guide_taxa_from_params","GuidesHelper","classes/GuidesHelper.html#method-i-guide_taxa_from_params","(gparams = nil)",""],["guide_widget","ListsController","classes/ListsController.html#method-i-guide_widget","()",""],["guide_widget","PlacesController","classes/PlacesController.html#method-i-guide_widget","()",""],["haml_pretty","Ambidextrous","classes/Ambidextrous.html#method-i-haml_pretty","(&block)","<p>haml agreesively removes whitespace in ugly mode. This forces it to look the way you meant it to look …\n"],["handle_after_activate","Taxon","classes/Taxon.html#method-i-handle_after_activate","()",""],["handle_after_move","Taxon","classes/Taxon.html#method-i-handle_after_move","()",""],["handle_change_in_completeness","TaxonFramework","classes/TaxonFramework.html#method-i-handle_change_in_completeness","()",""],["handle_remember_cookie!","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-handle_remember_cookie-21","(new_cookie_flag)","<p>Refresh the cookie auth token if it exists, create it otherwise\n"],["has_a_photo?","ProjectObservation","classes/ProjectObservation.html#method-i-has_a_photo-3F","(options = {})",""],["has_a_sound?","ProjectObservation","classes/ProjectObservation.html#method-i-has_a_sound-3F","(options = {})",""],["has_ancestor_taxon_id","Taxon","classes/Taxon.html#method-i-has_ancestor_taxon_id","( ancestor_id )","<p>rubocop:disable Naming/PredicateName FWIW, we <strong>should</strong> rename this, but I&#39;m trying to reduce the impact …\n"],["has_atlas_or_complete_set?","ListedTaxon","classes/ListedTaxon.html#method-i-has_atlas_or_complete_set-3F","(options = {})",""],["has_inputs_and_outputs","TaxonSwap","classes/TaxonSwap.html#method-i-has_inputs_and_outputs","()",""],["has_media?","ProjectObservation","classes/ProjectObservation.html#method-i-has_media-3F","()",""],["has_more_than_one_input","TaxonMerge","classes/TaxonMerge.html#method-i-has_more_than_one_input","()",""],["has_more_than_one_output","TaxonSplit","classes/TaxonSplit.html#method-i-has_more_than_one_output","()",""],["has_no_inputs","TaxonStage","classes/TaxonStage.html#method-i-has_no_inputs","()",""],["has_no_outputs","TaxonDrop","classes/TaxonDrop.html#method-i-has_no_outputs","()",""],["has_observation_field?","ProjectObservation","classes/ProjectObservation.html#method-i-has_observation_field-3F","(observation_field = nil)",""],["has_provider_auth","User","classes/User.html#method-i-has_provider_auth","(provider)","<p>test to see if this user has authorized with the given provider argument is one of: &#39;facebook&#39;, …\n"],["has_role?","User","classes/User.html#method-i-has_role-3F","(role)","<p>Checks if a user has a role; returns true if they don&#39;t but are admin.  Admins are supreme beings …\n"],["has_rules_for","Ruler::ClassMethods","classes/Ruler/ClassMethods.html#method-i-has_rules_for","(association, options = {})",""],["has_subscribers","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-has_subscribers","(options = {})","<p>Tell a class that it has subscribers :to =&gt; {:notofying_association =&gt; options}\n\n<pre><code>this is a way to ...\n</code></pre>\n"],["has_t?","ApplicationHelper","classes/ApplicationHelper.html#method-i-has_t-3F","(*args)",""],["has_t?","I18nExtensions","classes/I18nExtensions.html#method-i-has_t-3F","(key)","<p>Detect if the current locale has translation <em>without</em> falling back to the default locale Helpful to introduce …\n"],["has_time_zone?","ProjectUser","classes/ProjectUser.html#method-i-has_time_zone-3F","()",""],["header_cache_key_for","User","classes/User.html#method-c-header_cache_key_for","(user, options = {})",""],["header_projects","User","classes/User.html#method-i-header_projects","()",""],["helptip","ApplicationHelper","classes/ApplicationHelper.html#method-i-helptip","(text, options = {}, &block)",""],["helptip_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-helptip_for","(id, options = {}, &block)",""],["hidden_fields_for_params","ApplicationHelper","classes/ApplicationHelper.html#method-i-hidden_fields_for_params","(options = {})",""],["hide_coordinates","Observation","classes/Observation.html#method-i-hide_coordinates","()",""],["history","TaxaController","classes/TaxaController.html#method-i-history","()",""],["history_allowed?","WikiPagesController","classes/WikiPagesController.html#method-i-history_allowed-3F","()",""],["home_page_wiki_path_by_locale","Site","classes/Site.html#method-i-home_page_wiki_path_by_locale","( locale )",""],["host","Picasa","classes/Picasa.html#method-c-host","()","<p>The url to make requests to without the protocol or path.\n"],["host=","Picasa","classes/Picasa.html#method-c-host-3D","(h)","<p>In the unlikely event that you need to access this api on a different url, you can set it here. It defaults …\n"],["html_attributize","ApplicationHelper","classes/ApplicationHelper.html#method-i-html_attributize","(txt)",""],["human?","Observation","classes/Observation.html#method-i-human-3F","()",""],["hyperlink_mentions","ApplicationHelper","classes/ApplicationHelper.html#method-i-hyperlink_mentions","(text)",""],["icon_preview_cache_key","List","classes/List.html#method-c-icon_preview_cache_key","(list)",""],["icon_url","Guide","classes/Guide.html#method-i-icon_url","()",""],["icon_url","Project","classes/Project.html#method-i-icon_url","()",""],["icon_url","Site","classes/Site.html#method-i-icon_url","()",""],["icon_url_provided?","User","classes/User.html#method-i-icon_url_provided-3F","()",""],["iconic_taxa_counts","YearStatistic","classes/YearStatistic.html#method-c-iconic_taxa_counts","( year, options = {} )",""],["iconic_taxa_param_to_instances","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-iconic_taxa_param_to_instances","(iconic_taxa)",""],["iconic_taxon_color","TaxaHelper","classes/TaxaHelper.html#method-i-iconic_taxon_color","(taxon)",""],["iconic_taxon_color_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-iconic_taxon_color_for","(taxon)",""],["iconic_taxon_colors","ApplicationHelper","classes/ApplicationHelper.html#method-i-iconic_taxon_colors","()",""],["iconic_taxon_image","TaxaHelper","classes/TaxaHelper.html#method-i-iconic_taxon_image","(taxon, params = {})","<p>Image tag for an iconic taxon icon.  Takes the same params as iconic_taxon_image_url and image_tag\n"],["iconic_taxon_image_url","TaxaHelper","classes/TaxaHelper.html#method-i-iconic_taxon_image_url","(taxon, params = {})","<p>URL of this taxon&#39;s icon, using the following convention\n\n<pre><code>/assets/iconic_taxa/[taxon_name]-[color]-[size]px.png\n</code></pre>\n"],["iconic_taxon_name","Observation","classes/Observation.html#method-i-iconic_taxon_name","()",""],["iconic_taxon_name","Taxon","classes/Taxon.html#method-i-iconic_taxon_name","()",""],["id=","ActsAsUUIDable","classes/ActsAsUUIDable.html#method-i-id-3D","(new_id)","<p>If we seem to be assigning a UUID to the id column, ignore it\n"],["id_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-id_for","(obj)","<p>Generate an id for an object for us in views, e.g. an observation with id  4 would be “observation-4” …\n"],["id_for_extension","FileExtension","classes/FileExtension.html#method-c-id_for_extension","( extension )",""],["id_for_prefix","FilePrefix","classes/FilePrefix.html#method-c-id_for_prefix","( prefix )",""],["id_or_object","ElasticModel","classes/ElasticModel.html#method-c-id_or_object","(obj)",""],["identificationID","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-identificationID","()",""],["identificationRemarks","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-identificationRemarks","()",""],["identificationVerificationStatus","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-identificationVerificationStatus","()",""],["identification_counts_by_category","YearStatistic","classes/YearStatistic.html#method-c-identification_counts_by_category","( year, options = {} )",""],["identification_counts_by_iconic_taxon","YearStatistic","classes/YearStatistic.html#method-c-identification_counts_by_iconic_taxon","( year, user )",""],["identifications","INatAPIService","classes/INatAPIService.html#method-c-identifications","(params={}, options = {})",""],["identifications","Observation","classes/Observation.html#method-c-identifications","(agreement)",""],["identifications_categories","INatAPIService","classes/INatAPIService.html#method-c-identifications_categories","(params={}, options = {})",""],["identifications_es_base_params","YearStatistic","classes/YearStatistic.html#method-c-identifications_es_base_params","( year )",""],["identifications_histogram","YearStatistic","classes/YearStatistic.html#method-c-identifications_histogram","( year, options = {} )",""],["identified?","ProjectObservation","classes/ProjectObservation.html#method-i-identified-3F","()",""],["identifiedBy","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-identifiedBy","()",""],["identifiedByID","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-identifiedByID","()",""],["identifier","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-identifier","()",""],["identifier","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-identifier","()","<p>Note that this is <strong>supposed</strong> to be a URL to locate the resource, <strong>not</strong> a unique identifier for the image …\n"],["identifier","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-identifier","()",""],["identify","ObservationsController","classes/ObservationsController.html#method-i-identify","()",""],["identotron","ObservationsController","classes/ObservationsController.html#method-i-identotron","()",""],["image?","WikiPageAttachment","classes/WikiPageAttachment.html#method-i-image-3F","()",""],["image_and_content","ApplicationHelper","classes/ApplicationHelper.html#method-i-image_and_content","(image, options = {}, &block)",""],["image_url","ApplicationHelper","classes/ApplicationHelper.html#method-i-image_url","( source, options = {} )",""],["image_url","Observation","classes/Observation.html#method-i-image_url","(options = {})",""],["image_url","Taxon","classes/Taxon.html#method-i-image_url","()",""],["images_from_result","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-images_from_result","( result )",""],["import","GuideRangesController","classes/GuideRangesController.html#method-i-import","()",""],["import","GuideSectionsController","classes/GuideSectionsController.html#method-i-import","()",""],["import","ObservationsController","classes/ObservationsController.html#method-i-import","()","<p>Import observations from external sources\n"],["import","Taxon","classes/Taxon.html#method-c-import","( name, options = {} )",""],["import_file","BulkObservationFile","classes/BulkObservationFile.html#method-i-import_file","()","<p>Import the observations in the file, and add to the specified project.\n"],["import_from_eol","GuideRangesController","classes/GuideRangesController.html#method-i-import_from_eol","()",""],["import_from_shapefile","Place","classes/Place.html#method-c-import_from_shapefile","(shapefile_path, options = {}, &block)","<p>Import places from a shapefile.  Note that this is optimized for use with a set of adapter methods in …\n"],["import_or_create","Taxon","classes/Taxon.html#method-c-import_or_create","( name, options = {} )",""],["import_photos","ObservationsController","classes/ObservationsController.html#method-i-import_photos","()",""],["import_sounds","ObservationsController","classes/ObservationsController.html#method-i-import_sounds","()",""],["import_tags_from_csv","GuidesController","classes/GuidesController.html#method-i-import_tags_from_csv","()",""],["import_tags_from_csv_template","GuidesController","classes/GuidesController.html#method-i-import_tags_from_csv_template","()",""],["import_taxa","Guide","classes/Guide.html#method-i-import_taxa","( options = {} )",""],["import_taxa","GuidesController","classes/GuidesController.html#method-i-import_taxa","()",""],["in_agreement_with?","Identification","classes/Identification.html#method-i-in_agreement_with-3F","(identification)","<p>Tests whether this identification should be considered an agreement with another identification.\n"],["in_collection_projects?","Observation","classes/Observation.html#method-i-in_collection_projects-3F","( projects, api_params = {} )",""],["in_format","ApplicationHelper","classes/ApplicationHelper.html#method-i-in_format","(format)",""],["in_progress?","ApiEndpointCache","classes/ApiEndpointCache.html#method-i-in_progress-3F","()",""],["in_project?","ProjectObservation","classes/ProjectObservation.html#method-i-in_project-3F","(rule_project = nil)",""],["in_public_s3_bucket?","LocalPhoto","classes/LocalPhoto.html#method-i-in_public_s3_bucket-3F","()",""],["in_taxon?","ProjectObservation","classes/ProjectObservation.html#method-i-in_taxon-3F","(taxon = nil)",""],["in_taxon?","Taxon","classes/Taxon.html#method-i-in_taxon-3F","( taxon )","<p>Test whether this taxon is in another taxon (e.g. Anna&#39;s Humminbird is in Class Aves)\n"],["in_test_group?","User","classes/User.html#method-i-in_test_group-3F","( group )",""],["inaccurate_location?","Observation","classes/Observation.html#method-i-inaccurate_location-3F","()",""],["inaturalistLogin","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-inaturalistLogin","()",""],["inaturalist_android_app","OauthApplication","classes/OauthApplication.html#method-c-inaturalist_android_app","()",""],["inaturalist_iphone_app","OauthApplication","classes/OauthApplication.html#method-c-inaturalist_iphone_app","()",""],["included","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-c-included","(base)","<p>Inclusion hook to make #current_user and #logged_in? available as ActionView helper methods.\n"],["included","HasSubscribers","classes/HasSubscribers.html#method-c-included","(base)",""],["included","ObservationSearch","classes/ObservationSearch.html#method-c-included","(base)",""],["included","Privileges","classes/Privileges.html#method-c-included","( base )",""],["included","Privileges::Controller","classes/Privileges/Controller.html#method-c-included","( base )",""],["included","Ruler","classes/Ruler.html#method-c-included","(base)",""],["included","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-c-included","(base)",""],["included","Shared::MailerModule","classes/Shared/MailerModule.html#method-c-included","( base )",""],["included","Shared::TouchesObservationModule","classes/Shared/TouchesObservationModule.html#method-c-included","(base)",""],["index","Admin::DelayedJobsController","classes/Admin/DelayedJobsController.html#method-i-index","()",""],["index","AdminController","classes/AdminController.html#method-i-index","()",""],["index","AnnouncementsController","classes/AnnouncementsController.html#method-i-index","()","<p>GET /announcements GET /announcements.xml\n"],["index","AppleAppSiteAssociationController","classes/AppleAppSiteAssociationController.html#method-i-index","()",""],["index","AssessmentsController","classes/AssessmentsController.html#method-i-index","()",""],["index","AtlasesController","classes/AtlasesController.html#method-i-index","()",""],["index","CalendarsController","classes/CalendarsController.html#method-i-index","()",""],["index","CheckListsController","classes/CheckListsController.html#method-i-index","()","<p>Not supporting any of these just yet\n"],["index","CommentsController","classes/CommentsController.html#method-i-index","()",""],["index","ComputerVisionDemoController","classes/ComputerVisionDemoController.html#method-i-index","()",""],["index","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-index","()",""],["index","ControlledTermsController","classes/ControlledTermsController.html#method-i-index","()",""],["index","DataPartnersController","classes/DataPartnersController.html#method-i-index","()",""],["index","DonateController","classes/DonateController.html#method-i-index","()",""],["index","FacebookController","classes/FacebookController.html#method-i-index","()",""],["index","FlagsController","classes/FlagsController.html#method-i-index","()",""],["index","FlowTasksController","classes/FlowTasksController.html#method-i-index","()",""],["index","FriendshipsController","classes/FriendshipsController.html#method-i-index","()",""],["index","GuidePhotosController","classes/GuidePhotosController.html#method-i-index","()","<p>GET /guide_photos GET /guide_photos.json\n"],["index","GuideRangesController","classes/GuideRangesController.html#method-i-index","()","<p>GET /guide_ranges GET /guide_ranges.json\n"],["index","GuideSectionsController","classes/GuideSectionsController.html#method-i-index","()","<p>GET /guide_sections GET /guide_sections.json\n"],["index","GuideTaxaController","classes/GuideTaxaController.html#method-i-index","()","<p>GET /guide_taxa GET /guide_taxa.json\n"],["index","GuidesController","classes/GuidesController.html#method-i-index","()","<p>GET /guides GET /guides.json\n"],["index","HelpController","classes/HelpController.html#method-i-index","()",""],["index","IdentificationsController","classes/IdentificationsController.html#method-i-index","()",""],["index","ListedTaxaController","classes/ListedTaxaController.html#method-i-index","()",""],["index","MessagesController","classes/MessagesController.html#method-i-index","()",""],["index","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-index","()",""],["index","ObservationFieldValuesController","classes/ObservationFieldValuesController.html#method-i-index","()",""],["index","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-index","()","<p>GET /observation_fields GET /observation_fields.xml\n"],["index","ObservationsController","classes/ObservationsController.html#method-i-index","()","<p>GET /observations GET /observations.xml\n"],["index","PlacesController","classes/PlacesController.html#method-i-index","()",""],["index","PostsController","classes/PostsController.html#method-i-index","()",""],["index","ProjectsController","classes/ProjectsController.html#method-i-index","()",""],["index","SavedLocationsController","classes/SavedLocationsController.html#method-i-index","()",""],["index","SearchController","classes/SearchController.html#method-i-index","()",""],["index","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-index","()","<p>RESTful actions ###########################################################\n"],["index","SitesController","classes/SitesController.html#method-i-index","()","<p>GET /sites GET /sites.json\n"],["index","SoundcloudSoundsController","classes/SoundcloudSoundsController.html#method-i-index","()",""],["index","SourcesController","classes/SourcesController.html#method-i-index","()",""],["index","StatsController","classes/StatsController.html#method-i-index","()",""],["index","SubscriptionsController","classes/SubscriptionsController.html#method-i-index","()",""],["index","TaxaController","classes/TaxaController.html#method-i-index","()","<p>GET /observations GET /observations.xml\n<p>@param name: Return all taxa where name is an EXACT match @param …\n"],["index","TaxonChangesController","classes/TaxonChangesController.html#method-i-index","()",""],["index","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-index","()",""],["index","TaxonLinksController","classes/TaxonLinksController.html#method-i-index","()",""],["index","TaxonNamesController","classes/TaxonNamesController.html#method-i-index","()",""],["index","TaxonSchemesController","classes/TaxonSchemesController.html#method-i-index","()",""],["index","TranslationsController","classes/TranslationsController.html#method-i-index","()",""],["index","TripsController","classes/TripsController.html#method-i-index","()","<p># api :GET, &#39;/trips&#39;, &#39;Retrieve recently created trips&#39; # description &lt;&lt;-EOT # …\n"],["index","UserParentsController","classes/UserParentsController.html#method-i-index","()",""],["index","UsersController","classes/UsersController.html#method-i-index","()","<p>Methods below here are added by iNaturalist\n"],["index","WelcomeController","classes/WelcomeController.html#method-i-index","()",""],["index_attributes","ControlledTerm","classes/ControlledTerm.html#method-i-index_attributes","()",""],["index_controlled_term","ControlledTermTaxon","classes/ControlledTermTaxon.html#method-i-index_controlled_term","()",""],["index_exists?","ElasticModel","classes/ElasticModel.html#method-c-index_exists-3F","(index_name)",""],["index_license_code","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-index_license_code","()",""],["index_observation","Annotation","classes/Annotation.html#method-i-index_observation","()",""],["index_observation","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-index_observation","()",""],["index_observations","Photo","classes/Photo.html#method-i-index_observations","()",""],["index_observations","Sound","classes/Sound.html#method-i-index_observations","()",""],["index_observations","Taxon","classes/Taxon.html#method-i-index_observations","()",""],["index_observations","User","classes/User.html#method-i-index_observations","()",""],["index_observations_for_user","Observation","classes/Observation.html#method-c-index_observations_for_user","(user_id)",""],["index_observations_later","User","classes/User.html#method-i-index_observations_later","()",""],["index_parent","Comment","classes/Comment.html#method-i-index_parent","()",""],["index_project","ProjectUser","classes/ProjectUser.html#method-i-index_project","()",""],["index_project","SiteFeaturedProject","classes/SiteFeaturedProject.html#method-i-index_project","()",""],["index_taxa","Photo","classes/Photo.html#method-i-index_taxa","()",""],["index_taxa","Taxon","classes/Taxon.html#method-c-index_taxa","( taxa )",""],["index_taxon","Atlas","classes/Atlas.html#method-i-index_taxon","()",""],["index_taxon","ConservationStatus","classes/ConservationStatus.html#method-i-index_taxon","()",""],["index_taxon","ListedTaxon","classes/ListedTaxon.html#method-i-index_taxon","()",""],["index_taxon","TaxonChange","classes/TaxonChange.html#method-i-index_taxon","()",""],["index_taxon","TaxonChangeTaxon","classes/TaxonChangeTaxon.html#method-i-index_taxon","()",""],["index_taxon","TaxonName","classes/TaxonName.html#method-i-index_taxon","()",""],["index_taxon","TaxonPhoto","classes/TaxonPhoto.html#method-i-index_taxon","()",""],["inform_goal_of_new_contribution","GoalContribution","classes/GoalContribution.html#method-i-inform_goal_of_new_contribution","()","<p>This is a magical bridge that tells the Goal object that a new contribution has been made which may or …\n"],["informationWithheld","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-informationWithheld","()",""],["infraspecies?","Taxon","classes/Taxon.html#method-i-infraspecies-3F","()",""],["infraspecificEpithet","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-infraspecificEpithet","()",""],["input_taxa","TaxonChange","classes/TaxonChange.html#method-i-input_taxa","()",""],["input_taxa","TaxonMerge","classes/TaxonMerge.html#method-i-input_taxa","()",""],["input_taxa","TaxonStage","classes/TaxonStage.html#method-i-input_taxa","()",""],["input_taxa","TaxonSwap","classes/TaxonSwap.html#method-i-input_taxa","()",""],["input_taxon","TaxonSplit","classes/TaxonSplit.html#method-i-input_taxon","()",""],["input_taxon","TaxonSwap","classes/TaxonSwap.html#method-i-input_taxon","()",""],["institutionCode","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-institutionCode","()",""],["interpolate_coordinates","Observation","classes/Observation.html#method-i-interpolate_coordinates","()",""],["intersecting_places","Observation","classes/Observation.html#method-i-intersecting_places","()",""],["introduced?","ListedTaxon","classes/ListedTaxon.html#method-i-introduced-3F","()",""],["invalidate_cloudfront_cache_for","CloudfrontInvalidator","classes/CloudfrontInvalidator.html#method-i-invalidate_cloudfront_cache_for","(attachment_name, path_pattern)",""],["invalidate_cloudfront_caches","CloudfrontInvalidator","classes/CloudfrontInvalidator.html#method-i-invalidate_cloudfront_caches","(attachment_name, path_pattern)","<p>it&#39;s important to place this after `has_attached_file`\n"],["invite","ProjectsController","classes/ProjectsController.html#method-i-invite","()",""],["invite_only?","Project","classes/Project.html#method-i-invite_only-3F","()",""],["ip_address_is_often_suspended","User","classes/User.html#method-c-ip_address_is_often_suspended","( ip )",""],["is_absent?","ListedTaxon","classes/ListedTaxon.html#method-i-is_absent-3F","()",""],["is_accepted_sciname?","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-is_accepted_sciname-3F","()",""],["is_admin?","ApplicationHelper","classes/ApplicationHelper.html#method-i-is_admin-3F","()",""],["is_admin?","ProjectUser","classes/ProjectUser.html#method-i-is_admin-3F","()",""],["is_admin?","User","classes/User.html#method-i-is_admin-3F","()",""],["is_agreement?","Identification","classes/Identification.html#method-i-is_agreement-3F","(options = {})","<p>Tests whether this identification should be considered an agreement with the observation&#39;s taxon. …\n"],["is_akismet_spam_flag?","Flag","classes/Flag.html#method-i-is_akismet_spam_flag-3F","()",""],["is_android_app?","Ambidextrous","classes/Ambidextrous.html#method-i-is_android_app-3F","()",""],["is_app_owner?","User","classes/User.html#method-i-is_app_owner-3F","()",""],["is_branching?","TaxonSplit","classes/TaxonSplit.html#method-i-is_branching-3F","()",""],["is_comname?","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-is_comname-3F","()","<p>Test if this is a common / vernacular name\n"],["is_comname?","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-is_comname-3F","()","<p>Test if this is a common / vernacular name #TODO check if this is a valid assumption\n"],["is_comname?","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-is_comname-3F","()",""],["is_curator?","ApplicationHelper","classes/ApplicationHelper.html#method-i-is_curator-3F","()",""],["is_curator?","ProjectUser","classes/ProjectUser.html#method-i-is_curator-3F","()",""],["is_curator?","User","classes/User.html#method-i-is_curator-3F","()","<p>TODO: named_scope / roles plugin\n"],["is_default?","CheckList","classes/CheckList.html#method-i-is_default-3F","()","<p>Is this the default check list of its place?\n"],["is_disagreement?","Identification","classes/Identification.html#method-i-is_disagreement-3F","( options = {} )","<p>def old_is_disagreement?(options = {})\n\n<pre><code>return false if frozen?\no = options[:observation] || observation ...\n</code></pre>\n"],["is_imported","GuideSection","classes/GuideSection.html#method-i-is_imported","()",""],["is_inaturalistjs_request?","Ambidextrous","classes/Ambidextrous.html#method-i-is_inaturalistjs_request-3F","()",""],["is_iphone_app?","Ambidextrous","classes/Ambidextrous.html#method-i-is_iphone_app-3F","()",""],["is_iphone_app_2?","Ambidextrous","classes/Ambidextrous.html#method-i-is_iphone_app_2-3F","()",""],["is_manager?","ProjectUser","classes/ProjectUser.html#method-i-is_manager-3F","()",""],["is_me?","ApplicationHelper","classes/ApplicationHelper.html#method-i-is_me-3F","(user = @selected_user, options = {})",""],["is_mobile_app?","Ambidextrous","classes/Ambidextrous.html#method-i-is_mobile_app-3F","()",""],["is_new_project?","Project","classes/Project.html#method-i-is_new_project-3F","()",""],["is_not_me?","ApplicationHelper","classes/ApplicationHelper.html#method-i-is_not_me-3F","(user = @selected_user)",""],["is_present?","ListedTaxon","classes/ListedTaxon.html#method-i-is_present-3F","()",""],["is_sciname?","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-is_sciname-3F","()",""],["is_sciname?","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-is_sciname-3F","()",""],["is_site_admin?","ApplicationHelper","classes/ApplicationHelper.html#method-i-is_site_admin-3F","()",""],["is_site_admin_of?","User","classes/User.html#method-i-is_site_admin_of-3F","( site )",""],["is_url?","Picasa","classes/Picasa.html#method-c-is_url-3F","(path)","<p>A simple test used to determine if a given resource id is it&#39;s full identifier url. This is not intended …\n"],["iucn_name","ConservationStatus","classes/ConservationStatus.html#method-i-iucn_name","()",""],["iucn_relationship_must_be_an_accepted_value","TaxonRange","classes/TaxonRange.html#method-i-iucn_relationship_must_be_an_accepted_value","()",""],["iucn_relationship_text","TaxonRangesHelper","classes/TaxonRangesHelper.html#method-i-iucn_relationship_text","( taxon_range_iucn_relationship )",""],["iucn_status","ConservationStatus","classes/ConservationStatus.html#method-i-iucn_status","()",""],["iucn_status_code","ConservationStatus","classes/ConservationStatus.html#method-i-iucn_status_code","()",""],["iucn_status_select_options","ConservationStatusesHelper","classes/ConservationStatusesHelper.html#method-i-iucn_status_select_options","()",""],["jit_taxon_node","TaxaHelper","classes/TaxaHelper.html#method-i-jit_taxon_node","(taxon, options = {})",""],["jit_taxon_tree_with_taxon","TaxaHelper","classes/TaxaHelper.html#method-i-jit_taxon_tree_with_taxon","(taxon)",""],["job_can_use_replica","Object","classes/Object.html#method-i-job_can_use_replica","( job )","<p>only allow certain jobs to query replicas\n"],["join","ProjectsController","classes/ProjectsController.html#method-i-join","()",""],["join_test","UsersController","classes/UsersController.html#method-i-join_test","()",""],["json_archive","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-json_archive","()",""],["json_escape","ApplicationHelper","classes/ApplicationHelper.html#method-i-json_escape","(s)","<p>jfire.io/blog/2012/04/30/how-to-securely-bootstrap-json-in-a-rails-view/\n"],["json_request?","ApplicationController","classes/ApplicationController.html#method-i-json_request-3F","()",""],["json_to_flickraw","FlickrCache","classes/FlickrCache.html#method-c-json_to_flickraw","( json )",""],["keep_old_taxon_id","Observation","classes/Observation.html#method-i-keep_old_taxon_id","()","<p>Preserve the old taxon id if the taxon has changed so we know to update that taxon in the user&#39;s …\n"],["kill_remember_cookie!","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-kill_remember_cookie-21","()",""],["kingdom","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-kingdom","()",""],["kingdom","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-kingdom","()",""],["kml_url","Place","classes/Place.html#method-i-kml_url","()",""],["kml_url","TaxonRange","classes/TaxonRange.html#method-i-kml_url","()",""],["known_non_spammer?","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-known_non_spammer-3F","()",""],["known_spam?","ActiveRecord::Base","classes/ActiveRecord/Base.html#method-i-known_spam-3F","()","<p>it would be nice to use flagged_as_spam? directly but GuideTaxon is a weird case of something that is …\n"],["label","ControlledTerm","classes/ControlledTerm.html#method-i-label","(options = { })",""],["language","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-language","()",""],["language_for_locale","TaxonName","classes/TaxonName.html#method-c-language_for_locale","( locale = nil )",""],["large_url","GuideRange","classes/GuideRange.html#method-i-large_url","()",""],["large_url","Photo","classes/Photo.html#method-i-large_url","()",""],["lat","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-lat","()",""],["lat","RubyPicasa::Photo::Point","classes/RubyPicasa/Photo/Point.html#method-i-lat","()",""],["lat_lon_in_place_guess?","Observation","classes/Observation.html#method-i-lat_lon_in_place_guess-3F","()",""],["leaderboard","UsersController","classes/UsersController.html#method-i-leaderboard","()",""],["leading_name","Taxon","classes/Taxon.html#method-i-leading_name","( options = {} )",""],["leaf_taxa_count","YearStatistic","classes/YearStatistic.html#method-c-leaf_taxa_count","( year, options = {} )",""],["leaflet_js","ApplicationHelper","classes/ApplicationHelper.html#method-i-leaflet_js","(options = {})",""],["leave","ProjectsController","classes/ProjectsController.html#method-i-leave","()",""],["leave_test","UsersController","classes/UsersController.html#method-i-leave_test","()",""],["license_code","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-license_code","()",""],["license_code=","Observation","classes/Observation.html#method-i-license_code-3D","( license_code )",""],["license_code=","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-license_code-3D","( license_code )",""],["license_code_for_number","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-license_code_for_number","(number)",""],["license_name","ApplicationHelper","classes/ApplicationHelper.html#method-i-license_name","( license )",""],["license_name","Observation","classes/Observation.html#method-i-license_name","()","\n<pre><code># MASS_ASSIGNABLE_ATTRIBUTES.each do |a|\n#   self.send(&quot;#{a}=&quot;, attributes.delete(a.to_s)) if attributes.has_key?(a.to_s) ...\n</code></pre>\n"],["license_name","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-license_name","()",""],["license_name_for_code","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-license_name_for_code","( code )",""],["license_number_for_code","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-license_number_for_code","(code)",""],["license_short","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-license_short","()",""],["license_url","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-license_url","()",""],["license_url_for_code","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-license_url_for_code","( code )",""],["license_url_for_number","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-license_url_for_number","( number )",""],["licensed_if_no_user","Photo","classes/Photo.html#method-i-licensed_if_no_user","()",""],["licensed_if_no_user","Sound","classes/Sound.html#method-i-licensed_if_no_user","()",""],["life_stage","ControlledTerm","classes/ControlledTerm.html#method-c-life_stage","()",""],["lifelist_by_login","ObservationsController","classes/ObservationsController.html#method-i-lifelist_by_login","()",""],["limit_page_param_for_search","ApplicationController","classes/ApplicationController.html#method-i-limit_page_param_for_search","()","<p>Formerly used to address that ThinkingSphinx returns a maximum of 50 pages. Now kept to keep the logic …\n"],["limited_per_page","ApplicationController","classes/ApplicationController.html#method-i-limited_per_page","()",""],["link","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-link","(rel)","<p>Return the link object with a matching rel attribute value. <code>rel</code> can be either a fully matching string …\n"],["link_to","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to","(*args, &block)",""],["link_to_dialog","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_dialog","(title, options = {}, &block)",""],["link_to_function","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_function","(name, function, html_options = {})","<p>TODO: This is removed in Rails 4, but we use it hundrends of times so I recurrected it. Ideally we&#39;d …\n"],["link_to_taxon","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_taxon","(taxon, options = {})",""],["link_to_tip","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_tip","(title, options = {}, &block)",""],["link_to_toggle","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_toggle","(link_text, target_selector, options = {})",""],["link_to_toggle_box","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_toggle_box","(txt, options = {}, &block)",""],["link_to_toggle_menu","ApplicationHelper","classes/ApplicationHelper.html#method-i-link_to_toggle_menu","(link_text, options = {}, &block)",""],["link_to_user","UsersHelper","classes/UsersHelper.html#method-i-link_to_user","(user, options = { missing: t(:deleted_user) }, &block)","<p>Link to user&#39;s page (&#39;users/1&#39;)\n<p>By default, their login is used as link text and link title …\n"],["linker_for","DataPartnerLinkers","classes/DataPartnerLinkers.html#method-c-linker_for","( data_partner, options = {} )",""],["links","TaxaController","classes/TaxaController.html#method-i-links","()",""],["list","ProjectsController","classes/ProjectsController.html#method-i-list","()",""],["list_observed_and_total","Project","classes/Project.html#method-i-list_observed_and_total","()",""],["list_rules_pass","ListedTaxon","classes/ListedTaxon.html#method-i-list_rules_pass","()",""],["listed_taxa_editable_by?","CheckList","classes/CheckList.html#method-i-listed_taxa_editable_by-3F","(user)",""],["listed_taxa_editable_by?","List","classes/List.html#method-i-listed_taxa_editable_by-3F","(user)",""],["listed_taxa_editable_by?","ProjectList","classes/ProjectList.html#method-i-listed_taxa_editable_by-3F","(user)",""],["lng","RubyPicasa::Photo::Point","classes/RubyPicasa/Photo/Point.html#method-i-lng","()",""],["load","CompressedYAMLColumn","classes/CompressedYAMLColumn.html#method-c-load","( compressed_yaml )",""],["load","SiteConfig","classes/SiteConfig.html#method-c-load","()",""],["load_additional_activity_updates","UpdateAction","classes/UpdateAction.html#method-c-load_additional_activity_updates","(updates, user_id)",""],["load_geojson_file","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-load_geojson_file","( geojson_path, options = {} )",""],["load_record","ApplicationController","classes/ApplicationController.html#method-i-load_record","(options = {})",""],["load_record","RelationshipsController","classes/RelationshipsController.html#method-i-load_record","( options = {} )",""],["load_registration_form_data","ApplicationController","classes/ApplicationController.html#method-i-load_registration_form_data","()",""],["load_shapefile","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-load_shapefile","( shp_path, options = {} )",""],["load_test_taxa","Object","classes/Object.html#method-i-load_test_taxa","()",""],["load_user","LifelistsController","classes/LifelistsController.html#method-i-load_user","()",""],["load_user_by_login","ApplicationController","classes/ApplicationController.html#method-i-load_user_by_login","()",""],["loading","ApplicationHelper","classes/ApplicationHelper.html#method-i-loading","(content = nil, options = {})",""],["local_photo_fields","PhotosController","classes/PhotosController.html#method-i-local_photo_fields","()",""],["local_photo_from_remote_photo","Photo","classes/Photo.html#method-c-local_photo_from_remote_photo","(remote_photo)","<p>used in the ObservationsController to create an un-saved LocalPhoto from an unsaved remote photo and …\n"],["local_sound_fields","SoundsController","classes/SoundsController.html#method-i-local_sound_fields","()",""],["locale_for_lexicon","TaxonName","classes/TaxonName.html#method-i-locale_for_lexicon","()",""],["locales","TranslationsController","classes/TranslationsController.html#method-i-locales","()",""],["locality","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-locality","()",""],["localizable_lexicon","TaxonName","classes/TaxonName.html#method-i-localizable_lexicon","()",""],["localizable_lexicon","TaxonName","classes/TaxonName.html#method-c-localizable_lexicon","( lexicon )",""],["localized_name","Place","classes/Place.html#method-i-localized_name","()",""],["log","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-log","( msg )",""],["log_create","ListedTaxon","classes/ListedTaxon.html#method-i-log_create","()",""],["log_create_if_taxon_id_changed","ListedTaxon","classes/ListedTaxon.html#method-i-log_create_if_taxon_id_changed","()",""],["log_destroy","ListedTaxon","classes/ListedTaxon.html#method-i-log_destroy","()",""],["log_timer","ApplicationController","classes/ApplicationController.html#method-i-log_timer","()",""],["logged_in?","Ambidextrous","classes/Ambidextrous.html#method-i-logged_in-3F","()",""],["logged_in?","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-logged_in-3F","()","<p>Returns true or false if the user is logged in. Preloads @current_user with the user model if they&#39;re …\n"],["logger","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-logger","()",""],["logger","DataPartnerLinkers::DataPartnerLinker","classes/DataPartnerLinkers/DataPartnerLinker.html#method-i-logger","()",""],["logger","ModelAdapter","classes/ModelAdapter.html#method-i-logger","()","<p>Fetch the logger of the adaptee so adapters can access the Rails logger\n"],["logger","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-logger","()",""],["login=","User","classes/User.html#method-i-login-3D","(value)",""],["login_as","AdminController","classes/AdminController.html#method-i-login_as","()",""],["login_as","AuthenticatedTestHelper","classes/AuthenticatedTestHelper.html#method-i-login_as","(user)","<p>Sets the current user in the session from the user fixtures.\n"],["login_featured_observations","Site","classes/Site.html#method-i-login_featured_observations","()",""],["login_from_basic_auth","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-login_from_basic_auth","()","<p>Called from #current_user.  Now, attempt to login by basic authentication information.\n"],["login_from_cookie","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-login_from_cookie","()","<p>Called from #current_user.  Finaly, attempt to login by an expiring token in the cookie. for the paranoid: …\n"],["login_from_session","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-login_from_session","()","<p>Called from #current_user.  First attempt to login by the user id stored in the session.\n"],["login_required","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-login_required","()","<p>Filter method to enforce a login requirement.\n<p>To require logins for all actions, use this in your controllers: …\n"],["logout_keeping_session!","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-logout_keeping_session-21","()","<p>This is ususally what you want; resetting the session willy-nilly wreaks havoc with forgery protection, …\n"],["logout_killing_session!","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-logout_killing_session-21","()","<p>The session should only be reset at the tail end of a form POST – otherwise the request forgery protection …\n"],["logstash_catchall","ApplicationController","classes/ApplicationController.html#method-i-logstash_catchall","()",""],["long","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-long","()",""],["lookup_taxa_for_obs_batch","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-c-lookup_taxa_for_obs_batch","( observations )","<p>given an array of observations, return a hash containing name and ancestry information about the observations&#39; …\n"],["lookup_upload","ComputerVisionDemoUploadsController","classes/ComputerVisionDemoUploadsController.html#method-i-lookup_upload","()",""],["lowercase_equivalent_model_name_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-lowercase_equivalent_model_name_for","( klass )",""],["lsid","UBioService","classes/UBioService.html#method-i-lsid","(params)","<p>Fetch an RDF response from uBio\n<p>This isn&#39;t quite in keeping with the thin wrapper approach of this …\n"],["machine_tag_pieces","ApplicationHelper","classes/ApplicationHelper.html#method-i-machine_tag_pieces","(tag)",""],["make","Paperclip::MetadataFilter","classes/Paperclip/MetadataFilter.html#method-i-make","()",""],["make_api_all_taxon_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_api_all_taxon_data","()",""],["make_archive","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_archive","( *args )",""],["make_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_data","()",""],["make_descriptor","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_descriptor","()",""],["make_eol_media_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_eol_media_data","()",""],["make_metadata","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_metadata","()",""],["make_observation_fields_file","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_observation_fields_file","()",""],["make_occurrence_file","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_occurrence_file","()",""],["make_primary_if_no_primary_exists","ListedTaxon","classes/ListedTaxon.html#method-i-make_primary_if_no_primary_exists","()",""],["make_project_observations_file","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_project_observations_file","()",""],["make_simple_multimedia_file","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_simple_multimedia_file","()",""],["make_taxon_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_taxon_data","()",""],["make_user_file","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_user_file","()",""],["make_vernacular_names_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-make_vernacular_names_data","()",""],["managers","Project","classes/Project.html#method-i-managers","()",""],["map","ObservationsController","classes/ObservationsController.html#method-i-map","()",""],["map","TaxaController","classes/TaxaController.html#method-i-map","()",""],["map_layers","TaxaController","classes/TaxaController.html#method-i-map_layers","()",""],["map_params_for_node_api","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-map_params_for_node_api","(params)","<p>currently only used when a search included new-style projects this method maps params hash that Observation.params_to_elastic_query …\n"],["map_zoom_for_place","PlacesHelper","classes/PlacesHelper.html#method-i-map_zoom_for_place","(place, width, height)","<p>Returns GMaps zoom level for a place given map dimensions in pixels\n"],["mapped_inactive_taxa","TaxonSchemesController","classes/TaxonSchemesController.html#method-i-mapped_inactive_taxa","()",""],["mark_active_atlases_with_out_of_range_observations","Atlas","classes/Atlas.html#method-c-mark_active_atlases_with_out_of_range_observations","()",""],["mark_as_updated","Observation","classes/Observation.html#method-i-mark_as_updated","()","<p>this method will set the updated_at column on this observation to the current time, and re-index only …\n"],["mark_external_taxa_for_destruction","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-mark_external_taxa_for_destruction","()",""],["mark_non_comprehensive_listed_taxa_as_absent","CheckList","classes/CheckList.html#method-i-mark_non_comprehensive_listed_taxa_as_absent","()","<p>not sure why I originally added this.  Doesn&#39;t make sense for taxa on non-comprehensive list  to …\n"],["mark_observations_as_updated","LocalPhoto","classes/LocalPhoto.html#method-i-mark_observations_as_updated","()",""],["markdown","ApplicationHelper","classes/ApplicationHelper.html#method-i-markdown","( text )",""],["match_descendants","Taxon","classes/Taxon.html#method-i-match_descendants","( taxon_hash )",""],["match_descendants_of_id","Taxon","classes/Taxon.html#method-c-match_descendants_of_id","( id, taxon_hash )","<p>Static ##################################################################\n"],["matches?","ClassMatchers::BeA","classes/ClassMatchers/BeA.html#method-i-matches-3F","(target)",""],["matches?","ClassMatchers::BehaveLikeA","classes/ClassMatchers/BehaveLikeA.html#method-i-matches-3F","(target)",""],["matching_taxon_ids","Observation","classes/Observation.html#method-c-matching_taxon_ids","( search_term )",""],["max_attempts","BulkObservationFile","classes/BulkObservationFile.html#method-i-max_attempts","()",""],["max_geoprivacy","Taxon","classes/Taxon.html#method-c-max_geoprivacy","( taxon_ids, options = {} )",""],["max_obs_distances_for_user","YearStatistic","classes/YearStatistic.html#method-i-max_obs_distances_for_user","( year, user )","<p>Maximum distance in meters between obs created by a single user for each month of the year. Calculates …\n"],["media_item","GooglePhotosApi","classes/GooglePhotosApi.html#method-i-media_item","( id )",""],["media_items","GooglePhotosApi","classes/GooglePhotosApi.html#method-i-media_items","( options = {} )",""],["medium_url","GuideRange","classes/GuideRange.html#method-i-medium_url","()",""],["medium_url","Photo","classes/Photo.html#method-i-medium_url","()",""],["medium_user_icon_url","User","classes/User.html#method-i-medium_user_icon_url","()",""],["member_of?","ApplicationHelper","classes/ApplicationHelper.html#method-i-member_of-3F","(project)",""],["members","ProjectsController","classes/ProjectsController.html#method-i-members","()",""],["mentioned_users","Comment","classes/Comment.html#method-i-mentioned_users","()",""],["mentioned_users","Identification","classes/Identification.html#method-i-mentioned_users","()",""],["mentioned_users","Observation","classes/Observation.html#method-i-mentioned_users","()",""],["mentioned_users","Post","classes/Post.html#method-i-mentioned_users","()",""],["mentioned_users","TaxonChange","classes/TaxonChange.html#method-i-mentioned_users","()",""],["merge","ListedTaxon","classes/ListedTaxon.html#method-i-merge","(reject)",""],["merge","Observation","classes/Observation.html#method-i-merge","(reject, options = {})",""],["merge","ObservationField","classes/ObservationField.html#method-i-merge","(reject, options = {})",""],["merge","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-merge","()",""],["merge","Place","classes/Place.html#method-i-merge","(mergee, options = {})",""],["merge","PlacesController","classes/PlacesController.html#method-i-merge","()",""],["merge","TaxaController","classes/TaxaController.html#method-i-merge","()",""],["merge","Taxon","classes/Taxon.html#method-i-merge","( reject )",""],["merge","User","classes/User.html#method-i-merge","(reject)",""],["merge","UsersController","classes/UsersController.html#method-i-merge","()",""],["merge_cleanup","User","classes/User.html#method-c-merge_cleanup","( user_id )",""],["merge_duplicates","ConservationStatus","classes/ConservationStatus.html#method-c-merge_duplicates","( options = {} )",""],["merge_duplicates","ListedTaxon","classes/ListedTaxon.html#method-c-merge_duplicates","(options = {})",""],["merge_duplicates","ProjectUser","classes/ProjectUser.html#method-c-merge_duplicates","( options = {} )","<p>This will remove all duplicates by grouping on project_id and user_id. Probably only useful when it gets …\n"],["merge_field","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-merge_field","()",""],["merge_future_duplicates","Friendship","classes/Friendship.html#method-c-merge_future_duplicates","( reject, keeper )",""],["merge_future_duplicates","Identification","classes/Identification.html#method-c-merge_future_duplicates","( reject, keeper )",""],["merge_future_duplicates","ObservationReview","classes/ObservationReview.html#method-c-merge_future_duplicates","( reject, keeper )",""],["merge_future_duplicates","ObservationsPlace","classes/ObservationsPlace.html#method-c-merge_future_duplicates","( reject, keeper )",""],["merge_future_duplicates","ProjectUser","classes/ProjectUser.html#method-c-merge_future_duplicates","( reject, keeper )",""],["merge_taxa","TaxaHelper","classes/TaxaHelper.html#method-i-merge_taxa","(taxa)","<p>Take two taxa that seem identical and chose one, based mostly on the  number of child taxa.  Returns …\n"],["mergeable_by?","Taxon","classes/Taxon.html#method-i-mergeable_by-3F","( user, reject )",""],["metadata","Photo","classes/Photo.html#method-i-metadata","()",""],["method_missing","CatalogueOfLife","classes/CatalogueOfLife.html#method-i-method_missing","(method, *args)",""],["method_missing","EolService","classes/EolService.html#method-i-method_missing","(method, *args)",""],["method_missing","EolService","classes/EolService.html#method-c-method_missing","(method, *args)",""],["method_missing","FakeView","classes/FakeView.html#method-c-method_missing","( method, *args )",""],["method_missing","FakeView","classes/FakeView.html#method-i-method_missing","( method, *args )",""],["method_missing","GuidePhoto","classes/GuidePhoto.html#method-i-method_missing","(method, *args, &block)",""],["method_missing","MetaService","classes/MetaService.html#method-i-method_missing","(method, *args)",""],["method_missing","ModelAdapter","classes/ModelAdapter.html#method-i-method_missing","(method, *args)",""],["method_missing","NewZealandOrganismsRegister","classes/NewZealandOrganismsRegister.html#method-i-method_missing","(method, *args)",""],["method_missing","Observation","classes/Observation.html#method-i-method_missing","(method, *args, &block)",""],["method_missing","Site","classes/Site.html#method-i-method_missing","( method, *args, &block )",""],["method_missing","SiteConfig","classes/SiteConfig.html#method-c-method_missing","(method, *args)","<p>allow values to be fetches with dynamic methods\n\n<pre><code>e.g. SiteConfig.rest_auth.REST_AUTH_SITE_KEY\n</code></pre>\n"],["method_missing","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-c-method_missing","(method, *args)",""],["metric_can_be_assessed","QualityMetric","classes/QualityMetric.html#method-i-metric_can_be_assessed","()",""],["mime_types_for_filename","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-i-mime_types_for_filename","()",""],["mo_name_observation_field","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_name_observation_field","()",""],["mo_owner_name_observation_field","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_owner_name_observation_field","()",""],["mo_url_from_result","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_url_from_result","( result )",""],["mo_url_observation_field","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_url_observation_field","()",""],["mo_user_id","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_user_id","( for_api_key = nil )",""],["mo_user_name","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-mo_user_name","( _for_api_key = nil )",""],["mobile?","Observation","classes/Observation.html#method-i-mobile-3F","()",""],["mock_user","AuthenticatedTestHelper","classes/AuthenticatedTestHelper.html#method-i-mock_user","()","<p>rspec\n"],["modal_image","ApplicationHelper","classes/ApplicationHelper.html#method-i-modal_image","(photo, options = {})",""],["moderated_with","User","classes/User.html#method-i-moderated_with","( moderator_action )",""],["moderation","UsersController","classes/UsersController.html#method-i-moderation","()",""],["modified","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-modified","()",""],["modified","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-modified","()",""],["modified","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-modified","()",""],["modified","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-modified","()",""],["modified","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-modified","()",""],["modified","DarwinCore::User::InstanceMethods","classes/DarwinCore/User/InstanceMethods.html#method-i-modified","()",""],["modified?","GuideSection","classes/GuideSection.html#method-i-modified-3F","()",""],["moimport","ObservationsController","classes/ObservationsController.html#method-i-moimport","()",""],["moimport_finished","Emailer","classes/Emailer.html#method-i-moimport_finished","( mot, errors = {}, warnings = {} )",""],["month_graph","ApplicationHelper","classes/ApplicationHelper.html#method-i-month_graph","(counts, options = {})",""],["monthly_supporters","DonateController","classes/DonateController.html#method-i-monthly_supporters","()",""],["most_identifications","UsersController","classes/UsersController.html#method-i-most_identifications","(options = {})",""],["most_observations","UsersController","classes/UsersController.html#method-i-most_observations","(options = {})",""],["most_species","UsersController","classes/UsersController.html#method-i-most_species","(options = {})",""],["move_input_children_to_output","TaxonChange","classes/TaxonChange.html#method-i-move_input_children_to_output","( target_input_taxon )",""],["move_to_child_of","Taxon","classes/Taxon.html#method-i-move_to_child_of","( taxon )",""],["multiple_primary_listed_taxa?","ListedTaxon","classes/ListedTaxon.html#method-i-multiple_primary_listed_taxa-3F","()",""],["multiple_values","Annotation","classes/Annotation.html#method-i-multiple_values","()",""],["munge_observed_on_with_chronic","Observation","classes/Observation.html#method-i-munge_observed_on_with_chronic","( debug = false )","<p>Set all the time fields based on the contents of observed_on_string\n"],["must_be_in_the_past","Observation","classes/Observation.html#method-i-must_be_in_the_past","()","\n<pre><code>Validations #########################################################\n</code></pre>\n<p>Make sure the observation is not …\n"],["must_be_the_only_active_export","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-must_be_the_only_active_export","()",""],["must_be_unique_to_taxon_framework","ExternalTaxon","classes/ExternalTaxon.html#method-i-must_be_unique_to_taxon_framework","()",""],["must_end_in_the_future","Goal","classes/Goal.html#method-i-must_end_in_the_future","()",""],["must_have_query","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-must_have_query","()",""],["must_have_reasonable_number_of_rows","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-must_have_reasonable_number_of_rows","()",""],["must_have_some_guide_taxa_to_publish","Guide","classes/Guide.html#method-i-must_have_some_guide_taxa_to_publish","()",""],["must_not_be_a_range","Observation","classes/Observation.html#method-i-must_not_be_a_range","()","<p>Make sure the observation resolves to a single day.  Right now we don&#39;t store ambiguity…\n"],["must_not_be_on_null_island","Observation","classes/Observation.html#method-i-must_not_be_on_null_island","()",""],["mute","UsersController","classes/UsersController.html#method-i-mute","()",""],["name","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-name","()",""],["name","TaxonDescribers::Inaturalist","classes/TaxonDescribers/Inaturalist.html#method-i-name","()",""],["name_providers","Ratatosk","classes/Ratatosk.html#method-c-name_providers","()",""],["name_with_rank","Taxon","classes/Taxon.html#method-i-name_with_rank","()",""],["native?","ListedTaxon","classes/ListedTaxon.html#method-i-native-3F","()",""],["native_url_for_photo","ApplicationHelper","classes/ApplicationHelper.html#method-i-native_url_for_photo","(photo)",""],["nature_serve_status_name","ConservationStatus","classes/ConservationStatus.html#method-i-nature_serve_status_name","()",""],["ne_latlon","Observation","classes/Observation.html#method-i-ne_latlon","()",""],["near_place","Observation","classes/Observation.html#method-c-near_place","(place)",""],["needs_id?","Observation","classes/Observation.html#method-i-needs_id-3F","()",""],["needs_id_downvotes_count","Observation","classes/Observation.html#method-i-needs_id_downvotes_count","()",""],["needs_id_upvotes_count","Observation","classes/Observation.html#method-i-needs_id_upvotes_count","()",""],["needs_id_vote_score","Observation","classes/Observation.html#method-i-needs_id_vote_score","()",""],["negative_failure_message","ClassMatchers::BeA","classes/ClassMatchers/BeA.html#method-i-negative_failure_message","()",""],["negative_failure_message","ClassMatchers::BehaveLikeA","classes/ClassMatchers/BehaveLikeA.html#method-i-negative_failure_message","()",""],["nested_place_list","PlacesHelper","classes/PlacesHelper.html#method-i-nested_place_list","(*args, &block)",""],["network","SitesController","classes/SitesController.html#method-i-network","()",""],["new","AnnouncementsController","classes/AnnouncementsController.html#method-i-new","()",""],["new","AssessmentsController","classes/AssessmentsController.html#method-i-new","()",""],["new","AtlasesController","classes/AtlasesController.html#method-i-new","()",""],["new","BulkObservationFile","classes/BulkObservationFile.html#method-c-new","( observation_file, user_id, options = {} )",""],["new","BulkObservationFile::BulkObservationException","classes/BulkObservationFile/BulkObservationException.html#method-c-new","( reason, row_count = nil, errors = [], tag = nil )",""],["new","CatalogueOfLife","classes/CatalogueOfLife.html#method-c-new","(timeout=5, options = {})",""],["new","CheckListsController","classes/CheckListsController.html#method-i-new","()",""],["new","ClassMatchers::BeA","classes/ClassMatchers/BeA.html#method-c-new","(expected)",""],["new","ClassMatchers::BehaveLikeA","classes/ClassMatchers/BehaveLikeA.html#method-c-new","(expected)",""],["new","CloudfrontACLUpdater","classes/CloudfrontACLUpdater.html#method-c-new","()",""],["new","CloudfrontLogParser","classes/CloudfrontLogParser.html#method-c-new","()",""],["new","CommentsController","classes/CommentsController.html#method-i-new","()",""],["new","CompleteSetsController","classes/CompleteSetsController.html#method-i-new","()",""],["new","ConabioService","classes/ConabioService.html#method-c-new","(options = {})",""],["new","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-new","()",""],["new","CuratorApplicationsController","classes/CuratorApplicationsController.html#method-i-new","()",""],["new","CustomProjectsController","classes/CustomProjectsController.html#method-i-new","()","<p>GET /custom_projects/new GET /custom_projects/new.xml\n"],["new","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-c-new","(opts = {})",""],["new","DarwinCore::Descriptor","classes/DarwinCore/Descriptor.html#method-c-new","( options = {} )",""],["new","DarwinCore::Metadata","classes/DarwinCore/Metadata.html#method-c-new","( options = {} )",""],["new","DataPartnerLinkers::DataPartnerLinker","classes/DataPartnerLinkers/DataPartnerLinker.html#method-c-new","( data_partner, options = {} )",""],["new","DataPartnerLinkers::GBIF","classes/DataPartnerLinkers/GBIF.html#method-c-new","( data_partner, options = {} )",""],["new","DataPartnersController","classes/DataPartnersController.html#method-i-new","()",""],["new","EolService","classes/EolService.html#method-c-new","(options = {})",""],["new","ExifMetadata","classes/ExifMetadata.html#method-c-new","( path: nil, type: nil )","<p>Initializes a new ExifMetada instance @param [String] path Path to file to extract exif tags from  @param …\n"],["new","FakeView","classes/FakeView.html#method-c-new","( options = {} )",""],["new","FlagsController","classes/FlagsController.html#method-i-new","()",""],["new","FlowTasksController","classes/FlowTasksController.html#method-i-new","()",""],["new","GbifService","classes/GbifService.html#method-c-new","(options = {})",""],["new","GooglePhotosApi","classes/GooglePhotosApi.html#method-c-new","( token, options = {} )",""],["new","GuidePhotosController","classes/GuidePhotosController.html#method-i-new","()","<p>GET /guide_photos/new GET /guide_photos/new.json\n"],["new","GuideRangesController","classes/GuideRangesController.html#method-i-new","()","<p>GET /guide_ranges/new GET /guide_ranges/new.json\n"],["new","GuideSectionsController","classes/GuideSectionsController.html#method-i-new","()","<p>GET /guide_sections/new GET /guide_sections/new.json\n"],["new","GuidesController","classes/GuidesController.html#method-i-new","()","<p>GET /guides/new GET /guides/new.json\n"],["new","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-c-new","(filename)",""],["new","MessagesController","classes/MessagesController.html#method-i-new","()",""],["new","MetaService","classes/MetaService.html#method-c-new","(options = {})",""],["new","NewZealandOrganismsRegister","classes/NewZealandOrganismsRegister.html#method-c-new","(timeout=5)",""],["new","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-new","()",""],["new","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-new","()","<p>GET /observation_fields/new GET /observation_fields/new.xml\n"],["new","ObservationsController","classes/ObservationsController.html#method-i-new","()","<p>GET /observations/new GET /observations/new.xml An attempt at creating a simple new page for batch add …\n"],["new","OldPreferences","classes/OldPreferences.html#method-c-new","()",""],["new","Paperclip::MetadataFilter","classes/Paperclip/MetadataFilter.html#method-c-new","(file, options = {}, attachment = nil)",""],["new","Picasa","classes/Picasa.html#method-c-new","(token)",""],["new","PlacesController","classes/PlacesController.html#method-i-new","()",""],["new","PostsController","classes/PostsController.html#method-i-new","()",""],["new","ProjectAssetsController","classes/ProjectAssetsController.html#method-i-new","()","<p>GET /project_assets/new GET /project_assets/new.xml\n"],["new","ProjectsController","classes/ProjectsController.html#method-i-new","()",""],["new","Ratatosk::NameProviders::ColNameProvider","classes/Ratatosk/NameProviders/ColNameProvider.html#method-c-new","()",""],["new","Ratatosk::NameProviders::ColTaxonAdapter","classes/Ratatosk/NameProviders/ColTaxonAdapter.html#method-c-new","(hxml, params = {})","<p>Initialize with an Hpricot object of a single CoL XML response\n"],["new","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-c-new","(hxml, params = {})","<p>Initialize with an Hpricot object of a single CoL XML response\n"],["new","Ratatosk::NameProviders::NZORNameProvider","classes/Ratatosk/NameProviders/NZORNameProvider.html#method-c-new","()",""],["new","Ratatosk::NameProviders::NZORTaxonAdapter","classes/Ratatosk/NameProviders/NZORTaxonAdapter.html#method-c-new","(hxml, params = {})","<p>Initialize with a Nokogiri object of a single CoL XML response\n"],["new","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-c-new","(hxml, params = {})","<p>Initialize with a Nokogiri object of a single CoL XML response\n"],["new","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-c-new","(api_key=nil)",""],["new","Ratatosk::NameProviders::UBioTaxonAdapter","classes/Ratatosk/NameProviders/UBioTaxonAdapter.html#method-c-new","(hxml, params = {})",""],["new","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-c-new","(hxml, params = {})",""],["new","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-c-new","(params = {})","<p>Create a new Ratatosk instance\n<p><p>name_providers &mdash; array of NameProvider instances to use as providers.  Can …\n\n\n"],["new","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-new","()","<p>GET /lists/new\n"],["new","SiteDataExporter","classes/SiteDataExporter.html#method-c-new","( site, options = {} )",""],["new","SitesController","classes/SitesController.html#method-i-new","()","<p>GET /sites/new GET /sites/new.json\n"],["new","SourcesController","classes/SourcesController.html#method-i-new","()",""],["new","SphericalMercator","classes/SphericalMercator.html#method-c-new","(levels = 18, tilesize = 256)",""],["new","SubscriptionsController","classes/SubscriptionsController.html#method-i-new","()",""],["new","TaxaController","classes/TaxaController.html#method-i-new","()",""],["new","TaxonChangeTaxaController","classes/TaxonChangeTaxaController.html#method-i-new","()",""],["new","TaxonChangesController","classes/TaxonChangesController.html#method-i-new","()",""],["new","TaxonCuratorsController","classes/TaxonCuratorsController.html#method-i-new","()","<p>def show\n\n<pre><code>respond_with(@taxon_curator)\n</code></pre>\n<p>end\n"],["new","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-c-new","( options = {} )",""],["new","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-c-new","( options = {} )",""],["new","TaxonDescribers::Wikipedia","classes/TaxonDescribers/Wikipedia.html#method-c-new","( options = {} )",""],["new","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-new","()",""],["new","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-new","()",""],["new","TaxonLinksController","classes/TaxonLinksController.html#method-i-new","()",""],["new","TaxonNamesController","classes/TaxonNamesController.html#method-i-new","()",""],["new","TaxonPhotosController","classes/TaxonPhotosController.html#method-i-new","()",""],["new","TaxonRangesController","classes/TaxonRangesController.html#method-i-new","()",""],["new","TaxonSchemeTaxaController","classes/TaxonSchemeTaxaController.html#method-i-new","()",""],["new","TripsController","classes/TripsController.html#method-i-new","()",""],["new","UBioService","classes/UBioService.html#method-c-new","(key_code, options = {})",""],["new","UserParentsController","classes/UserParentsController.html#method-i-new","()",""],["new","WikimediaCommonsService","classes/WikimediaCommonsService.html#method-c-new","(options = {})",""],["new","WikipediaService","classes/WikipediaService.html#method-c-new","(options = {})",""],["new_batch","ObservationsController","classes/ObservationsController.html#method-i-new_batch","()",""],["new_bulk_csv","ObservationsController","classes/ObservationsController.html#method-i-new_bulk_csv","()",""],["new_from_api_response","EolPhoto","classes/EolPhoto.html#method-c-new_from_api_response","(api_response, options = {})",""],["new_from_api_response","FacebookPhoto","classes/FacebookPhoto.html#method-c-new_from_api_response","(api_response, options = {})",""],["new_from_api_response","FlickrPhoto","classes/FlickrPhoto.html#method-c-new_from_api_response","(api_response, options = {})",""],["new_from_api_response","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-c-new_from_api_response","(api_response, options = {})",""],["new_from_api_response","Photo","classes/Photo.html#method-c-new_from_api_response","(api_response, options = {})","<p>Create a new Photo object from an API response.  Should be implemented by  descendents\n"],["new_from_api_response","PicasaPhoto","classes/PicasaPhoto.html#method-c-new_from_api_response","(api_response, options = {})","<p>Create a new Photo object from an API response.\n"],["new_from_api_response","SoundcloudSound","classes/SoundcloudSound.html#method-c-new_from_api_response","(response)",""],["new_from_api_response","WikimediaCommonsPhoto","classes/WikimediaCommonsPhoto.html#method-c-new_from_api_response","(api_response, options = {})",""],["new_from_eol_collection_item","GuideTaxon","classes/GuideTaxon.html#method-c-new_from_eol_collection_item","(item, options = {})",""],["new_from_eol_data_object","GuideRange","classes/GuideRange.html#method-c-new_from_eol_data_object","(data_object)",""],["new_from_eol_data_object","GuideSection","classes/GuideSection.html#method-c-new_from_eol_data_object","(data_object)",""],["new_from_flickraw","FlickrPhoto","classes/FlickrPhoto.html#method-c-new_from_flickraw","(fp, options = {})",""],["new_from_list","ObservationsController","classes/ObservationsController.html#method-i-new_from_list","()",""],["new_from_native_sound_id","Sound","classes/Sound.html#method-c-new_from_native_sound_id","(sid, user)",""],["new_from_native_sound_id","SoundcloudSound","classes/SoundcloudSound.html#method-c-new_from_native_sound_id","(sid, user)",""],["new_from_shape","Place","classes/Place.html#method-c-new_from_shape","(shape, options = {})","<p>Make a new Place from a shapefile shape\n"],["new_message","Emailer","classes/Emailer.html#method-i-new_message","( message )",""],["new_messages","MessagesController","classes/MessagesController.html#method-i-new_messages","()",""],["new_observation","BulkObservationFile","classes/BulkObservationFile.html#method-i-new_observation","( row )",""],["new_place_from_census_shape","PlaceSources","classes/PlaceSources.html#method-c-new_place_from_census_shape","(shape, options = {})","<p>We use the state, county, and place census shapefiles, all of which can be obtained from www2.census.gov/cgi-bin/shapefiles/national-files …\n"],["new_place_from_cpad_units_fee","PlaceSources","classes/PlaceSources.html#method-c-new_place_from_cpad_units_fee","(shape, options = {})","<p>CPAD is the California Protected Areas Database, an awesome shapefile of protected parcels from the state …\n"],["new_place_from_esri_world_shape","PlaceSources","classes/PlaceSources.html#method-c-new_place_from_esri_world_shape","(shape, options = {})","<p>ESRI world political boundaries are a pretty commonly used dataset for demos and the like.  You can get …\n"],["new_traditional","ProjectsController","classes/ProjectsController.html#method-i-new_traditional","()",""],["new_updates","UsersController","classes/UsersController.html#method-i-new_updates","()",""],["next","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-next","()","<p>If the results are paginated, retrieve the next page.\n"],["ngz_size","Guide","classes/Guide.html#method-i-ngz_size","()",""],["ngz_url","GuidesHelper","classes/GuidesHelper.html#method-i-ngz_url","( guide )",""],["ngz_work_path","Guide","classes/Guide.html#method-i-ngz_work_path","()",""],["nilify_blanks","ListedTaxon","classes/ListedTaxon.html#method-i-nilify_blanks","()",""],["nilify_operand_if_blank","Rule","classes/Rule.html#method-i-nilify_operand_if_blank","()",""],["nilify_positional_accuracy_if_zero","Observation","classes/Observation.html#method-i-nilify_positional_accuracy_if_zero","()",""],["no_forbidden_lexicons","TaxonName","classes/TaxonName.html#method-i-no_forbidden_lexicons","()",""],["no_other_annotations_if_this_is_blocking","Annotation","classes/Annotation.html#method-i-no_other_annotations_if_this_is_blocking","()",""],["no_other_annotations_of_blocking_values","Annotation","classes/Annotation.html#method-i-no_other_annotations_of_blocking_values","()",""],["no_self_love","Friendship","classes/Friendship.html#method-i-no_self_love","()",""],["node_api_species_count","Project","classes/Project.html#method-i-node_api_species_count","()",""],["norma_oficial_059_status_name","ConservationStatus","classes/ConservationStatus.html#method-i-norma_oficial_059_status_name","()",""],["normalize_friendly_id","Place","classes/Place.html#method-i-normalize_friendly_id","( string )",""],["normalize_friendly_id","Project","classes/Project.html#method-i-normalize_friendly_id","( string )",""],["normalize_geoprivacy","ConservationStatus","classes/ConservationStatus.html#method-i-normalize_geoprivacy","()",""],["normalize_geoprivacy","Observation","classes/Observation.html#method-i-normalize_geoprivacy","()",""],["normalize_lexicon","TaxonName","classes/TaxonName.html#method-c-normalize_lexicon","( lexicon )",""],["normalize_lexicon","TaxonName","classes/TaxonName.html#method-i-normalize_lexicon","()",""],["normalize_license_code","Shared::LicenseModule::ClassMethods","classes/Shared/LicenseModule/ClassMethods.html#method-i-normalize_license_code","( code )",""],["normalize_name","ObservationField","classes/ObservationField.html#method-c-normalize_name","(name, options={})",""],["normalize_name","Taxon","classes/Taxon.html#method-c-normalize_name","( name )",""],["normalize_rank","Taxon","classes/Taxon.html#method-i-normalize_rank","()",""],["normalize_rank","Taxon","classes/Taxon.html#method-c-normalize_rank","( rank )",""],["normalized_name","ObservationField","classes/ObservationField.html#method-i-normalized_name","(options={})",""],["north_america","Place","classes/Place.html#method-c-north_america","()",""],["not_allowed","WikiPagesController","classes/WikiPagesController.html#method-i-not_allowed","()",""],["not_in_taxon?","ProjectObservation","classes/ProjectObservation.html#method-i-not_in_taxon-3F","(taxon = nil)",""],["not_on_a_comprehensive_check_list","ListedTaxon","classes/ListedTaxon.html#method-i-not_on_a_comprehensive_check_list","()",""],["notifies_owner_of","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-notifies_owner_of","(subscribable_association, options = {})","<p>Generates one-time update for the user associated with a related object\n"],["notifies_subscribers_of","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-notifies_subscribers_of","(subscribable_association, options = {})","<p>Tell a model to generate updates for subscribers of an association. For  example, a Comment notifies_subscribers_of …\n"],["notifies_users","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-notifies_users","(method, options = {})","<p>Generates one-time update for the user returned by the supplied method\n"],["notify_flaggable_on_create","Flag","classes/Flag.html#method-i-notify_flaggable_on_create","()",""],["notify_flaggable_on_destroy","Flag","classes/Flag.html#method-i-notify_flaggable_on_destroy","()",""],["notify_flaggable_on_update","Flag","classes/Flag.html#method-i-notify_flaggable_on_update","()",""],["notify_observer","ProjectObservation","classes/ProjectObservation.html#method-i-notify_observer","(association)",""],["notify_owner_of","HasSubscribers::InstanceMethods","classes/HasSubscribers/InstanceMethods.html#method-i-notify_owner_of","(association)",""],["notify_resource","ModeratorAction","classes/ModeratorAction.html#method-i-notify_resource","()",""],["notify_staff_about_blocked_user","Emailer","classes/Emailer.html#method-i-notify_staff_about_blocked_user","( user )",""],["notify_staff_about_potential_problem_user","UserBlock","classes/UserBlock.html#method-i-notify_staff_about_potential_problem_user","()",""],["notify_subscribers_of","HasSubscribers::InstanceMethods","classes/HasSubscribers/InstanceMethods.html#method-i-notify_subscribers_of","(subscribable_association)",""],["notify_subscribers_with","HasSubscribers::ClassMethods","classes/HasSubscribers/ClassMethods.html#method-i-notify_subscribers_with","(notifier, subscribable_association)",""],["notify_trusting_members","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-notify_trusting_members","()",""],["notify_trusting_members_about_changes","Project","classes/Project.html#method-c-notify_trusting_members_about_changes","( project )",""],["notify_trusting_members_about_changes_if_rules_changed","Project","classes/Project.html#method-i-notify_trusting_members_about_changes_if_rules_changed","()",""],["notify_trusting_members_about_changes_later","Project","classes/Project.html#method-i-notify_trusting_members_about_changes_later","()",""],["notify_trusting_members_about_changes_unique_hash","Project","classes/Project.html#method-i-notify_trusting_members_about_changes_unique_hash","()",""],["notify_trusting_project_members","PlaceGeometry","classes/PlaceGeometry.html#method-i-notify_trusting_project_members","()",""],["notify_users","HasSubscribers::InstanceMethods","classes/HasSubscribers/InstanceMethods.html#method-i-notify_users","( method )",""],["nps_bioblitz","StatsController","classes/StatsController.html#method-i-nps_bioblitz","()",""],["num2letterID","ApplicationHelper","classes/ApplicationHelper.html#method-i-num2letterID","(num)",""],["numIdentificationAgreements","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-numIdentificationAgreements","()",""],["numIdentificationDisagreements","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-numIdentificationDisagreements","()",""],["num_identifications_by_others","Observation","classes/Observation.html#method-i-num_identifications_by_others","()",""],["obervation_counts_by_quality_grade","YearStatistic","classes/YearStatistic.html#method-c-obervation_counts_by_quality_grade","( year, options = {} )",""],["obs_image_url","Observation","classes/Observation.html#method-i-obs_image_url","()",""],["obs_search_elastic_params","Trip","classes/Trip.html#method-i-obs_search_elastic_params","()",""],["obscure_coordinates","Observation","classes/Observation.html#method-i-obscure_coordinates","()",""],["obscure_place_guess","Observation","classes/Observation.html#method-i-obscure_place_guess","()",""],["observation_counts_by_country","YearStatistic","classes/YearStatistic.html#method-c-observation_counts_by_country","( year, _params = {} )",""],["observation_field_value_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-observation_field_value_for","(ofv)",""],["observation_field_values_attributes=","Observation","classes/Observation.html#method-i-observation_field_values_attributes-3D","(attributes)","<p>Override nested obs field values attributes setter to ensure that field values get added even if existing …\n"],["observation_from_result","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-observation_from_result","( result, options = {} )",""],["observation_id","DarwinCore::User::InstanceMethods","classes/DarwinCore/User/InstanceMethods.html#method-i-observation_id","()",""],["observation_image","ApplicationHelper","classes/ApplicationHelper.html#method-i-observation_image","(observation, options = {})",""],["observation_image_url","ObservationsHelper","classes/ObservationsHelper.html#method-i-observation_image_url","(observation, params = {})",""],["observation_links","ObservationsController","classes/ObservationsController.html#method-i-observation_links","()",""],["observation_photos","TaxaController","classes/TaxaController.html#method-i-observation_photos","()",""],["observation_photos","Taxon","classes/Taxon.html#method-i-observation_photos","( options = {} )",""],["observation_photos_finished_processing","Observation","classes/Observation.html#method-i-observation_photos_finished_processing","()",""],["observation_place_guess","ObservationsHelper","classes/ObservationsHelper.html#method-i-observation_place_guess","(observation, options = {})",""],["observation_weeks","StatsController","classes/StatsController.html#method-i-observation_weeks","()",""],["observation_weeks_json","StatsController","classes/StatsController.html#method-i-observation_weeks_json","()",""],["observations","INatAPIService","classes/INatAPIService.html#method-c-observations","(params={}, options = {})",""],["observations","Trip","classes/Trip.html#method-i-observations","()",""],["observations_count","ObservationField","classes/ObservationField.html#method-i-observations_count","()",""],["observations_count","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-observations_count","()",""],["observations_count_with_descendents","Taxon","classes/Taxon.html#method-i-observations_count_with_descendents","()",""],["observations_export_failed_notification","Emailer","classes/Emailer.html#method-i-observations_export_failed_notification","( flow_task )",""],["observations_export_notification","Emailer","classes/Emailer.html#method-i-observations_export_notification","( flow_task )",""],["observations_for_map_tag_attrs","ApplicationHelper","classes/ApplicationHelper.html#method-i-observations_for_map_tag_attrs","(options)",""],["observations_histogram","YearStatistic","classes/YearStatistic.html#method-c-observations_histogram","( year, options = {} )",""],["observations_histogram_by_created_month","YearStatistic","classes/YearStatistic.html#method-c-observations_histogram_by_created_month","( options = {} )",""],["observations_in_batches","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-observations_in_batches","( params, preloads, start_id, end_id, options = {} )",""],["observations_observers","INatAPIService","classes/INatAPIService.html#method-c-observations_observers","(params={}, options = {})",""],["observations_order_by_options","ObservationsHelper","classes/ObservationsHelper.html#method-i-observations_order_by_options","(order_by = nil)",""],["observations_params","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-observations_params","()",""],["observations_popular_field_values","INatAPIService","classes/INatAPIService.html#method-c-observations_popular_field_values","(params={}, options = {})",""],["observations_species_counts","INatAPIService","classes/INatAPIService.html#method-c-observations_species_counts","(params={}, options = {})",""],["observations_url_params","Project","classes/Project.html#method-i-observations_url_params","(options = {})",""],["observed_after?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_after-3F","(time = nil)",""],["observed_before?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_before-3F","(time = nil)",""],["observed_by_user?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_by_user-3F","(user = nil)",""],["observed_in_bioblitz_time_range?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_in_bioblitz_time_range-3F","()",""],["observed_in_bounding_box_of?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_in_bounding_box_of-3F","(place = nil)",""],["observed_in_place?","ListedTaxon","classes/ListedTaxon.html#method-i-observed_in_place-3F","()",""],["observed_in_place?","ProjectObservation","classes/ProjectObservation.html#method-i-observed_in_place-3F","(place = nil)","<p>Rules ###############################################################\n"],["observed_species_accumulation","YearStatistic","classes/YearStatistic.html#method-c-observed_species_accumulation","( params = {} )",""],["observed_taxa_changes","YearStatistic","classes/YearStatistic.html#method-c-observed_taxa_changes","( year, options = {} )",""],["observed_taxa_count","ProjectsController","classes/ProjectsController.html#method-i-observed_taxa_count","()",""],["observed_taxa_counts","YearStatistic","classes/YearStatistic.html#method-c-observed_taxa_counts","( year, options = {} )",""],["observer_allows_addition?","ProjectObservation","classes/ProjectObservation.html#method-i-observer_allows_addition-3F","()",""],["observer_invited?","ProjectObservation","classes/ProjectObservation.html#method-i-observer_invited-3F","()",""],["observer_owns_photo","ObservationPhoto","classes/ObservationPhoto.html#method-i-observer_owns_photo","()",""],["observer_prefers_fields_by_user","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-observer_prefers_fields_by_user","()",""],["observose_branch?","Taxon","classes/Taxon.html#method-i-observose_branch-3F","()",""],["observose_warning_branch?","Taxon","classes/Taxon.html#method-i-observose_warning_branch-3F","()",""],["occur_in","TaxaController","classes/TaxaController.html#method-i-occur_in","()",""],["occurrenceID","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-occurrenceID","()","<p>rubocop:disable Naming/MethodName\n"],["occurrenceRemarks","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-occurrenceRemarks","()",""],["occurrence_status","ListedTaxon","classes/ListedTaxon.html#method-i-occurrence_status","()",""],["occurrence_status=","ListedTaxon","classes/ListedTaxon.html#method-i-occurrence_status-3D","(status)",""],["occurs_in","Taxon","classes/Taxon.html#method-c-occurs_in","( minx, miny, maxx, maxy, startdate = nil, enddate = nil )","<p>rubocop:disable Metrics/ParameterLists\n"],["odp_s3_bucket_enabled?","LocalPhoto","classes/LocalPhoto.html#method-c-odp_s3_bucket_enabled-3F","()",""],["old_taxon","TaxonSwap","classes/TaxonSwap.html#method-i-old_taxon","()",""],["on_list?","ProjectObservation","classes/ProjectObservation.html#method-i-on_list-3F","()",""],["one_line_observation","ApplicationHelper","classes/ApplicationHelper.html#method-i-one_line_observation","(o, options = {})",""],["one_year_time_span","Project","classes/Project.html#method-i-one_year_time_span","()",""],["only_has_one_input","TaxonSwap","classes/TaxonSwap.html#method-i-only_has_one_input","()",""],["only_inactive_children_if_inactive","Taxon","classes/Taxon.html#method-i-only_inactive_children_if_inactive","()",""],["only_staff_can_unhide","ModeratorAction","classes/ModeratorAction.html#method-i-only_staff_can_unhide","()",""],["only_three_per_user","UserBlock","classes/UserBlock.html#method-i-only_three_per_user","()",""],["open_licensed?","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-open_licensed-3F","()",""],["operand_present","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-operand_present","()",""],["opposite_taxon_from","TaxonSwap","classes/TaxonSwap.html#method-i-opposite_taxon_from","(subject_taxon)",""],["options","FacebookController","classes/FacebookController.html#method-i-options","()","<p>This is the endpoint which allows a user to manager their facebook account settings.  They use this endpoint …\n"],["options","FlickrController","classes/FlickrController.html#method-i-options","()","<p>This is the endpoint which allows a user to manager their flickr account settings.  They use this endpoint …\n"],["options","PicasaController","classes/PicasaController.html#method-i-options","()","<p>Configure Picasa linkage\n"],["orcid","User","classes/User.html#method-i-orcid","()",""],["order","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-order","()",""],["order","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-order","()",""],["original_attribution","GuideSection","classes/GuideSection.html#method-i-original_attribution","()",""],["original_dimensions","Photo","classes/Photo.html#method-i-original_dimensions","()",""],["original_url","GuideRange","classes/GuideRange.html#method-i-original_url","()",""],["original_url","Photo","classes/Photo.html#method-i-original_url","()",""],["original_user_icon_url","User","classes/User.html#method-i-original_user_icon_url","()",""],["orphaned?","Photo","classes/Photo.html#method-i-orphaned-3F","()",""],["orphaned?","Sound","classes/Sound.html#method-i-orphaned-3F","()",""],["orphaned_inactive_taxa","TaxonSchemesController","classes/TaxonSchemesController.html#method-i-orphaned_inactive_taxa","()",""],["other_primary_listed_taxa?","ListedTaxon","classes/ListedTaxon.html#method-i-other_primary_listed_taxa-3F","()",""],["others_identifications","Observation","classes/Observation.html#method-i-others_identifications","()",""],["output_ancestor","TaxonSplit","classes/TaxonSplit.html#method-i-output_ancestor","( options = { })",""],["output_taxa","TaxonChange","classes/TaxonChange.html#method-i-output_taxa","()",""],["output_taxa","TaxonDrop","classes/TaxonDrop.html#method-i-output_taxa","()",""],["output_taxa","TaxonMerge","classes/TaxonMerge.html#method-i-output_taxa","()",""],["output_taxa","TaxonStage","classes/TaxonStage.html#method-i-output_taxa","()",""],["output_taxa","TaxonSwap","classes/TaxonSwap.html#method-i-output_taxa","()",""],["output_taxon","TaxonMerge","classes/TaxonMerge.html#method-i-output_taxon","()",""],["output_taxon","TaxonSwap","classes/TaxonSwap.html#method-i-output_taxon","()",""],["output_taxon_for_record","TaxonChange","classes/TaxonChange.html#method-i-output_taxon_for_record","( record )",""],["output_taxon_for_record","TaxonSplit","classes/TaxonSplit.html#method-i-output_taxon_for_record","( record )",""],["owned_by?","FacebookPhoto","classes/FacebookPhoto.html#method-i-owned_by-3F","(user)",""],["owned_by_spammer?","ActiveRecord::Base","classes/ActiveRecord/Base.html#method-i-owned_by_spammer-3F","()",""],["owned_by_user?","FacebookPhoto","classes/FacebookPhoto.html#method-i-owned_by_user-3F","()",""],["owner","List","classes/List.html#method-i-owner","()","<p>Returns an associate that has observations\n"],["owner","ProjectList","classes/ProjectList.html#method-i-owner","()",""],["owner_name","CheckList","classes/CheckList.html#method-i-owner_name","()",""],["owner_name","List","classes/List.html#method-i-owner_name","()",""],["owner_name","ProjectList","classes/ProjectList.html#method-i-owner_name","()",""],["owners_identification","Observation","classes/Observation.html#method-i-owners_identification","()",""],["owners_identification_from_vision","Observation","classes/Observation.html#method-i-owners_identification_from_vision","()",""],["owners_identification_from_vision=","Observation","classes/Observation.html#method-i-owners_identification_from_vision-3D","( val )",""],["page","EolService","classes/EolService.html#method-i-page","(id, params = {})",""],["page_details","WikipediaService","classes/WikipediaService.html#method-i-page_details","(title, options = {})",""],["page_of_results","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-page_of_results","(search_params={}, options={}, &block)",""],["page_url","TaxonDescribers::AmphibiaWeb","classes/TaxonDescribers/AmphibiaWeb.html#method-i-page_url","(taxon)",""],["page_url","TaxonDescribers::Base","classes/TaxonDescribers/Base.html#method-i-page_url","(taxon)","<p>Implement in subclasses\n"],["page_url","TaxonDescribers::Eol","classes/TaxonDescribers/Eol.html#method-i-page_url","( taxon )",""],["page_url","TaxonDescribers::Inaturalist","classes/TaxonDescribers/Inaturalist.html#method-i-page_url","( taxon )",""],["page_url","TaxonDescribers::Wikipedia","classes/TaxonDescribers/Wikipedia.html#method-i-page_url","(taxon)",""],["page_url","TaxonDescribers::WikipediaEs","classes/TaxonDescribers/WikipediaEs.html#method-i-page_url","(taxon)",""],["page_url","TaxonDescribers::WikipediaFr","classes/TaxonDescribers/WikipediaFr.html#method-i-page_url","(taxon)",""],["param_to_array","Place","classes/Place.html#method-c-param_to_array","(places)",""],["params","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-params","()",""],["params_to_elastic_query","Observation","classes/Observation.html#method-c-params_to_elastic_query","(params, options = {})",""],["parentNameUsageID","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-parentNameUsageID","()",""],["parent_id=","Taxon","classes/Taxon.html#method-i-parent_id-3D","( parent_id )",""],["parent_prefers_comments","Comment","classes/Comment.html#method-i-parent_prefers_comments","()",""],["parental_consent","Emailer","classes/Emailer.html#method-i-parental_consent","( email )",""],["parental_consent","UsersController","classes/UsersController.html#method-i-parental_consent","()",""],["parks_canada_2017","StatsController","classes/StatsController.html#method-i-parks_canada_2017","()",""],["parse_extension","Photo","classes/Photo.html#method-i-parse_extension","()",""],["parse_headers","CloudfrontLogParser","classes/CloudfrontLogParser.html#method-i-parse_headers","( unzipped_path )",""],["parse_url_prefix","Photo","classes/Photo.html#method-i-parse_url_prefix","()",""],["parsed_response","WikipediaService","classes/WikipediaService.html#method-i-parsed_response","(title, options = {})",""],["partial_revert","TaxonChange","classes/TaxonChange.html#method-i-partial_revert","( options = {} )","<p>This is an emergency tool, so for the love of Linnaeus please be careful with it and don&#39;t expose …\n"],["partition_data","DataPartnerLinkers::Calflora","classes/DataPartnerLinkers/Calflora.html#method-i-partition_data","(after = Date.parse(\"1900-01-01\"), before=Date.today)",""],["partition_range","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-c-partition_range","( start_id, max_id, partitions = 1 )",""],["passes_quality_metric?","Observation","classes/Observation.html#method-i-passes_quality_metric-3F","(metric)",""],["path","Picasa","classes/Picasa.html#method-c-path","(args = {})","<p>For more on possible options and their meanings, see: code.google.com/apis/picasaweb/reference.html\n<p>The …\n"],["pending","Admin::DelayedJobsController","classes/Admin/DelayedJobsController.html#method-i-pending","()",""],["pending?","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-pending-3F","()",""],["perform","BulkObservationFile","classes/BulkObservationFile.html#method-i-perform","()",""],["permit_params","Users::RegistrationsController","classes/Users/RegistrationsController.html#method-i-permit_params","()",""],["permit_params","UsersController","classes/UsersController.html#method-i-permit_params","()",""],["permitted_page_params","WikiPagesController","classes/WikiPagesController.html#method-i-permitted_page_params","()",""],["personal_lists","User","classes/User.html#method-i-personal_lists","()",""],["photo=","ComputerVisionDemoUpload","classes/ComputerVisionDemoUpload.html#method-i-photo-3D","(data)",""],["photo_attributes=","GuidePhoto","classes/GuidePhoto.html#method-i-photo_attributes-3D","(attributes)",""],["photo_bucket_should_be_changed?","LocalPhoto","classes/LocalPhoto.html#method-i-photo_bucket_should_be_changed-3F","()",""],["photo_fields","EolController","classes/EolController.html#method-i-photo_fields","()","<p>Return an HTML fragment containing checkbox inputs for EOL photos. Params:\n\n<pre><code>taxon_id:        a taxon_id ...\n</code></pre>\n"],["photo_fields","FacebookController","classes/FacebookController.html#method-i-photo_fields","()",""],["photo_fields","FlickrController","classes/FlickrController.html#method-i-photo_fields","()","<p>Return an HTML fragment containing checkbox inputs for Flickr photos. Params:\n\n<pre><code>q:        query string\ncontext: ...\n</code></pre>\n"],["photo_fields","PicasaController","classes/PicasaController.html#method-i-photo_fields","()",""],["photo_fields","WikimediaCommonsController","classes/WikimediaCommonsController.html#method-i-photo_fields","()","<p>Return an HTML fragment containing checkbox inputs for Wikimedia Commons photos. Params:\n\n<pre><code>taxon_id:    ...\n</code></pre>\n"],["photo_identities_required","ApplicationController","classes/ApplicationController.html#method-i-photo_identities_required","()",""],["photo_source_name","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-photo_source_name","()",""],["photo_type_label","ApplicationHelper","classes/ApplicationHelper.html#method-i-photo_type_label","( type )",""],["photo_url","Taxon","classes/Taxon.html#method-i-photo_url","()",""],["photos","FlickrController","classes/FlickrController.html#method-i-photos","()","<p>Finds photos for the logged-in user\n"],["photos","RubyPicasa::Album","classes/RubyPicasa/Album.html#method-i-photos","(options = {})","<p>The current page of photos in the album.\n"],["photos","RubyPicasa::RecentPhotos","classes/RubyPicasa/RecentPhotos.html#method-i-photos","()","<p>The current page of recently updated photos associated to the user.\n"],["photos","RubyPicasa::Search","classes/RubyPicasa/Search.html#method-i-photos","(options = {})","<p>The current page of photos matching the search.\n"],["photos","TaxaController","classes/TaxaController.html#method-i-photos","()",""],["photos=","Taxon","classes/Taxon.html#method-i-photos-3D","( new_photos )","<p>Override assignment method provided by has_many to ensure that all callbacks on photos and taxon_photos …\n"],["photos?","Observation","classes/Observation.html#method-i-photos-3F","()",""],["photos_cache_key","Taxon","classes/Taxon.html#method-i-photos_cache_key","()",""],["photos_missing","Emailer","classes/Emailer.html#method-i-photos_missing","( user, grouped_photos )",""],["photos_with_backfill","Taxon","classes/Taxon.html#method-i-photos_with_backfill","( options = {} )","<p>Fetches associated user-selected FlickrPhotos if they exist, otherwise gets the the first :limit Create …\n"],["photos_with_external_cache_key","Taxon","classes/Taxon.html#method-i-photos_with_external_cache_key","()",""],["phylogram","ObservationsController","classes/ObservationsController.html#method-i-phylogram","()",""],["phylum","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-phylum","()",""],["phylum","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-phylum","()",""],["phylum","Taxon","classes/Taxon.html#method-i-phylum","()",""],["picasa_albums","PicasaController","classes/PicasaController.html#method-i-picasa_albums","(options = {})","<p>fetch picasa albums user is used to authenticate the request picasa_user_id specifies the picasa user …\n"],["picasa_client","User","classes/User.html#method-i-picasa_client","()",""],["picasa_friends","PicasaController","classes/PicasaController.html#method-i-picasa_friends","(user)",""],["picasa_identity","User","classes/User.html#method-i-picasa_identity","()",""],["picasa_request_with_refresh","PicasaPhoto","classes/PicasaPhoto.html#method-c-picasa_request_with_refresh","(picasa_identity)",""],["ping","ApplicationController","classes/ApplicationController.html#method-i-ping","()",""],["place_ancestor_ids_sql","ListedTaxon","classes/ListedTaxon.html#method-c-place_ancestor_ids_sql","(place_ids)","<p>used with threatened_status filter\n"],["place_geometry_kml_url","FakeView","classes/FakeView.html#method-i-place_geometry_kml_url","( options = {} )",""],["place_guess_from_latlon","Observation","classes/Observation.html#method-c-place_guess_from_latlon","( lat, lon, options = {} )",""],["place_name_and_type","PlacesHelper","classes/PlacesHelper.html#method-i-place_name_and_type","(place, options = {})",""],["place_type","PlacesHelper","classes/PlacesHelper.html#method-i-place_type","(place)",""],["place_type_name","Place","classes/Place.html#method-i-place_type_name","()",""],["place_type_name=","Place","classes/Place.html#method-i-place_type_name-3D","(name)",""],["place_with_boundary","Project","classes/Project.html#method-i-place_with_boundary","()",""],["places","Atlas","classes/Atlas.html#method-i-places","()",""],["places","Observation","classes/Observation.html#method-i-places","()",""],["places_for_latlon","Observation","classes/Observation.html#method-c-places_for_latlon","( lat, lon, acc, options = {} )",""],["places_without_obscuration_protection","Observation","classes/Observation.html#method-c-places_without_obscuration_protection","()",""],["planner","PlacesController","classes/PlacesController.html#method-i-planner","()",""],["point_geojson","ElasticModel","classes/ElasticModel.html#method-c-point_geojson","(lat, lon)",""],["point_latlon","ElasticModel","classes/ElasticModel.html#method-c-point_latlon","(lat, lon)",""],["points_from_geom","Place","classes/Place.html#method-i-points_from_geom","(geom)",""],["polynom_parent","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-polynom_parent","(name, options = {})","<p>Try to find the parent taxon given a polynomial name, e.g. “Homo sapiens” (a binom) or “Ensatina …\n"],["popover","ApplicationHelper","classes/ApplicationHelper.html#method-i-popover","(text, options = {}, &block)",""],["popular_observations","YearStatistic","classes/YearStatistic.html#method-c-popular_observations","( year, options = {} )",""],["populate","FrequencyCell","classes/FrequencyCell.html#method-c-populate","()",""],["positioningDevice","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-positioningDevice","()",""],["positioningMethod","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-positioningMethod","()",""],["possessive_noun","UsersHelper","classes/UsersHelper.html#method-i-possessive_noun","( user, noun )",""],["possible_attribute_associates","ControlledTerm","classes/ControlledTerm.html#method-i-possible_attribute_associates","()",""],["post_archives_by_month_path","ApplicationHelper","classes/ApplicationHelper.html#method-i-post_archives_by_month_path","( parent, year, month )",""],["post_parent_path","ApplicationHelper","classes/ApplicationHelper.html#method-i-post_parent_path","( parent, options = {} )",""],["posts_count","Project","classes/Project.html#method-i-posts_count","()",""],["preferred_end_date_or_time","Project","classes/Project.html#method-i-preferred_end_date_or_time","()",""],["preferred_start_date_or_time","Project","classes/Project.html#method-i-preferred_start_date_or_time","()",""],["preferred_uninomial_ancestor","Taxon","classes/Taxon.html#method-i-preferred_uninomial_ancestor","()","<p>Used primarily in get_gbif_id. For that particular API, it is useful to know the ancestor of a taxon …\n"],["preload_for_component","Observation","classes/Observation.html#method-c-preload_for_component","(observations, logged_in)",""],["preload_for_elastic_index","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-preload_for_elastic_index","( instances )",""],["preload_for_elastic_index","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-i-preload_for_elastic_index","()","<p>usually called within as_indexed_json to make sure the instance has all associations it needs. It is …\n"],["preload_user_preferences","ApplicationController","classes/ApplicationController.html#method-i-preload_user_preferences","()",""],["preloads","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-preloads","()",""],["prepare_batch_for_index","Identification","classes/Identification.html#method-c-prepare_batch_for_index","(identifications)",""],["prepare_batch_for_index","Observation","classes/Observation.html#method-c-prepare_batch_for_index","(observations, options = {})","<p>to quickly fetch observation place_ids when bulk indexing\n"],["prepare_batch_for_index","Taxon","classes/Taxon.html#method-c-prepare_batch_for_index","(taxa)","<p>This custom prepare_for_index is used to preload place_ids using a SQL call to avoid loading all the …\n"],["presence_absence","Trip","classes/Trip.html#method-c-presence_absence","( trips, taxon_id, place_id, year, month )",""],["presence_places","Atlas","classes/Atlas.html#method-i-presence_places","()","<p>All of the atlas places where there is a ListedTaxon demonstrating presence\n"],["presence_places_with_establishment_means","Atlas","classes/Atlas.html#method-i-presence_places_with_establishment_means","()","<p>All presence places, including est. means data, NOT just the places with est. means data\n"],["previous","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-previous","()","<p>If the results are paginated, retrieve the previous page.\n"],["primary_establishment_means","ListedTaxon","classes/ListedTaxon.html#method-i-primary_establishment_means","()",""],["primary_listed_taxon","ListedTaxon","classes/ListedTaxon.html#method-i-primary_listed_taxon","()",""],["primary_occurrence_status","ListedTaxon","classes/ListedTaxon.html#method-i-primary_occurrence_status","()",""],["print_community_taxon_nodes","Observation","classes/Observation.html#method-i-print_community_taxon_nodes","( nodes = nil )",""],["private?","RubyPicasa::Album","classes/RubyPicasa/Album.html#method-i-private-3F","()","<p>True if this album&#39;s rights are set to private\n"],["private_ne_latlon","Observation","classes/Observation.html#method-i-private_ne_latlon","()",""],["private_sw_latlon","Observation","classes/Observation.html#method-i-private_sw_latlon","()",""],["privileged_with?","User","classes/User.html#method-i-privileged_with-3F","( privilege )",""],["probable_taxon","Observation","classes/Observation.html#method-i-probable_taxon","( options = {} )","<p>What the system thinks the organism probably is. Current combines the communal opinion with the preferences …\n"],["probably_captive?","Observation","classes/Observation.html#method-i-probably_captive-3F","()",""],["process_geometry","PlaceGeometry","classes/PlaceGeometry.html#method-i-process_geometry","()",""],["process_geometry_if_changed","PlaceGeometry","classes/PlaceGeometry.html#method-i-process_geometry_if_changed","()",""],["process_observations","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-process_observations","( params, preloads, options = {}, &block )",""],["process_rows","DataPartnerLinkers::Calflora","classes/DataPartnerLinkers/Calflora.html#method-i-process_rows","( rows )",""],["processing?","Photo","classes/Photo.html#method-i-processing-3F","()",""],["project","BulkObservationFile","classes/BulkObservationFile.html#method-i-project","()",""],["project","INatAPIService","classes/INatAPIService.html#method-c-project","(id, params={}, options = {})",""],["project","ObservationsController","classes/ObservationsController.html#method-i-project","()",""],["projectID","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-projectID","()",""],["projectTitle","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-projectTitle","()",""],["project_all","ObservationsController","classes/ObservationsController.html#method-i-project_all","()",""],["project_allows_observations?","ProjectObservation","classes/ProjectObservation.html#method-i-project_allows_observations-3F","()",""],["project_allows_submitter?","ProjectObservation","classes/ProjectObservation.html#method-i-project_allows_submitter-3F","()",""],["project_observation_rule_terms","Project","classes/Project.html#method-i-project_observation_rule_terms","()",""],["project_observations","ProjectUser","classes/ProjectUser.html#method-i-project_observations","()",""],["project_observations_count","Project","classes/Project.html#method-i-project_observations_count","()",""],["project_user","ProjectObservation","classes/ProjectObservation.html#method-i-project_user","()",""],["project_user_invitation","Emailer","classes/Emailer.html#method-i-project_user_invitation","( pui )",""],["projects","INatAPIService","classes/INatAPIService.html#method-c-projects","(params={}, options = {})",""],["projects_count","ObservationField","classes/ObservationField.html#method-i-projects_count","()",""],["propagate_establishment_means","ListedTaxon","classes/ListedTaxon.html#method-i-propagate_establishment_means","()",""],["protected_attributes_editable_by?","Taxon","classes/Taxon.html#method-i-protected_attributes_editable_by-3F","( user )",""],["provider","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-provider","()",""],["prune_odp_duplicates","LocalPhoto","classes/LocalPhoto.html#method-i-prune_odp_duplicates","( options = { } )",""],["prune_odp_duplicates_batch","LocalPhoto","classes/LocalPhoto.html#method-c-prune_odp_duplicates_batch","( min_id, max_id )",""],["psql","Denormalizer","classes/Denormalizer.html#method-c-psql","()",""],["public?","RubyPicasa::Album","classes/RubyPicasa/Album.html#method-i-public-3F","()","<p>True if this album&#39;s rights are set to public\n"],["public_places","Observation","classes/Observation.html#method-i-public_places","()",""],["public_positional_accuracy","Observation","classes/Observation.html#method-i-public_positional_accuracy","()",""],["public_system_places","Observation","classes/Observation.html#method-i-public_system_places","( options = {} )",""],["publications","YearStatistic","classes/YearStatistic.html#method-c-publications","( year, _options )",""],["published?","Guide","classes/Guide.html#method-i-published-3F","()",""],["published?","Post","classes/Post.html#method-i-published-3F","()",""],["published_name","User","classes/User.html#method-i-published_name","()",""],["publisher","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-publisher","()",""],["publisher","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-publisher","()",""],["publishingCountry","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-publishingCountry","()",""],["quality_metric_score","Observation","classes/Observation.html#method-i-quality_metric_score","(metric)",""],["quality_metrics_pass?","Observation","classes/Observation.html#method-i-quality_metrics_pass-3F","( metrics = QualityMetric::METRICS )",""],["queries","AdminController","classes/AdminController.html#method-i-queries","()",""],["query","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-query","(params = {})","<p>Uses scopes to perform a conditional search. May be worth looking into squirrel or some other rails friendly …\n"],["query","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-query","()",""],["query","User","classes/User.html#method-c-query","(params={})",""],["query_params","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-query_params","(params)","<p>Takes a hash of query params like you&#39;d get from an ActionController and normalizes them for use …\n"],["queue_project_aggregations","Project","classes/Project.html#method-c-queue_project_aggregations","(options = {})",""],["random_neighbor_lat_lon","Observation","classes/Observation.html#method-c-random_neighbor_lat_lon","(lat, lon)",""],["range","TaxaController","classes/TaxaController.html#method-i-range","()",""],["range_changed?","TaxonRange","classes/TaxonRange.html#method-i-range_changed-3F","()",""],["range_delete","TaxonRange","classes/TaxonRange.html#method-i-range_delete","()",""],["range_delete=","TaxonRange","classes/TaxonRange.html#method-i-range_delete-3D","(value)",""],["rank_level_below_taxon_rank","TaxonFramework","classes/TaxonFramework.html#method-i-rank_level_below_taxon_rank","()",""],["rank_level_conflict?","TaxonChange","classes/TaxonChange.html#method-i-rank_level_conflict-3F","()",""],["rank_level_for_taxon_and_parent_must_not_be_nil","Taxon","classes/Taxon.html#method-i-rank_level_for_taxon_and_parent_must_not_be_nil","()",""],["rank_level_must_be_coarser_than_children","Taxon","classes/Taxon.html#method-i-rank_level_must_be_coarser_than_children","()",""],["rank_level_must_be_finer_than_parent","Taxon","classes/Taxon.html#method-i-rank_level_must_be_finer_than_parent","()",""],["rank_rule","List","classes/List.html#method-i-rank_rule","()",""],["rank_rule=","List","classes/List.html#method-i-rank_rule-3D","(new_rank_rule)",""],["ratatosk","Ratatosk","classes/Ratatosk.html#method-c-ratatosk","()",""],["ratatosk_name_providers","Site","classes/Site.html#method-i-ratatosk_name_providers","()",""],["reasess_taxon_framework_relationship_after_move","Taxon","classes/Taxon.html#method-i-reasess_taxon_framework_relationship_after_move","()",""],["reasonable_number_of_photos","TaxonPhoto","classes/TaxonPhoto.html#method-i-reasonable_number_of_photos","()",""],["reassess_annotations","Observation","classes/Observation.html#method-i-reassess_annotations","()",""],["reassess_annotations_after_save_later","ControlledTermTaxon","classes/ControlledTermTaxon.html#method-i-reassess_annotations_after_save_later","()",""],["reassess_annotations_for_attribute_id","Annotation","classes/Annotation.html#method-c-reassess_annotations_for_attribute_id","( attribute_id )",""],["reassess_annotations_for_taxon_id","Annotation","classes/Annotation.html#method-c-reassess_annotations_for_taxon_id","( taxon )",""],["reassess_annotations_for_taxon_ids","Annotation","classes/Annotation.html#method-c-reassess_annotations_for_taxon_ids","( taxon_ids )",""],["reassess_coordinate_obscuration","Observation","classes/Observation.html#method-i-reassess_coordinate_obscuration","()",""],["reassess_coordinates_for_observations_by","Observation","classes/Observation.html#method-c-reassess_coordinates_for_observations_by","( user )",""],["reassess_coordinates_for_observations_of","Observation","classes/Observation.html#method-c-reassess_coordinates_for_observations_of","( taxon, options = {} )",""],["reassess_coordinates_of","Observation","classes/Observation.html#method-c-reassess_coordinates_of","( observations )",""],["reassign_primary_listed_taxon","ListedTaxon","classes/ListedTaxon.html#method-i-reassign_primary_listed_taxon","()",""],["rebuild_without_callbacks","Taxon","classes/Taxon.html#method-c-rebuild_without_callbacks","()",""],["recent","UsersController","classes/UsersController.html#method-i-recent","()",""],["recent_notifications","User","classes/User.html#method-i-recent_notifications","(options={})",""],["recent_observation_fields","User","classes/User.html#method-i-recent_observation_fields","()",""],["recent_observations","User","classes/User.html#method-i-recent_observations","(num = 5)","<p>TODO: named_scope\n"],["recent_photo_tags","Guide","classes/Guide.html#method-i-recent_photo_tags","()",""],["recent_photos","Picasa","classes/Picasa.html#method-i-recent_photos","(user_id_or_url, options = {})","<p>Retrieve a RubyPicasa::RecentPhotos object, essentially a User object which contains photos instead of …\n"],["recent_tags","Guide","classes/Guide.html#method-i-recent_tags","()",""],["recordedBy","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-recordedBy","()",""],["recordedByID","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-recordedByID","()",""],["redirect_to_hell","ApplicationController","classes/ApplicationController.html#method-i-redirect_to_hell","()","<p>Redirect user to front page when they do something naughty.\n"],["redirect_uri_has_no_params","OauthApplication","classes/OauthApplication.html#method-i-redirect_uri_has_no_params","()",""],["referenceID","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-referenceID","()",""],["references","ApplicationHelper","classes/ApplicationHelper.html#method-i-references","(options = {})",""],["references","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-references","()",""],["references","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-references","()",""],["references","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-references","()",""],["refresh","CheckList","classes/CheckList.html#method-i-refresh","(options = {})",""],["refresh","CheckList","classes/CheckList.html#method-c-refresh","(options = {})",""],["refresh_access_token!","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-refresh_access_token-21","()","<p>stackoverflow.com/questions/12792326/how-do-i-refresh-my-google-oauth2-access-token-using-my-refresh-token …\n"],["refresh_atlas","AtlasesController","classes/AtlasesController.html#method-i-refresh_atlas","()",""],["refresh_cache_key","CheckList","classes/CheckList.html#method-i-refresh_cache_key","()",""],["refresh_check_lists","Observation","classes/Observation.html#method-i-refresh_check_lists","()",""],["refresh_default_site","Site","classes/Site.html#method-i-refresh_default_site","()",""],["refresh_es_index","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-refresh_es_index","()",""],["refresh_list","ListRule","classes/ListRule.html#method-i-refresh_list","()",""],["refresh_listed_taxon","CheckList","classes/CheckList.html#method-c-refresh_listed_taxon","(lt, options = {})",""],["refresh_now","CheckList","classes/CheckList.html#method-i-refresh_now","(options = {})",""],["refresh_now","ListsController","classes/ListsController.html#method-i-refresh_now","()",""],["refresh_observationcounts","ListedTaxaController","classes/ListedTaxaController.html#method-i-refresh_observationcounts","()",""],["refresh_place_check_list","PlaceGeometry","classes/PlaceGeometry.html#method-i-refresh_place_check_list","()",""],["refresh_wikipedia_summary","TaxaController","classes/TaxaController.html#method-i-refresh_wikipedia_summary","()",""],["refresh_with_observation","CheckList","classes/CheckList.html#method-c-refresh_with_observation","(observation, options = {})",""],["regenerate_defaults_for_year","YearStatistic","classes/YearStatistic.html#method-c-regenerate_defaults_for_year","( year )",""],["regenerate_existing","YearStatistic","classes/YearStatistic.html#method-c-regenerate_existing","()",""],["reindex_associated_projects","ObservationField","classes/ObservationField.html#method-i-reindex_associated_projects","()",""],["reindex_descendants_of","Taxon","classes/Taxon.html#method-c-reindex_descendants_of","( taxon )",""],["reindex_faved_observations_after_destroy","User","classes/User.html#method-c-reindex_faved_observations_after_destroy","( user_id )",""],["reindex_faved_observations_after_destroy_later","User","classes/User.html#method-i-reindex_faved_observations_after_destroy_later","()",""],["reindex_for_taxon","Identification","classes/Identification.html#method-c-reindex_for_taxon","( taxon_id )",""],["reindex_identifications","Observation","classes/Observation.html#method-i-reindex_identifications","()",""],["reindex_identifications_after_save","Taxon","classes/Taxon.html#method-i-reindex_identifications_after_save","()",""],["reindex_observation","ProjectObservation","classes/ProjectObservation.html#method-i-reindex_observation","()",""],["reindex_observations","ListedTaxon","classes/ListedTaxon.html#method-c-reindex_observations","( taxon_id, place_id )",""],["reindex_observations_if_name_changed","ObservationField","classes/ObservationField.html#method-i-reindex_observations_if_name_changed","()",""],["reindex_observations_later","ListedTaxon","classes/ListedTaxon.html#method-i-reindex_observations_later","()",""],["reindex_places","Observation","classes/Observation.html#method-i-reindex_places","()","<p>The intent here is to keep the observations_count in the Places index <strong>roughly</strong> up-to-date. So these jobs …\n"],["reindex_projects","Observation","classes/Observation.html#method-i-reindex_projects","()",""],["reindex_projects_later","Place","classes/Place.html#method-i-reindex_projects_later","()",""],["reindex_taxa_covered_by","Taxon","classes/Taxon.html#method-c-reindex_taxa_covered_by","( taxon_framework )",""],["reindex_terms","ControlledTermValue","classes/ControlledTermValue.html#method-i-reindex_terms","()",""],["related_listed_taxa","ListedTaxon","classes/ListedTaxon.html#method-i-related_listed_taxa","()",""],["relationship_unknown","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-relationship_unknown","()",""],["relationships","UsersController","classes/UsersController.html#method-i-relationships","()",""],["relevant_listed_taxon_alterations","Atlas","classes/Atlas.html#method-i-relevant_listed_taxon_alterations","()",""],["relevant_listed_taxon_alterations","CompleteSet","classes/CompleteSet.html#method-i-relevant_listed_taxon_alterations","()",""],["reload_from_observations_cache_key","CheckList","classes/CheckList.html#method-i-reload_from_observations_cache_key","()",""],["remaining_paragraphs_of_text","ApplicationHelper","classes/ApplicationHelper.html#method-i-remaining_paragraphs_of_text","(text,split)",""],["remote_taxon_images","TaxaHelper","classes/TaxaHelper.html#method-i-remote_taxon_images","(taxon, options = {})",""],["removable_by?","ListedTaxon","classes/ListedTaxon.html#method-i-removable_by-3F","(target_user)",""],["removable_by?","ProjectObservation","classes/ProjectObservation.html#method-i-removable_by-3F","(usr)",""],["remove","ProjectsController","classes/ProjectsController.html#method-i-remove","()",""],["remove_all_tags","GuidesController","classes/GuidesController.html#method-i-remove_all_tags","()",""],["remove_atlas_alteration","AtlasesController","classes/AtlasesController.html#method-i-remove_atlas_alteration","()",""],["remove_automated_observation_reviews","Identification","classes/Identification.html#method-i-remove_automated_observation_reviews","()",""],["remove_batch","ProjectsController","classes/ProjectsController.html#method-i-remove_batch","()",""],["remove_default_check_list","Place","classes/Place.html#method-i-remove_default_check_list","()",""],["remove_email_from_name","User","classes/User.html#method-i-remove_email_from_name","()","<p>Apparently some people, and maybe some third-party auth providers, sometimes stick the email in the name …\n"],["remove_email_from_string","User","classes/User.html#method-c-remove_email_from_string","( s )",""],["remove_friend","UsersController","classes/UsersController.html#method-i-remove_friend","()",""],["remove_from_s3","DeletedPhoto","classes/DeletedPhoto.html#method-i-remove_from_s3","( options = { } )",""],["remove_icon_from_s3","User","classes/User.html#method-c-remove_icon_from_s3","( user_id )",""],["remove_listed_taxon_alteration","AtlasesController","classes/AtlasesController.html#method-i-remove_listed_taxon_alteration","()",""],["remove_listed_taxon_alteration","CompleteSetsController","classes/CompleteSetsController.html#method-i-remove_listed_taxon_alteration","()",""],["remove_oauth_access_tokens","User","classes/User.html#method-i-remove_oauth_access_tokens","()",""],["remove_other_primary_listings","ListedTaxon","classes/ListedTaxon.html#method-i-remove_other_primary_listings","()",""],["remove_project_user","ProjectsController","classes/ProjectsController.html#method-i-remove_project_user","()",""],["remove_rank_from_name","Taxon","classes/Taxon.html#method-i-remove_rank_from_name","()",""],["remove_rank_from_name","Taxon","classes/Taxon.html#method-c-remove_rank_from_name","( name )",""],["remove_rank_from_name","TaxonName","classes/TaxonName.html#method-i-remove_rank_from_name","()",""],["remove_role","UsersController","classes/UsersController.html#method-i-remove_role","()",""],["remove_subscription_to_friend","Friendship","classes/Friendship.html#method-i-remove_subscription_to_friend","()",""],["remove_tag","FlickrController","classes/FlickrController.html#method-i-remove_tag","()","<p>Delete a tag from a Flickr photo using the current users auth\n"],["remove_taxa","TripsController","classes/TripsController.html#method-i-remove_taxa","()",""],["remove_taxon","ListsController","classes/ListsController.html#method-i-remove_taxon","()",""],["remove_times_from_non_bioblitzes","Project","classes/Project.html#method-i-remove_times_from_non_bioblitzes","()",""],["remove_updater_if_no_changes","GuideSection","classes/GuideSection.html#method-i-remove_updater_if_no_changes","()",""],["remove_updates","ProjectUser","classes/ProjectUser.html#method-i-remove_updates","()",""],["remove_wikipedia_summary_unless_auto_description","Taxon","classes/Taxon.html#method-i-remove_wikipedia_summary_unless_auto_description","()",""],["render","DarwinCore::Descriptor","classes/DarwinCore/Descriptor.html#method-i-render","()",""],["render","DarwinCore::Metadata","classes/DarwinCore/Metadata.html#method-i-render","()",""],["render_404","ApplicationController","classes/ApplicationController.html#method-i-render_404","()","<p>Return a 404 response with our default 404 page\n"],["render_in_format","ApplicationHelper","classes/ApplicationHelper.html#method-i-render_in_format","(format, *args)",""],["reorder","GuidesController","classes/GuidesController.html#method-i-reorder","()",""],["reorder_by_taxonomy","Guide","classes/Guide.html#method-i-reorder_by_taxonomy","()",""],["repair","EolPhoto","classes/EolPhoto.html#method-i-repair","(options = {})",""],["repair","FacebookPhoto","classes/FacebookPhoto.html#method-i-repair","(options = {})",""],["repair","FacebookPhoto","classes/FacebookPhoto.html#method-c-repair","(find_options = {})",""],["repair","FlickrPhoto","classes/FlickrPhoto.html#method-i-repair","(options = {})",""],["repair","FlickrPhoto","classes/FlickrPhoto.html#method-c-repair","(find_options = {})",""],["repair","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-i-repair","( options = {} )",""],["repair","LocalPhoto","classes/LocalPhoto.html#method-i-repair","(options = {})",""],["repair","PhotosController","classes/PhotosController.html#method-i-repair","()",""],["repair","PicasaPhoto","classes/PicasaPhoto.html#method-i-repair","(options = {})",""],["repair","PicasaPhoto","classes/PicasaPhoto.html#method-c-repair","(find_options = {})",""],["repair","WikimediaCommonsPhoto","classes/WikimediaCommonsPhoto.html#method-i-repair","( options = {} )",""],["repair_all","PhotosController","classes/PhotosController.html#method-i-repair_all","()",""],["repair_photos_for_user","Photo","classes/Photo.html#method-c-repair_photos_for_user","(user, type)",""],["repair_single_photo","Photo","classes/Photo.html#method-c-repair_single_photo","(photo)",""],["replace_inactive_taxon","Identification","classes/Identification.html#method-i-replace_inactive_taxon","()","<p>Callbacks ###############################################################\n"],["replace_inactive_taxon","Observation","classes/Observation.html#method-i-replace_inactive_taxon","()",""],["reproductiveCondition","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-reproductiveCondition","()",""],["request","CatalogueOfLife","classes/CatalogueOfLife.html#method-i-request","(method, args = {})","<p>Sends a request to a CoL function, and returns an Hpricot object of the  xml response.  There&#39;s really …\n"],["request","DataPartnerLinkers::GBIF","classes/DataPartnerLinkers/GBIF.html#method-i-request","()",""],["request","EolService","classes/EolService.html#method-i-request","(method, *args)",""],["request","FlickrCache","classes/FlickrCache.html#method-c-request","( flickraw, type, method, params )",""],["request","GbifService","classes/GbifService.html#method-i-request","(method, params = {})",""],["request","MetaService","classes/MetaService.html#method-i-request","(method, args = {})","<p>Sends a request to a service function, and returns an Hpricot object of the xml response.\n<p>TODO: handle …\n"],["request","NewZealandOrganismsRegister","classes/NewZealandOrganismsRegister.html#method-i-request","(method, args = {})","<p>Sends a request to a NZOR function, and returns an Nokogiri object of the  xml response.  There&#39;s …\n"],["require_admin_or_trusted_project_manager_for","ApplicationController","classes/ApplicationController.html#method-i-require_admin_or_trusted_project_manager_for","(project)",""],["require_guide_user","ApplicationController","classes/ApplicationController.html#method-i-require_guide_user","()",""],["require_owner","ApplicationController","classes/ApplicationController.html#method-i-require_owner","(options = {})",""],["require_owner","RelationshipsController","classes/RelationshipsController.html#method-i-require_owner","( options = {} )",""],["required_observation_fields_present?","ProjectObservation","classes/ProjectObservation.html#method-i-required_observation_fields_present-3F","()","<p>Required observation fields are validated as rules, but rules are valid if <strong>any</strong> of them pass, while required …\n"],["requires_privilege","Privileges::ClassMethods","classes/Privileges/ClassMethods.html#method-i-requires_privilege","( privilege, options = {} )",""],["requires_privilege","Privileges::Controller::ClassMethods","classes/Privileges/Controller/ClassMethods.html#method-i-requires_privilege","( privilege, options = {} )",""],["research_grade?","Observation","classes/Observation.html#method-i-research_grade-3F","()",""],["research_grade_candidate?","Observation","classes/Observation.html#method-i-research_grade_candidate-3F","()",""],["reset_file_from_original","LocalPhoto","classes/LocalPhoto.html#method-i-reset_file_from_original","()",""],["reset_iconic_taxa_constants_for_tests","Taxon","classes/Taxon.html#method-c-reset_iconic_taxa_constants_for_tests","()",""],["reset_last_aggregated_at","Project","classes/Project.html#method-i-reset_last_aggregated_at","()",""],["reset_last_aggregated_if_rules_changed","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-reset_last_aggregated_if_rules_changed","()",""],["reset_password","PasswordMailer","classes/PasswordMailer.html#method-i-reset_password","(user)",""],["reset_user_privilege","AdminController","classes/AdminController.html#method-i-reset_user_privilege","()",""],["resolvable_by?","Flag","classes/Flag.html#method-i-resolvable_by-3F","( user )",""],["resource_is_an_observation","Annotation","classes/Annotation.html#method-i-resource_is_an_observation","()",""],["respond_to?","Observation","classes/Observation.html#method-i-respond_to-3F","(method, include_private = false)",""],["respond_to?","Site","classes/Site.html#method-i-respond_to-3F","( method, include_all = false )","<p>rubocop:disable Style/OptionalBooleanParameter\n"],["respond_to_missing?","FakeView","classes/FakeView.html#method-c-respond_to_missing-3F","( method, include_private = false )",""],["respond_to_missing?","FakeView","classes/FakeView.html#method-i-respond_to_missing-3F","( method, include_private = false )",""],["respond_to_missing?","Site","classes/Site.html#method-i-respond_to_missing-3F","( name, include_private )","<p>rubocop:enable Style/OptionalBooleanParameter\n"],["responsive?","ApplicationHelper","classes/ApplicationHelper.html#method-i-responsive-3F","()",""],["restore!","UserPrivilege","classes/UserPrivilege.html#method-i-restore-21","( _options = {} )",""],["restore_access_tokens_by_suspended_user","User","classes/User.html#method-i-restore_access_tokens_by_suspended_user","()",""],["restore_user_privilege","AdminController","classes/AdminController.html#method-i-restore_user_privilege","()",""],["restrict_to_subscribers","UpdateAction","classes/UpdateAction.html#method-i-restrict_to_subscribers","( user_ids )",""],["result_to_will_paginate_collection","ActsAsElasticModel","classes/ActsAsElasticModel.html#method-c-result_to_will_paginate_collection","(result, options={})",""],["return_here","Ambidextrous","classes/Ambidextrous.html#method-i-return_here","()","<p>Filter to set a return url\n"],["return_here_from_url","ApplicationController","classes/ApplicationController.html#method-i-return_here_from_url","()",""],["reusable?","GuidePhoto","classes/GuidePhoto.html#method-i-reusable-3F","(options = {})",""],["reusable?","GuideRange","classes/GuideRange.html#method-i-reusable-3F","(options = {})",""],["reusable?","GuideSection","classes/GuideSection.html#method-i-reusable-3F","(options = {})",""],["reuse","GuideSection","classes/GuideSection.html#method-i-reuse","()",""],["reuse","GuideTaxon","classes/GuideTaxon.html#method-i-reuse","(options = {})",""],["review","ObservationsController","classes/ObservationsController.html#method-i-review","()",""],["reviewed_by?","Observation","classes/Observation.html#method-i-reviewed_by-3F","(viewer)",""],["revisit_curator_identification","Identification","classes/Identification.html#method-i-revisit_curator_identification","()","<p>Revise the project_observation curator_identification_id if the a curator&#39;s identification is deleted …\n"],["revisit_curator_identifications_later","ProjectObservation","classes/ProjectObservation.html#method-i-revisit_curator_identifications_later","()",""],["revoke!","UserPrivilege","classes/UserPrivilege.html#method-i-revoke-21","( options = {} )",""],["revoke_access_tokens_by_suspended_user","User","classes/User.html#method-i-revoke_access_tokens_by_suspended_user","()",""],["revoke_project_observations_on_leave_project","Project","classes/Project.html#method-c-revoke_project_observations_on_leave_project","(project_id, user_id)",""],["revoke_user_privilege","AdminController","classes/AdminController.html#method-i-revoke_user_privilege","()",""],["revoked?","UserPrivilege","classes/UserPrivilege.html#method-i-revoked-3F","()",""],["rights","ApplicationHelper","classes/ApplicationHelper.html#method-i-rights","(record, options = {})",""],["rights","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-rights","()",""],["rightsHolder","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-rightsHolder","()",""],["rightsHolder","DarwinCore::SimpleMultimedia::InstanceMethods","classes/DarwinCore/SimpleMultimedia/InstanceMethods.html#method-i-rightsHolder","()",""],["rights_for_media","ApplicationHelper","classes/ApplicationHelper.html#method-i-rights_for_media","( record, options = {} )",""],["rights_for_observation","ApplicationHelper","classes/ApplicationHelper.html#method-i-rights_for_observation","( record, options = {} )",""],["root?","Taxon","classes/Taxon.html#method-i-root-3F","()",""],["rotate","PhotosController","classes/PhotosController.html#method-i-rotate","()",""],["rotate!","LocalPhoto","classes/LocalPhoto.html#method-i-rotate-21","(degrees = 90)",""],["rotate_command","Paperclip::Rotator","classes/Paperclip/Rotator.html#method-i-rotate_command","()",""],["rule_place","Project","classes/Project.html#method-i-rule_place","()",""],["rule_place_ids","Project","classes/Project.html#method-i-rule_place_ids","()",""],["rule_places","Project","classes/Project.html#method-i-rule_places","()",""],["rule_taxa","Project","classes/Project.html#method-i-rule_taxa","()",""],["rule_taxon","Project","classes/Project.html#method-i-rule_taxon","()",""],["rules_validate_against?","Goal","classes/Goal.html#method-i-rules_validate_against-3F","(thing)","<p>Receives thing, marshals all of the rules associated with itself, and runs through them one by one.  …\n"],["run","DataPartnerLinkers::Calflora","classes/DataPartnerLinkers/Calflora.html#method-i-run","()",""],["run","DataPartnerLinkers::DataPartnerLinker","classes/DataPartnerLinkers/DataPartnerLinker.html#method-i-run","()",""],["run","DataPartnerLinkers::GBIF","classes/DataPartnerLinkers/GBIF.html#method-i-run","()",""],["run","DataPartnerLinkers::MarylandBiodiversityProject","classes/DataPartnerLinkers/MarylandBiodiversityProject.html#method-i-run","()",""],["run","FlowTasksController","classes/FlowTasksController.html#method-i-run","()",""],["run","GuideEolUpdateFlowTask","classes/GuideEolUpdateFlowTask.html#method-i-run","()",""],["run","ListedTaxaFromCsvFlowTask","classes/ListedTaxaFromCsvFlowTask.html#method-i-run","()",""],["run","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-run","()",""],["run","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-run","(run_options = {})",""],["run_cmd","YearStatistic","classes/YearStatistic.html#method-c-run_cmd","( cmd, options = { timeout: 60 } )",""],["run_cmd","YearStatistic","classes/YearStatistic.html#method-i-run_cmd","( cmd, options = {} )",""],["run_revisit_curator_identification","Identification","classes/Identification.html#method-c-run_revisit_curator_identification","(observation_id, user_id)",""],["run_update_curator_identification","Identification","classes/Identification.html#method-c-run_update_curator_identification","(ident)","<p>Static ##################################################################\n"],["s3_account","LocalPhoto","classes/LocalPhoto.html#method-i-s3_account","()",""],["s3_account=","LocalPhoto","classes/LocalPhoto.html#method-i-s3_account-3D","( account )",""],["s3_bucket","LocalPhoto","classes/LocalPhoto.html#method-c-s3_bucket","( public = false )",""],["s3_bucket","LocalPhoto","classes/LocalPhoto.html#method-i-s3_bucket","()",""],["s3_client","LocalPhoto","classes/LocalPhoto.html#method-i-s3_client","()",""],["s3_host_alias","LocalPhoto","classes/LocalPhoto.html#method-c-s3_host_alias","( public = false )",""],["s3_host_alias","LocalPhoto","classes/LocalPhoto.html#method-i-s3_host_alias","()",""],["s3_permissions","LocalPhoto","classes/LocalPhoto.html#method-c-s3_permissions","( public = false )",""],["s3_permissions","LocalPhoto","classes/LocalPhoto.html#method-i-s3_permissions","()",""],["s3_region","LocalPhoto","classes/LocalPhoto.html#method-c-s3_region","( public = false )",""],["s3_region","LocalPhoto","classes/LocalPhoto.html#method-i-s3_region","()",""],["sane_destroy","Project","classes/Project.html#method-i-sane_destroy","()",""],["sane_destroy","User","classes/User.html#method-i-sane_destroy","(options = {})","<p>Destroying a user triggers a giant, slow, costly cascade of deletions that all occur within a transaction. …\n"],["sanitizer","WikipediaService","classes/WikipediaService.html#method-i-sanitizer","()",""],["save","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-save","()","<p>Overriden to make sure we always check to see if a taxon for this name has been saved since the creation …\n"],["save","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-save","()","<p>Overriden to make sure we always check to see if a taxon for this name has been saved since the creation …\n"],["save","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-save","()","<p>Overriden to make sure we always check to see if a taxon for this name has been saved since the creation …\n"],["save_geom","Place","classes/Place.html#method-i-save_geom","( geom, other_attrs = {} )","<p>Update the associated place_geometry or create a new one\n"],["schemes","TaxaController","classes/TaxaController.html#method-i-schemes","()",""],["scientificName","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-scientificName","()",""],["scientificName","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-scientificName","()",""],["scientific_name","Observation","classes/Observation.html#method-i-scientific_name","()",""],["scientific_name","Taxon","classes/Taxon.html#method-i-scientific_name","()",""],["sciname_taxon","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-sciname_taxon","()","<p>Return a UBioTaxonAdapter for this name if this is a scientific name\n"],["score","ComputerVisionDemoUploadsController","classes/ComputerVisionDemoUploadsController.html#method-i-score","()",""],["search","CatalogueOfLife","classes/CatalogueOfLife.html#method-i-search","(options = {})",""],["search","ConabioService","classes/ConabioService.html#method-i-search","(q)","<p>Search for the specific cientific name\n"],["search","EolService","classes/EolService.html#method-i-search","(term, params = {})",""],["search","GooglePhotosApi","classes/GooglePhotosApi.html#method-i-search","( options = {} )",""],["search","GuidesController","classes/GuidesController.html#method-i-search","()",""],["search","Picasa","classes/Picasa.html#method-i-search","(q, options = {})","<p>This request does not require authentication. Returns a RubyPicasa::Search object containing the first …\n"],["search","PlacesController","classes/PlacesController.html#method-i-search","()",""],["search","ProjectsController","classes/ProjectsController.html#method-i-search","()",""],["search","TaxaController","classes/TaxaController.html#method-i-search","()","<p>/taxa/browse?q=bird /taxa/browse?q=bird&amp;places=1,2 TODO: /taxa/browse?q=bird&amp;places=usa-ca-berkeley,usa-ct-clinton …\n"],["search_criteria","ElasticModel","classes/ElasticModel.html#method-c-search_criteria","(options={})",""],["search_eol","EolPhoto","classes/EolPhoto.html#method-c-search_eol","(query, options = {})",""],["search_filters","ElasticModel","classes/ElasticModel.html#method-c-search_filters","(options={})",""],["search_hash","ElasticModel","classes/ElasticModel.html#method-c-search_hash","(options={})",""],["search_help","UBioService","classes/UBioService.html#method-i-search_help","(q)","<p>Wraps the method uBio uses for their autocomplete, which actually seems more robust than their web service. …\n"],["search_in_batches","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-search_in_batches","(raw_params, options={}, &block)",""],["search_query","Taxon","classes/Taxon.html#method-c-search_query","( query )","<p>rubocop:enable Metrics/ParameterLists\n"],["search_wikimedia_for_taxon","WikimediaCommonsPhoto","classes/WikimediaCommonsPhoto.html#method-c-search_wikimedia_for_taxon","(taxon_name, options = {})","<p>Retrieve WikimediaCommonsPhotos from Wikimedia Commons based on a taxon_name. Note that this is deeply …\n"],["secret_token","SoundcloudSound","classes/SoundcloudSound.html#method-i-secret_token","()",""],["seek_app","OauthApplication","classes/OauthApplication.html#method-c-seek_app","()",""],["select","BootstrapFormBuilder","classes/BootstrapFormBuilder.html#method-i-select","( method, choices = nil, options = {}, html_options = {}, &block )",""],["select_lexicon","DefaultFormBuilder","classes/DefaultFormBuilder.html#method-i-select_lexicon","( method, lexicons, options = {}, html_options = {} )",""],["selector","ObservationsController","classes/ObservationsController.html#method-i-selector","()","<p>Renders observation components as form fields for inclusion in  observation-picking form widgets\n"],["self_and_ancestor_ids","Place","classes/Place.html#method-i-self_and_ancestor_ids","()",""],["self_and_ancestor_ids","Taxon","classes/Taxon.html#method-i-self_and_ancestor_ids","()",""],["self_and_ancestors","Place","classes/Place.html#method-i-self_and_ancestors","()",""],["self_and_ancestors","Taxon","classes/Taxon.html#method-i-self_and_ancestors","()",""],["self_and_descendant_conditions","Place","classes/Place.html#method-i-self_and_descendant_conditions","()",""],["send_message","Message","classes/Message.html#method-i-send_message","()",""],["send_remember_cookie!","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-send_remember_cookie-21","()",""],["sent","MessagesController","classes/MessagesController.html#method-i-sent","()",""],["separator","ApplicationHelper","classes/ApplicationHelper.html#method-i-separator","()",""],["serial_id","ApplicationHelper","classes/ApplicationHelper.html#method-i-serial_id","()",""],["serializable_hash","Guide","classes/Guide.html#method-i-serializable_hash","( opts = nil )",""],["serializable_hash","GuidePhoto","classes/GuidePhoto.html#method-i-serializable_hash","(opts = nil)",""],["serializable_hash","Observation","classes/Observation.html#method-i-serializable_hash","(opts = nil)",""],["serializable_hash","ObservationSound","classes/ObservationSound.html#method-i-serializable_hash","( opts = nil )",""],["serializable_hash","Photo","classes/Photo.html#method-i-serializable_hash","( opts = nil )",""],["serializable_hash","Place","classes/Place.html#method-i-serializable_hash","(opts = nil)",""],["serializable_hash","SavedLocation","classes/SavedLocation.html#method-i-serializable_hash","( opts = nil )",""],["serializable_hash","TaxonName","classes/TaxonName.html#method-i-serializable_hash","( opts = nil )",""],["serializable_hash","TripTaxon","classes/TripTaxon.html#method-i-serializable_hash","(opts = nil)",""],["service","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-service","()",""],["session","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-session","()","<p>Should return the Picasa instance that retrieved this data.\n"],["session=","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-session-3D","(session)",""],["session_key","Announcement","classes/Announcement.html#method-i-session_key","()",""],["set_as_non_spammer_if_meets_criteria","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-set_as_non_spammer_if_meets_criteria","()",""],["set_cache_columns","ListedTaxon","classes/ListedTaxon.html#method-i-set_cache_columns","()",""],["set_captive","Observation","classes/Observation.html#method-i-set_captive","()",""],["set_community_taxon","Observation","classes/Observation.html#method-i-set_community_taxon","(options = {})",""],["set_community_taxon_before_save","Observation","classes/Observation.html#method-i-set_community_taxon_before_save","()",""],["set_coordinates","Observation","classes/Observation.html#method-i-set_coordinates","()",""],["set_curator_coordinate_access","ProjectObservation","classes/ProjectObservation.html#method-i-set_curator_coordinate_access","( options = {} )",""],["set_data_transfer_consent_at","User","classes/User.html#method-i-set_data_transfer_consent_at","()",""],["set_default_photos","GuideTaxon","classes/GuideTaxon.html#method-i-set_default_photos","(options = {})",""],["set_default_section","GuideTaxon","classes/GuideTaxon.html#method-i-set_default_section","(options = {})",""],["set_defaults_from_eol_collection","Guide","classes/Guide.html#method-i-set_defaults_from_eol_collection","( collection_url, options = {} )","<p>rubocop:enable Naming/AccessorMethodName\n"],["set_defaults_from_source_url","Guide","classes/Guide.html#method-i-set_defaults_from_source_url","( options = {} )","<p>rubocop:disable Naming/AccessorMethodName\n"],["set_disagreement","Identification","classes/Identification.html#method-i-set_disagreement","( options = {} )",""],["set_display_name","Place","classes/Place.html#method-i-set_display_name","()",""],["set_donorbox_donor_id_from_parent_user","UserParent","classes/UserParent.html#method-i-set_donorbox_donor_id_from_parent_user","()",""],["set_establishment_means","ListedTaxon","classes/ListedTaxon.html#method-i-set_establishment_means","()",""],["set_flaggable_content","Flag","classes/Flag.html#method-i-set_flaggable_content","()",""],["set_flaggable_user_id","Flag","classes/Flag.html#method-i-set_flaggable_user_id","()",""],["set_geom_from_latlon","Observation","classes/Observation.html#method-i-set_geom_from_latlon","(options = {})",""],["set_guide_taxon","GuideTaxon","classes/GuideTaxon.html#method-i-set_guide_taxon","()",""],["set_href_name","ObservationLink","classes/ObservationLink.html#method-i-set_href_name","()",""],["set_iconic_taxon","Observation","classes/Observation.html#method-i-set_iconic_taxon","()","<p>Set the iconic taxon if it hasn&#39;t been set\n"],["set_iconic_taxon","Taxon","classes/Taxon.html#method-i-set_iconic_taxon","( options = {} )","<p>Set the iconic taxon if it hasn&#39;t been set\n"],["set_iconic_taxon_for_observations_of","Taxon","classes/Taxon.html#method-c-set_iconic_taxon_for_observations_of","( taxon )",""],["set_is_valid","TaxonName","classes/TaxonName.html#method-i-set_is_valid","()",""],["set_last_identification_as_current","Identification","classes/Identification.html#method-i-set_last_identification_as_current","()",""],["set_last_synced_at","CheckList","classes/CheckList.html#method-i-set_last_synced_at","()",""],["set_latlon_from_place_guess","Observation","classes/Observation.html#method-i-set_latlon_from_place_guess","()",""],["set_license","GoogleStreetViewPhoto","classes/GoogleStreetViewPhoto.html#method-i-set_license","()",""],["set_license","GuideSection","classes/GuideSection.html#method-i-set_license","()",""],["set_license","Observation","classes/Observation.html#method-i-set_license","()",""],["set_license","Photo","classes/Photo.html#method-i-set_license","()",""],["set_license","Sound","classes/Sound.html#method-i-set_license","()",""],["set_locale","ApplicationController","classes/ApplicationController.html#method-i-set_locale","()","<p>set the locale for the current session. If the user is logged in, also update their preferred locale …\n"],["set_locale","User","classes/User.html#method-i-set_locale","()",""],["set_names_from_taxon","GuideTaxon","classes/GuideTaxon.html#method-i-set_names_from_taxon","()",""],["set_observation_photos_count","ObservationPhoto","classes/ObservationPhoto.html#method-i-set_observation_photos_count","()",""],["set_observation_quality_grade","ObservationPhoto","classes/ObservationPhoto.html#method-i-set_observation_quality_grade","()",""],["set_observation_quality_grade","ObservationSound","classes/ObservationSound.html#method-i-set_observation_quality_grade","()",""],["set_observation_requirements_updated_at","Project","classes/Project.html#method-i-set_observation_requirements_updated_at","( options = {} )",""],["set_observation_sounds_count","ObservationSound","classes/ObservationSound.html#method-i-set_observation_sounds_count","()",""],["set_observations_taxa_for_user","Observation","classes/Observation.html#method-c-set_observations_taxa_for_user","( user, options = {} )",""],["set_observations_taxa_if_pref_changed","User","classes/User.html#method-i-set_observations_taxa_if_pref_changed","()",""],["set_old_list","ListedTaxon","classes/ListedTaxon.html#method-i-set_old_list","()",""],["set_parent","Trip","classes/Trip.html#method-i-set_parent","()",""],["set_photo_from_external","Taxon","classes/Taxon.html#method-i-set_photo_from_external","()","<p>mostly just a convenience for populating an empty database\n"],["set_photo_from_observations","Taxon","classes/Taxon.html#method-i-set_photo_from_observations","()",""],["set_photos","TaxaController","classes/TaxaController.html#method-i-set_photos","()","<p>Basically the same as update photos except it just takes a JSON array of photo-like objects congtaining …\n"],["set_pi_consent_at","User","classes/User.html#method-i-set_pi_consent_at","()",""],["set_place_guess_from_latlon","Observation","classes/Observation.html#method-i-set_place_guess_from_latlon","()",""],["set_place_id","ListedTaxon","classes/ListedTaxon.html#method-i-set_place_id","()",""],["set_previous_observation_taxon","Identification","classes/Identification.html#method-i-set_previous_observation_taxon","()",""],["set_primary_listing","ListedTaxon","classes/ListedTaxon.html#method-i-set_primary_listing","()",""],["set_published_at","Guide","classes/Guide.html#method-i-set_published_at","()",""],["set_quality_grade","Observation","classes/Observation.html#method-i-set_quality_grade","(options = {})",""],["set_quality_grade","Observation","classes/Observation.html#method-c-set_quality_grade","(id)",""],["set_rank_level","Taxon","classes/Taxon.html#method-i-set_rank_level","()",""],["set_ranked_ancestors","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-set_ranked_ancestors","( ranked_ancestors )",""],["set_read_at","Message","classes/Message.html#method-i-set_read_at","()",""],["set_relationship","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-set_relationship","()",""],["set_resource_owner","UpdateAction","classes/UpdateAction.html#method-i-set_resource_owner","()",""],["set_scientific_taxon_name","Taxon","classes/Taxon.html#method-i-set_scientific_taxon_name","()","<p>Create a scientific taxon name matching this taxon&#39;s name if one doesn&#39;t already exist.\n"],["set_scopes","OauthApplication","classes/OauthApplication.html#method-i-set_scopes","()",""],["set_show_private_coordinates","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-set_show_private_coordinates","( show_private_coordinates )",""],["set_site_title","TaxonLink","classes/TaxonLink.html#method-i-set_site_title","()",""],["set_source_id","ListedTaxon","classes/ListedTaxon.html#method-i-set_source_id","()",""],["set_spammer","UsersController","classes/UsersController.html#method-i-set_spammer","()",""],["set_subject_for_reply","Message","classes/Message.html#method-i-set_subject_for_reply","()",""],["set_taxon","Guide","classes/Guide.html#method-c-set_taxon","( guide_id )",""],["set_taxon","Guide","classes/Guide.html#method-i-set_taxon","()",""],["set_taxon_from_probable_taxon","Observation","classes/Observation.html#method-i-set_taxon_from_probable_taxon","()",""],["set_taxon_from_species_guess","Observation","classes/Observation.html#method-i-set_taxon_from_species_guess","()",""],["set_taxon_from_taxon_name","Observation","classes/Observation.html#method-i-set_taxon_from_taxon_name","()",""],["set_taxon_geoprivacy","Observation","classes/Observation.html#method-i-set_taxon_geoprivacy","()",""],["set_taxon_name","TaxonSchemeTaxon","classes/TaxonSchemeTaxon.html#method-i-set_taxon_name","()",""],["set_taxon_photo","Observation","classes/Observation.html#method-i-set_taxon_photo","()",""],["set_thread_id","Message","classes/Message.html#method-i-set_thread_id","()",""],["set_time_in_time_zone","Observation","classes/Observation.html#method-i-set_time_in_time_zone","()","<p>Force time_observed_at into the time zone\n"],["set_time_zone","ApplicationController","classes/ApplicationController.html#method-i-set_time_zone","()","<p>Grab current user&#39;s time zone and set it as the default\n"],["set_time_zone","Observation","classes/Observation.html#method-i-set_time_zone","()","<p>Set the time_zone of this observation if coordinates changes or zone not already set\n"],["set_time_zone","User","classes/User.html#method-i-set_time_zone","()",""],["set_title","CheckList","classes/CheckList.html#method-i-set_title","()",""],["set_unique_hash","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-set_unique_hash","()",""],["set_updated_at_if_preferences_changed","Project","classes/Project.html#method-i-set_updated_at_if_preferences_changed","()",""],["set_updater_id","ListedTaxon","classes/ListedTaxon.html#method-i-set_updater_id","()",""],["set_uri","Observation","classes/Observation.html#method-i-set_uri","()",""],["set_uri","User","classes/User.html#method-i-set_uri","()",""],["set_urls","ComputerVisionDemoUpload","classes/ComputerVisionDemoUpload.html#method-i-set_urls","()",""],["set_urls","LocalPhoto","classes/LocalPhoto.html#method-i-set_urls","()",""],["set_user","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-set_user","()",""],["set_user_id","ListedTaxon","classes/ListedTaxon.html#method-i-set_user_id","()",""],["set_uuid","ActsAsUUIDable","classes/ActsAsUUIDable.html#method-i-set_uuid","()",""],["set_uuid","ControlledTerm","classes/ControlledTerm.html#method-i-set_uuid","()",""],["set_uuid","Flag","classes/Flag.html#method-i-set_uuid","()",""],["set_uuid","ObservationField","classes/ObservationField.html#method-i-set_uuid","()",""],["set_uuid","Photo","classes/Photo.html#method-i-set_uuid","()",""],["set_uuid","Place","classes/Place.html#method-i-set_uuid","()",""],["set_uuid","Post","classes/Post.html#method-i-set_uuid","()",""],["set_uuid","Sound","classes/Sound.html#method-i-set_uuid","()",""],["set_uuid","Taxon","classes/Taxon.html#method-i-set_uuid","()",""],["set_uuid","User","classes/User.html#method-i-set_uuid","()",""],["set_view","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-set_view","(view)",""],["set_view","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-set_view","(view)",""],["set_view","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-set_view","( view )",""],["set_view","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-set_view","(view)",""],["set_view","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-set_view","(view)",""],["set_view","DarwinCore::User::InstanceMethods","classes/DarwinCore/User/InstanceMethods.html#method-i-set_view","(view)",""],["set_wikipedia_summary","Taxon","classes/Taxon.html#method-i-set_wikipedia_summary","( options = {} )",""],["set_wikipedia_summary_later","Taxon","classes/Taxon.html#method-i-set_wikipedia_summary_later","()",""],["setup_email","PasswordMailer","classes/PasswordMailer.html#method-i-setup_email","(user)",""],["setup_map_tag_attrs","ApplicationHelper","classes/ApplicationHelper.html#method-i-setup_map_tag_attrs","(options = {})",""],["setup_page","WikiPagesController","classes/WikiPagesController.html#method-i-setup_page","()",""],["shareable_description","ApplicationHelper","classes/ApplicationHelper.html#method-i-shareable_description","( text )",""],["short_description","Observation","classes/Observation.html#method-i-short_description","()",""],["short_observation_description","ObservationsHelper","classes/ObservationsHelper.html#method-i-short_observation_description","(observation)",""],["short_url","Site","classes/Site.html#method-i-short_url","()",""],["should_generate_new_friendly_id?","Place","classes/Place.html#method-i-should_generate_new_friendly_id-3F","()",""],["should_generate_new_friendly_id?","Project","classes/Project.html#method-i-should_generate_new_friendly_id-3F","()",""],["show","AnnotationsController","classes/AnnotationsController.html#method-i-show","()",""],["show","AnnouncementsController","classes/AnnouncementsController.html#method-i-show","()",""],["show","AssessmentSectionsController","classes/AssessmentSectionsController.html#method-i-show","()",""],["show","AssessmentsController","classes/AssessmentsController.html#method-i-show","()",""],["show","AtlasesController","classes/AtlasesController.html#method-i-show","()",""],["show","CalendarsController","classes/CalendarsController.html#method-i-show","()",""],["show","CheckListsController","classes/CheckListsController.html#method-i-show","()",""],["show","CommentsController","classes/CommentsController.html#method-i-show","()",""],["show","CompleteSetsController","classes/CompleteSetsController.html#method-i-show","()",""],["show","DataPartnersController","classes/DataPartnersController.html#method-i-show","()",""],["show","FlagsController","classes/FlagsController.html#method-i-show","()",""],["show","FlowTasksController","classes/FlowTasksController.html#method-i-show","()",""],["show","GuidePhotosController","classes/GuidePhotosController.html#method-i-show","()","<p>GET /guide_photos/1 GET /guide_photos/1.json\n"],["show","GuideRangesController","classes/GuideRangesController.html#method-i-show","()","<p>GET /guide_ranges/1 GET /guide_ranges/1.json\n"],["show","GuideSectionsController","classes/GuideSectionsController.html#method-i-show","()","<p>GET /guide_sections/1 GET /guide_sections/1.json\n"],["show","GuideTaxaController","classes/GuideTaxaController.html#method-i-show","()","<p>GET /guide_taxa/1 GET /guide_taxa/1.json\n"],["show","GuidesController","classes/GuidesController.html#method-i-show","()","<p>GET /guides/1 GET /guides/1.json\n"],["show","IdentificationsController","classes/IdentificationsController.html#method-i-show","()",""],["show","ListedTaxaController","classes/ListedTaxaController.html#method-i-show","()",""],["show","MessagesController","classes/MessagesController.html#method-i-show","()",""],["show","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-show","()",""],["show","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-show","()","<p>GET /observation_fields/1 GET /observation_fields/1.xml\n"],["show","ObservationPhotosController","classes/ObservationPhotosController.html#method-i-show","()",""],["show","ObservationSoundsController","classes/ObservationSoundsController.html#method-i-show","()",""],["show","ObservationsController","classes/ObservationsController.html#method-i-show","()","<p>GET /observations/1 GET /observations/1.xml\n"],["show","PhotosController","classes/PhotosController.html#method-i-show","()",""],["show","PlacesController","classes/PlacesController.html#method-i-show","()",""],["show","PostsController","classes/PostsController.html#method-i-show","()",""],["show","ProjectsController","classes/ProjectsController.html#method-i-show","()",""],["show","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-show","()",""],["show","SitesController","classes/SitesController.html#method-i-show","()","<p>GET /sites/1 GET /sites/1.json\n"],["show","SoundsController","classes/SoundsController.html#method-i-show","()",""],["show","SourcesController","classes/SourcesController.html#method-i-show","()",""],["show","TaxaController","classes/TaxaController.html#method-i-show","()",""],["show","TaxonChangesController","classes/TaxonChangesController.html#method-i-show","()",""],["show","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-show","()",""],["show","TaxonLinksController","classes/TaxonLinksController.html#method-i-show","()",""],["show","TaxonNamesController","classes/TaxonNamesController.html#method-i-show","()",""],["show","TaxonRangesController","classes/TaxonRangesController.html#method-i-show","()",""],["show","TaxonSchemesController","classes/TaxonSchemesController.html#method-i-show","()",""],["show","TripsController","classes/TripsController.html#method-i-show","()","<p>api :GET, &#39;/trips/:id&#39;, “Get info about an existing trip” param :id, :number, :required …\n"],["show","UsersController","classes/UsersController.html#method-i-show","()",""],["show_contributor","ProjectsController","classes/ProjectsController.html#method-i-show_contributor","()",""],["show_guide","Shared::GuideModule","classes/Shared/GuideModule.html#method-i-show_guide","()",""],["show_guide_widget","Shared::GuideModule","classes/Shared/GuideModule.html#method-i-show_guide_widget","()",""],["show_observation_coordinates?","ObservationsHelper","classes/ObservationsHelper.html#method-i-show_observation_coordinates-3F","(observation)",""],["show_section","AssessmentsController","classes/AssessmentsController.html#method-i-show_section","()",""],["simple_format_with_structure","ApplicationHelper","classes/ApplicationHelper.html#method-i-simple_format_with_structure","( text, options )",""],["simple_namebank_search","UBioService","classes/UBioService.html#method-i-simple_namebank_search","(name)","<p>Calls the searchHelp endpoint and returns an array of hashes in the form\n\n<pre><code>:namebankID =&gt; 111111, :name ...\n</code></pre>\n"],["simplified_geom","PlaceGeometry","classes/PlaceGeometry.html#method-i-simplified_geom","()",""],["single_taxon_for_name","Observation","classes/Observation.html#method-i-single_taxon_for_name","(name)",""],["single_taxon_for_name","Taxon","classes/Taxon.html#method-c-single_taxon_for_name","( name, options = {} )",""],["single_taxon_id_for_name","Observation","classes/Observation.html#method-i-single_taxon_id_for_name","(name)",""],["site_admin_of_user_required","UsersController","classes/UsersController.html#method-i-site_admin_of_user_required","()",""],["site_search_params","ObservationSearch::ClassMethods","classes/ObservationSearch/ClassMethods.html#method-i-site_search_params","(site, params = {})",""],["sized_url","Photo","classes/Photo.html#method-i-sized_url","( size = \"original\" )",""],["skip_for_non_images","WikiPageAttachment","classes/WikiPageAttachment.html#method-i-skip_for_non_images","()",""],["skip_row?","BulkObservationFile","classes/BulkObservationFile.html#method-i-skip_row-3F","( row )",""],["skip_update_for_draft","Post","classes/Post.html#method-i-skip_update_for_draft","()",""],["slug_candidates","Project","classes/Project.html#method-i-slug_candidates","()",""],["slugs_to_ids","Project","classes/Project.html#method-c-slugs_to_ids","(slugs)",""],["small_url","GuideRange","classes/GuideRange.html#method-i-small_url","()",""],["small_url","Photo","classes/Photo.html#method-i-small_url","()",""],["some_rights_reserved?","Shared::LicenseModule","classes/Shared/LicenseModule.html#method-i-some_rights_reserved-3F","()",""],["sort_by_date","UpdateAction","classes/UpdateAction.html#method-i-sort_by_date","()",""],["sort_lexicons","DefaultFormBuilder","classes/DefaultFormBuilder.html#method-i-sort_lexicons","( lexicons )",""],["sortable_table_header","ApplicationHelper","classes/ApplicationHelper.html#method-i-sortable_table_header","( header, options = {} )",""],["sound_url","Observation","classes/Observation.html#method-i-sound_url","()",""],["sounds?","Observation","classes/Observation.html#method-i-sounds-3F","()",""],["source","Ratatosk::NameProviders::ColNameProvider","classes/Ratatosk/NameProviders/ColNameProvider.html#method-c-source","()",""],["source","Ratatosk::NameProviders::NZORNameProvider","classes/Ratatosk/NameProviders/NZORNameProvider.html#method-c-source","()",""],["source","Ratatosk::NameProviders::UBioNameProvider","classes/Ratatosk/NameProviders/UBioNameProvider.html#method-c-source","()",""],["source_options","FlickrIdentity","classes/FlickrIdentity.html#method-i-source_options","()",""],["source_title","LocalPhoto","classes/LocalPhoto.html#method-i-source_title","()",""],["source_title","Photo","classes/Photo.html#method-i-source_title","()",""],["source_url","Photo","classes/Photo.html#method-i-source_url","()",""],["spammable?","ActiveRecord::Base","classes/ActiveRecord/Base.html#method-c-spammable-3F","()",""],["spammable_models","Rakismet","classes/Rakismet.html#method-c-spammable_models","()",""],["spatial","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-spatial","()",""],["species_common_name_cannot_match_taxon_name","TaxonName","classes/TaxonName.html#method-i-species_common_name_cannot_match_taxon_name","()",""],["species_for_infraspecies","ListedTaxon","classes/ListedTaxon.html#method-c-species_for_infraspecies","(lt)",""],["species_match","GbifService","classes/GbifService.html#method-c-species_match","(options = {})",""],["species_or_lower?","Taxon","classes/Taxon.html#method-i-species_or_lower-3F","()","<p>Determine whether this taxon is at or below the rank of species\n"],["specificEpithet","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-specificEpithet","()",""],["split_large_array","Project","classes/Project.html#method-i-split_large_array","(list)",""],["square_url","FacebookPhoto","classes/FacebookPhoto.html#method-i-square_url","()","<p>facebook doesn&#39;t provide a square image so for now, just return the thumbnail image\n"],["square_url","Photo","classes/Photo.html#method-i-square_url","()",""],["start_time=","Project","classes/Project.html#method-i-start_time-3D","(value)",""],["stateProvince","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-stateProvince","()",""],["stats","ObservationsController","classes/ObservationsController.html#method-i-stats","()",""],["stats","ProjectsController","classes/ProjectsController.html#method-i-stats","()",""],["stats_generated_for_day?","SiteStatistic","classes/SiteStatistic.html#method-c-stats_generated_for_day-3F","(at_time = Time.now)",""],["stats_slideshow","ProjectsController","classes/ProjectsController.html#method-i-stats_slideshow","()",""],["status_name","ConservationStatus","classes/ConservationStatus.html#method-i-status_name","()",""],["still_is_marked","Atlas","classes/Atlas.html#method-c-still_is_marked","( atlas )",""],["straddles_date_line?","Place","classes/Place.html#method-i-straddles_date_line-3F","()",""],["streaks","YearStatistic","classes/YearStatistic.html#method-c-streaks","( year, options = {} )",""],["strip_allowed_values","ObservationField","classes/ObservationField.html#method-i-strip_allowed_values","()",""],["strip_author","TaxonName","classes/TaxonName.html#method-c-strip_author","( name )",""],["strip_description","ObservationField","classes/ObservationField.html#method-i-strip_description","()",""],["strip_login","User","classes/User.html#method-i-strip_login","()",""],["strip_name","ObservationField","classes/ObservationField.html#method-i-strip_name","()",""],["strip_name","Taxon","classes/Taxon.html#method-i-strip_name","()",""],["strip_name","TaxonName","classes/TaxonName.html#method-i-strip_name","()",""],["strip_name","User","classes/User.html#method-i-strip_name","()",""],["strip_species_guess","Observation","classes/Observation.html#method-i-strip_species_guess","()","<p>Trim whitespace around species guess\n"],["strip_strings","UserParent","classes/UserParent.html#method-i-strip_strings","()",""],["strip_tags","ObservationField","classes/ObservationField.html#method-i-strip_tags","()","<p>usually we would sanitize on the front, but we use these values in json a  lot, so it&#39;s safer to …\n"],["strip_tags","TaxonName","classes/TaxonName.html#method-i-strip_tags","()",""],["strip_title","Project","classes/Project.html#method-i-strip_title","()",""],["strip_value","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-strip_value","()",""],["stripped_first_paragraph_of_text","ApplicationHelper","classes/ApplicationHelper.html#method-i-stripped_first_paragraph_of_text","(text,split = nil)",""],["subscribe","SubscriptionsController","classes/SubscriptionsController.html#method-i-subscribe","()",""],["subscribe_curators_to_section","AssessmentSection","classes/AssessmentSection.html#method-i-subscribe_curators_to_section","()",""],["subscribe_to_assessment_sections","ProjectUser","classes/ProjectUser.html#method-i-subscribe_to_assessment_sections","()",""],["subscribe_to_assessment_sections_later","ProjectUser","classes/ProjectUser.html#method-i-subscribe_to_assessment_sections_later","()",""],["subscribed_to?","User","classes/User.html#method-i-subscribed_to-3F","(resource)",""],["subtree_conditions","Taxon","classes/Taxon.html#method-i-subtree_conditions","()",""],["suggest_login","User","classes/User.html#method-c-suggest_login","(requested_login)","<p>given a requested login, will try to find existing users with that login and suggest handle2, handle3, …\n"],["summarize","Benchmarker","classes/Benchmarker.html#method-i-summarize","( options = {} )",""],["summary","StatsController","classes/StatsController.html#method-i-summary","()",""],["summary","WikipediaService","classes/WikipediaService.html#method-i-summary","(title, options = {})",""],["summary_from_parsed","WikipediaService","classes/WikipediaService.html#method-i-summary_from_parsed","( parsed )",""],["suspend","UsersController","classes/UsersController.html#method-i-suspend","()",""],["suspend_if_spammer","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-suspend_if_spammer","()",""],["sw_latlon","Observation","classes/Observation.html#method-i-sw_latlon","()",""],["sweep_comment","CommentSweeper","classes/CommentSweeper.html#method-i-sweep_comment","(item)",""],["sync","EolPhoto","classes/EolPhoto.html#method-i-sync","()",""],["sync","FlickrPhoto","classes/FlickrPhoto.html#method-i-sync","()","<p>Sync photo properties with Flickr original.  Right now, that just means the URLs.\n"],["sync","GuideTaxaController","classes/GuideTaxaController.html#method-i-sync","()",""],["sync","Photo","classes/Photo.html#method-i-sync","()","<p>Sync photo object with its native source.  Implemented by descendents\n"],["sync","PicasaPhoto","classes/PicasaPhoto.html#method-i-sync","()","<p>TODO Sync photo object with its native source.\n"],["sync_check_lists_with_parents","CheckList","classes/CheckList.html#method-c-sync_check_lists_with_parents","(options = {})",""],["sync_eol","GuideTaxon","classes/GuideTaxon.html#method-i-sync_eol","(options = {})",""],["sync_eol_photos","GuideTaxon","classes/GuideTaxon.html#method-i-sync_eol_photos","(options = {})",""],["sync_eol_ranges","GuideTaxon","classes/GuideTaxon.html#method-i-sync_eol_ranges","(options = {})",""],["sync_eol_sections","GuideTaxon","classes/GuideTaxon.html#method-i-sync_eol_sections","(options = {})",""],["sync_observation_links","DataPartner","classes/DataPartner.html#method-i-sync_observation_links","( options = {} )",""],["sync_observation_links","DataPartner","classes/DataPartner.html#method-c-sync_observation_links","( options = {} )",""],["sync_observation_links_with_logger","DataPartner","classes/DataPartner.html#method-c-sync_observation_links_with_logger","( logger )",""],["sync_parent_check_list","ListedTaxon","classes/ListedTaxon.html#method-i-sync_parent_check_list","()",""],["sync_site_content","GuideTaxon","classes/GuideTaxon.html#method-i-sync_site_content","(options = {})",""],["sync_species_if_infraspecies","ListedTaxon","classes/ListedTaxon.html#method-i-sync_species_if_infraspecies","()",""],["sync_with_parent","CheckList","classes/CheckList.html#method-i-sync_with_parent","(options = {})",""],["synonyms","TaxaController","classes/TaxaController.html#method-i-synonyms","()",""],["system_call","DataPartnerLinkers::DataPartnerLinker","classes/DataPartnerLinkers/DataPartnerLinker.html#method-i-system_call","(cmd)",""],["system_places","Observation","classes/Observation.html#method-i-system_places","(options = {})","<p>The places that are theoretically controlled by site admins\n"],["system_places_for_latlon","Observation","classes/Observation.html#method-c-system_places_for_latlon","( lat, lon, options = {} )",""],["tabulate","TripsController","classes/TripsController.html#method-i-tabulate","()",""],["tag_flickr_photos","TaxaController","classes/TaxaController.html#method-i-tag_flickr_photos","()",""],["tag_flickr_photos_from_observations","TaxaController","classes/TaxaController.html#method-i-tag_flickr_photos_from_observations","()",""],["tag_to_xml","ApplicationHelper","classes/ApplicationHelper.html#method-i-tag_to_xml","(tag, xml)",""],["tags","Guide","classes/Guide.html#method-i-tags","()",""],["tags_to_taxa","Taxon","classes/Taxon.html#method-c-tags_to_taxa","( tags, options = {} )","<p>Convert an array of strings to taxa\n"],["taxa","INatAPIService","classes/INatAPIService.html#method-c-taxa","(params={}, options={})",""],["taxa","ObservationsController","classes/ObservationsController.html#method-i-taxa","()",""],["taxa","PlacesController","classes/PlacesController.html#method-i-taxa","()",""],["taxa","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-taxa","()",""],["taxa_covered_by_taxon_framework","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-taxa_covered_by_taxon_framework","()",""],["taxa_unobserved_before_date","User","classes/User.html#method-i-taxa_unobserved_before_date","( date, taxa = [] )","<p>given an array of taxa, return the taxa and ancestors that were not observed before the given date.  …\n"],["taxobox","TaxaController","classes/TaxaController.html#method-i-taxobox","()",""],["taxon","Annotation","classes/Annotation.html#method-i-taxon","()",""],["taxon","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-taxon","()",""],["taxon","Ratatosk::NameProviders::ColTaxonNameAdapter","classes/Ratatosk/NameProviders/ColTaxonNameAdapter.html#method-i-taxon","()","<p>Override taxon to make sure we always check to see if a taxon for this name has been saved since the …\n"],["taxon","Ratatosk::NameProviders::NZORTaxonNameAdapter","classes/Ratatosk/NameProviders/NZORTaxonNameAdapter.html#method-i-taxon","()","<p>Override taxon to make sure we always check to see if a taxon for this name has been saved since the …\n"],["taxon","Ratatosk::NameProviders::UBioTaxonNameAdapter","classes/Ratatosk/NameProviders/UBioTaxonNameAdapter.html#method-i-taxon","()","<p>Override taxon to make sure we always check to see if a taxon for this name has been saved since the …\n"],["taxon","TaxonNamesController","classes/TaxonNamesController.html#method-i-taxon","()",""],["taxon=","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-taxon-3D","(taxon)",""],["taxonID","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-taxonID","()",""],["taxonID","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-taxonID","()",""],["taxonID","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-taxonID","()",""],["taxonRank","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-taxonRank","()",""],["taxonRank","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-taxonRank","()",""],["taxon_and_ancestors","Observation","classes/Observation.html#method-i-taxon_and_ancestors","()",""],["taxon_cant_be_its_own_ancestor","Taxon","classes/Taxon.html#method-i-taxon_cant_be_its_own_ancestor","()",""],["taxon_change_commit_records_unique_hash","TaxonChange","classes/TaxonChange.html#method-i-taxon_change_commit_records_unique_hash","()",""],["taxon_changes_count","Taxon","classes/Taxon.html#method-i-taxon_changes_count","()",""],["taxon_class","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-taxon_class","()",""],["taxon_common_name","ListedTaxon","classes/ListedTaxon.html#method-i-taxon_common_name","()",""],["taxon_curator_required","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-taxon_curator_required","()",""],["taxon_describers","Site","classes/Site.html#method-i-taxon_describers","()",""],["taxon_for_name","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-taxon_for_name","( name )",""],["taxon_framework_covers","TaxonCurator","classes/TaxonCurator.html#method-i-taxon_framework_covers","()",""],["taxon_framework_has_source","TaxonFrameworkRelationship","classes/TaxonFrameworkRelationship.html#method-i-taxon_framework_has_source","()",""],["taxon_framework_taxon_name","TaxonFramework","classes/TaxonFramework.html#method-i-taxon_framework_taxon_name","()",""],["taxon_frameworks_for_dropdowns","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-taxon_frameworks_for_dropdowns","( taxon_framework_relationship_taxa = nil )",""],["taxon_id","Annotation","classes/Annotation.html#method-i-taxon_id","()",""],["taxon_image","TaxaHelper","classes/TaxaHelper.html#method-i-taxon_image","(taxon, params = {})","<p>Image tag for a taxon.  Returns the first assoc. photo if there is one, otherwise the iconic taxon icon. …\n"],["taxon_image_url","TaxaHelper","classes/TaxaHelper.html#method-i-taxon_image_url","(taxon, params = {})",""],["taxon_matches_curator_identification?","ListedTaxon","classes/ListedTaxon.html#method-i-taxon_matches_curator_identification-3F","()",""],["taxon_matches_observation","ListedTaxon","classes/ListedTaxon.html#method-i-taxon_matches_observation","()",""],["taxon_name","Assessment","classes/Assessment.html#method-i-taxon_name","()",""],["taxon_name","Identification","classes/Identification.html#method-i-taxon_name","()",""],["taxon_name","ListedTaxon","classes/ListedTaxon.html#method-i-taxon_name","()",""],["taxon_photos_with_backfill","Taxon","classes/Taxon.html#method-i-taxon_photos_with_backfill","( options = {} )",""],["taxon_range_creator","TaxonRangesHelper","classes/TaxonRangesHelper.html#method-i-taxon_range_creator","( taxon_range )",""],["taxon_range_file_display_name","TaxonRangesHelper","classes/TaxonRangesHelper.html#method-i-taxon_range_file_display_name","( tr )",""],["taxon_range_kml_url","TaxaHelper","classes/TaxaHelper.html#method-i-taxon_range_kml_url","(options = {})",""],["taxon_range_kml_url","Taxon","classes/Taxon.html#method-i-taxon_range_kml_url","()",""],["taxon_range_updater","TaxonRangesHelper","classes/TaxonRangesHelper.html#method-i-taxon_range_updater","( taxon_range )",""],["taxon_rank","Identification","classes/Identification.html#method-i-taxon_rank","()",""],["taxon_schemes_count","Taxon","classes/Taxon.html#method-i-taxon_schemes_count","()",""],["taxon_stats","ObservationsController","classes/ObservationsController.html#method-i-taxon_stats","()",""],["taxon_summary","ObservationsController","classes/ObservationsController.html#method-i-taxon_summary","()",""],["taxon_to_json","TaxaHelper","classes/TaxaHelper.html#method-i-taxon_to_json","(taxon, options = {})","<p>Lame but simple way to jsonify a taxon\n"],["taxonomic_taxon_list","ApplicationHelper","classes/ApplicationHelper.html#method-i-taxonomic_taxon_list","(taxa, options = {}, &block)",""],["taxonomy_details","TaxaController","classes/TaxaController.html#method-i-taxonomy_details","()",""],["term_label","ControlledTerm","classes/ControlledTerm.html#method-i-term_label","(options = { })",""],["term_names","DarwinCore::Occurrence","classes/DarwinCore/Occurrence.html#method-c-term_names","( terms )",""],["terms","ListRule","classes/ListRule.html#method-i-terms","()","<p>Pretty string representation of this rule, like “occurs in Berkeley, CA”\n"],["terms","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-terms","()",""],["terms","ProjectsController","classes/ProjectsController.html#method-i-terms","()",""],["terms","Rule","classes/Rule.html#method-i-terms","()",""],["test_groups_array","User","classes/User.html#method-i-test_groups_array","()",""],["thread_flags","Message","classes/Message.html#method-i-thread_flags","()",""],["threatened?","Taxon","classes/Taxon.html#method-i-threatened-3F","( options = {} )",""],["threatened_in_lat_lon?","Taxon","classes/Taxon.html#method-i-threatened_in_lat_lon-3F","( lat, lon )",""],["threatened_in_place?","Taxon","classes/Taxon.html#method-i-threatened_in_place-3F","( place )",""],["threatened_status","Taxon","classes/Taxon.html#method-i-threatened_status","( options = {} )",""],["thumb_name","RubyPicasa::ThumbnailUrl","classes/RubyPicasa/ThumbnailUrl.html#method-i-thumb_name","()","<p>The name of the current thumbnail. For possible names, see Photo#url\n"],["thumb_url","GuideRange","classes/GuideRange.html#method-i-thumb_url","()",""],["thumb_url","Photo","classes/Photo.html#method-i-thumb_url","()",""],["thumbnail","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-thumbnail","(thumb_name)","<p>See <code>url</code> for possible image sizes\n"],["thumbnailURL","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-thumbnailURL","()",""],["time_observed_at_in_zone","Observation","classes/Observation.html#method-i-time_observed_at_in_zone","()","<p>Return time_observed_at in the observation&#39;s time zone\n"],["time_observed_at_utc","Observation","classes/Observation.html#method-i-time_observed_at_utc","()",""],["time_zone_for_lat_lng","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-time_zone_for_lat_lng","( lat, lng )",""],["time_zone_for_options","YearStatistic","classes/YearStatistic.html#method-c-time_zone_for_options","( options = {} )",""],["time_zone_from_lat_lng","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-time_zone_from_lat_lng","( lat, lng )",""],["time_zone_select","DefaultFormBuilder","classes/DefaultFormBuilder.html#method-i-time_zone_select","( method, priority_zones = nil, options = {}, html_options = {} )","<p>Override to get better attrs in there\n"],["timezone_object","Observation","classes/Observation.html#method-i-timezone_object","()",""],["timezone_offset","Observation","classes/Observation.html#method-i-timezone_offset","()",""],["tip","TaxaController","classes/TaxaController.html#method-i-tip","()",""],["title_by_user","ApplicationHelper","classes/ApplicationHelper.html#method-i-title_by_user","( text )",""],["title_for_observation_params","ObservationsHelper","classes/ObservationsHelper.html#method-i-title_for_observation_params","(options = {})",""],["to_csv","Array","classes/Array.html#method-i-to_csv","(options = {}, csv_options = {})",""],["to_csv","ProjectObservation","classes/ProjectObservation.html#method-c-to_csv","(project_observations, options = {})","<p>Static ##############################################################\n"],["to_csv_column","ProjectObservation","classes/ProjectObservation.html#method-i-to_csv_column","(column, options = {})",""],["to_local_sound","SoundcloudSound","classes/SoundcloudSound.html#method-i-to_local_sound","()","<p>Return a <strong>new</strong> record with this one&#39;s attributes and the attached file\n"],["to_local_sound!","SoundcloudSound","classes/SoundcloudSound.html#method-i-to_local_sound-21","()","<p>Convert existing to local sound and save\n"],["to_ngz","Guide","classes/Guide.html#method-i-to_ngz","( options = {} )",""],["to_observation","ComputerVisionDemoUpload","classes/ComputerVisionDemoUpload.html#method-i-to_observation","(options = {})",""],["to_observation","FacebookPhoto","classes/FacebookPhoto.html#method-i-to_observation","()",""],["to_observation","FlickrPhoto","classes/FlickrPhoto.html#method-i-to_observation","()",""],["to_observation","LocalPhoto","classes/LocalPhoto.html#method-i-to_observation","(options = {})",""],["to_observation","LocalSound","classes/LocalSound.html#method-i-to_observation","()",""],["to_observation","PicasaPhoto","classes/PicasaPhoto.html#method-i-to_observation","()",""],["to_observation","Sound","classes/Sound.html#method-i-to_observation","()",""],["to_observation","SoundcloudSound","classes/SoundcloudSound.html#method-i-to_observation","()",""],["to_param","Assessment","classes/Assessment.html#method-i-to_param","()",""],["to_param","AssessmentSection","classes/AssessmentSection.html#method-i-to_param","()",""],["to_param","List","classes/List.html#method-i-to_param","()",""],["to_param","Post","classes/Post.html#method-i-to_param","()",""],["to_param","Taxon","classes/Taxon.html#method-i-to_param","()",""],["to_plain_s","Comment","classes/Comment.html#method-i-to_plain_s","(options = {})",""],["to_plain_s","Identification","classes/Identification.html#method-i-to_plain_s","(options = {})",""],["to_plain_s","ListedTaxon","classes/ListedTaxon.html#method-i-to_plain_s","()",""],["to_plain_s","Observation","classes/Observation.html#method-i-to_plain_s","(options = {})",""],["to_plain_s","Photo","classes/Photo.html#method-i-to_plain_s","()",""],["to_plain_s","Post","classes/Post.html#method-i-to_plain_s","(options = {})",""],["to_plain_s","Taxon","classes/Taxon.html#method-i-to_plain_s","( options = {} )",""],["to_plain_s","User","classes/User.html#method-i-to_plain_s","()",""],["to_recursive_ostruct","FlickrCache","classes/FlickrCache.html#method-c-to_recursive_ostruct","( hash )","<p>stackoverflow.com/questions/42519557/convert-hash-to-openstruct-recursively\n"],["to_s","Annotation","classes/Annotation.html#method-i-to_s","()",""],["to_s","ApiEndpoint","classes/ApiEndpoint.html#method-i-to_s","()",""],["to_s","Atlas","classes/Atlas.html#method-i-to_s","()",""],["to_s","CheckList","classes/CheckList.html#method-i-to_s","()",""],["to_s","Comment","classes/Comment.html#method-i-to_s","()",""],["to_s","ConservationStatus","classes/ConservationStatus.html#method-i-to_s","()",""],["to_s","ControlledTerm","classes/ControlledTerm.html#method-i-to_s","()",""],["to_s","DataPartner","classes/DataPartner.html#method-i-to_s","()",""],["to_s","Flag","classes/Flag.html#method-i-to_s","()",""],["to_s","Guide","classes/Guide.html#method-i-to_s","()",""],["to_s","GuideEolUpdateFlowTask","classes/GuideEolUpdateFlowTask.html#method-i-to_s","()",""],["to_s","GuidePhoto","classes/GuidePhoto.html#method-i-to_s","()",""],["to_s","GuideRange","classes/GuideRange.html#method-i-to_s","()",""],["to_s","GuideSection","classes/GuideSection.html#method-i-to_s","()",""],["to_s","GuideTaxon","classes/GuideTaxon.html#method-i-to_s","()",""],["to_s","Identification","classes/Identification.html#method-i-to_s","()",""],["to_s","List","classes/List.html#method-i-to_s","()",""],["to_s","ListedTaxon","classes/ListedTaxon.html#method-i-to_s","()",""],["to_s","Message","classes/Message.html#method-i-to_s","()",""],["to_s","Observation","classes/Observation.html#method-i-to_s","()","<p>help_txt_for :species_guess, &lt;&lt;-DESC\n\n<pre><code>Type a name for what you saw.  It can be common or scientific, ...\n</code></pre>\n"],["to_s","ObservationField","classes/ObservationField.html#method-i-to_s","()",""],["to_s","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-to_s","()",""],["to_s","ObservationLink","classes/ObservationLink.html#method-i-to_s","()",""],["to_s","ObservationPhoto","classes/ObservationPhoto.html#method-i-to_s","()",""],["to_s","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-to_s","()",""],["to_s","Photo","classes/Photo.html#method-i-to_s","()",""],["to_s","Place","classes/Place.html#method-i-to_s","()",""],["to_s","PlaceGeometry","classes/PlaceGeometry.html#method-i-to_s","()",""],["to_s","PlaceTaxonName","classes/PlaceTaxonName.html#method-i-to_s","()",""],["to_s","Post","classes/Post.html#method-i-to_s","()",""],["to_s","Project","classes/Project.html#method-i-to_s","()",""],["to_s","ProjectObservation","classes/ProjectObservation.html#method-i-to_s","()",""],["to_s","ProjectUser","classes/ProjectUser.html#method-i-to_s","()",""],["to_s","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-to_s","()",""],["to_s","QualityMetric","classes/QualityMetric.html#method-i-to_s","()",""],["to_s","Ratatosk::Ratatosk","classes/Ratatosk/Ratatosk.html#method-i-to_s","()",""],["to_s","Site","classes/Site.html#method-i-to_s","()",""],["to_s","Source","classes/Source.html#method-i-to_s","()",""],["to_s","Subscription","classes/Subscription.html#method-i-to_s","()",""],["to_s","Taxon","classes/Taxon.html#method-i-to_s","()","<p>see the end for the validate method\n"],["to_s","TaxonChange","classes/TaxonChange.html#method-i-to_s","()",""],["to_s","TaxonCurator","classes/TaxonCurator.html#method-i-to_s","()",""],["to_s","TaxonLink","classes/TaxonLink.html#method-i-to_s","()",""],["to_s","TaxonName","classes/TaxonName.html#method-i-to_s","()",""],["to_s","TaxonPhoto","classes/TaxonPhoto.html#method-i-to_s","()",""],["to_s","TaxonSchemeTaxon","classes/TaxonSchemeTaxon.html#method-i-to_s","()",""],["to_s","UpdateAction","classes/UpdateAction.html#method-i-to_s","()",""],["to_s","User","classes/User.html#method-i-to_s","()",""],["to_s","UserBlock","classes/UserBlock.html#method-i-to_s","()",""],["to_s","UserParent","classes/UserParent.html#method-i-to_s","()",""],["to_select_tag_with_option_tags","DefaultFormBuilder::INatInstanceTag","classes/DefaultFormBuilder/INatInstanceTag.html#method-i-to_select_tag_with_option_tags","( option_tags, options, html_options )",""],["to_styled_s","Taxon","classes/Taxon.html#method-i-to_styled_s","( options = {} )",""],["to_tags","FlickrPhoto","classes/FlickrPhoto.html#method-i-to_tags","( options = { } )",""],["to_tags","LocalPhoto","classes/LocalPhoto.html#method-i-to_tags","(options = {})",""],["to_tags","Taxon","classes/Taxon.html#method-i-to_tags","()",""],["to_taxa","FlickrPhoto","classes/FlickrPhoto.html#method-i-to_taxa","(options = {})","<p>Try to extract known taxa from the tags of a flickr photo\n"],["to_taxa","LocalPhoto","classes/LocalPhoto.html#method-i-to_taxa","(options = {})",""],["to_taxa","PicasaPhoto","classes/PicasaPhoto.html#method-i-to_taxa","(options = {})",""],["to_taxa","SoundcloudSound","classes/SoundcloudSound.html#method-i-to_taxa","(options = {})",""],["to_taxon","Photo","classes/Photo.html#method-i-to_taxon","()","<p>Try to choose a single taxon for this photo.  Only works if class has  implemented to_taxa\n"],["to_taxon","Sound","classes/Sound.html#method-i-to_taxon","()",""],["to_user_copy","Message","classes/Message.html#method-i-to_user_copy","()",""],["token","SoundcloudIdentity","classes/SoundcloudIdentity.html#method-i-token","()",""],["too_big_for_check_list?","Place","classes/Place.html#method-i-too_big_for_check_list-3F","()",""],["torquemap","ObservationsController","classes/ObservationsController.html#method-i-torquemap","()",""],["touch_if_modified","GuideSection","classes/GuideSection.html#method-i-touch_if_modified","()",""],["touch_observation","ProjectObservation","classes/ProjectObservation.html#method-i-touch_observation","()",""],["touch_observation","Shared::TouchesObservationModule","classes/Shared/TouchesObservationModule.html#method-i-touch_observation","()",""],["touch_projects","ProjectObservationRule","classes/ProjectObservationRule.html#method-i-touch_projects","()",""],["touch_resource","Annotation","classes/Annotation.html#method-i-touch_resource","()",""],["touch_resource","ModeratorAction","classes/ModeratorAction.html#method-i-touch_resource","()",""],["tracking_code_allowed?","Project","classes/Project.html#method-i-tracking_code_allowed-3F","(code)",""],["transformation_command","Paperclip::Deanimator","classes/Paperclip/Deanimator.html#method-i-transformation_command","()",""],["transformation_command","Paperclip::Rotator","classes/Paperclip/Rotator.html#method-i-transformation_command","()",""],["translate","TranslationsController","classes/TranslationsController.html#method-i-translate","()","<p>Not sure why but without this Rails thinks this action isn&#39;t here, even though it&#39;s defined in …\n"],["translate_with_consistent_case","ApplicationHelper","classes/ApplicationHelper.html#method-i-translate_with_consistent_case","( key, options = {} )","<p>Another workaround for our inconsistent use of underscores in i18n keys\n"],["translated_name","Place","classes/Place.html#method-i-translated_name","( locale = I18n.locale, options = {} )","<p>Wrapper around a common translation that prevents a potentially serious side-effect of the name not converting …\n"],["translators","YearStatistic","classes/YearStatistic.html#method-c-translators","( year, options = {} )",""],["tree_taxa","YearStatistic","classes/YearStatistic.html#method-c-tree_taxa","( year, options = {} )",""],["trickle_down_establishment_means","ListedTaxon","classes/ListedTaxon.html#method-i-trickle_down_establishment_means","(options = {})",""],["trim_fields","Photo","classes/Photo.html#method-i-trim_fields","()",""],["trim_fields","Sound","classes/Sound.html#method-i-trim_fields","()",""],["trim_user_agent","Observation","classes/Observation.html#method-i-trim_user_agent","()",""],["truncate","PlaceDenormalizer","classes/PlaceDenormalizer.html#method-c-truncate","()",""],["truncate_with_more","ApplicationHelper","classes/ApplicationHelper.html#method-i-truncate_with_more","(text, options = {})",""],["trust","UsersController","classes/UsersController.html#method-i-trust","()",""],["trusts?","User","classes/User.html#method-i-trusts-3F","( user )",""],["try_show","TaxaController","classes/TaxaController.html#method-i-try_show","()","<p>Try to find a taxon from urls like /taxa/Animalia or /taxa/Homo_sapiens\n"],["turn_remote_photo_into_local_photo","Photo","classes/Photo.html#method-c-turn_remote_photo_into_local_photo","(remote_photo)","<p>to be used primarly for retroactive caching of remote photos\n"],["twitter_identity","User","classes/User.html#method-i-twitter_identity","()","<p>returns nil or the twitter ProviderAuthorization\n"],["type","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-type","()",""],["type_from_file_command","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-i-type_from_file_command","()",""],["type_from_mime_magic","InatContentTypeDetector","classes/InatContentTypeDetector.html#method-i-type_from_mime_magic","()",""],["tzid_for_lat_lng","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-tzid_for_lat_lng","( lat, lng )",""],["tzid_from_lat_lng","TimeZoneGeometry","classes/TimeZoneGeometry.html#method-c-tzid_from_lat_lng","( lat, lng )",""],["unblock","UsersController","classes/UsersController.html#method-i-unblock","()",""],["uncertainty_cell_center_latlon","Observation","classes/Observation.html#method-c-uncertainty_cell_center_latlon","( lat, lon )","<p>Coordinates of the southwest corner of the uncertainty cell for any given coordinates\n"],["uncertainty_cell_diagonal_meters","Observation","classes/Observation.html#method-c-uncertainty_cell_diagonal_meters","( lat, lon )","<p>Distance of a diagonal from corner to corner across the uncertainty cell for the given coordinates.\n"],["uncertainty_cell_diagonal_meters","Observation","classes/Observation.html#method-i-uncertainty_cell_diagonal_meters","()","<p>Distance of a diagonal from corner to corner across the uncertainty cell for this observation&#39;s coordinates. …\n"],["unfeature","ProjectsController","classes/ProjectsController.html#method-i-unfeature","()",""],["unfeature_inactive","Taxon","classes/Taxon.html#method-i-unfeature_inactive","()",""],["unfeature_taxon","TaxonPhoto","classes/TaxonPhoto.html#method-i-unfeature_taxon","()",""],["unique_tags","Guide","classes/Guide.html#method-i-unique_tags","()",""],["uniqueness_of_authorization_per_user","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-uniqueness_of_authorization_per_user","()",""],["uniqueness_of_blocked_user","UserBlock","classes/UserBlock.html#method-i-uniqueness_of_blocked_user","()",""],["uniqueness_of_current","Identification","classes/Identification.html#method-i-uniqueness_of_current","()","<p>Validations ###############################################################\n"],["uniqueness_of_output_taxa","TaxonChange","classes/TaxonChange.html#method-i-uniqueness_of_output_taxa","()",""],["uniqueness_of_taxa","TaxonChange","classes/TaxonChange.html#method-i-uniqueness_of_taxa","()",""],["unlink_flickr_account","FlickrController","classes/FlickrController.html#method-i-unlink_flickr_account","()","<p>Used by the options interface, this just removes the user&#39;s associated flickr_identity\n"],["unlock","Admin::DelayedJobsController","classes/Admin/DelayedJobsController.html#method-i-unlock","()",""],["unmute","UsersController","classes/UsersController.html#method-i-unmute","()",""],["unobscure_coordinates","Observation","classes/Observation.html#method-i-unobscure_coordinates","()",""],["unsuspend","UsersController","classes/UsersController.html#method-i-unsuspend","()",""],["untrust","UsersController","classes/UsersController.html#method-i-untrust","()",""],["unviewed_by_user_from_query","UpdateAction","classes/UpdateAction.html#method-c-unviewed_by_user_from_query","(user, attrs, options={})","<p>Only used in specs\n"],["unvote","VotesController","classes/VotesController.html#method-i-unvote","()",""],["update","AnnouncementsController","classes/AnnouncementsController.html#method-i-update","()",""],["update","AssessmentsController","classes/AssessmentsController.html#method-i-update","()",""],["update","AtlasesController","classes/AtlasesController.html#method-i-update","()",""],["update","CheckListsController","classes/CheckListsController.html#method-i-update","()",""],["update","CommentsController","classes/CommentsController.html#method-i-update","()",""],["update","CompleteSetsController","classes/CompleteSetsController.html#method-i-update","()",""],["update","ConservationStatusesController","classes/ConservationStatusesController.html#method-i-update","()",""],["update","ControlledTermLabelsController","classes/ControlledTermLabelsController.html#method-i-update","()",""],["update","ControlledTermsController","classes/ControlledTermsController.html#method-i-update","()",""],["update","CustomProjectsController","classes/CustomProjectsController.html#method-i-update","()","<p>PUT /custom_projects/1 PUT /custom_projects/1.xml\n"],["update","DataPartnersController","classes/DataPartnersController.html#method-i-update","()",""],["update","FlagsController","classes/FlagsController.html#method-i-update","()",""],["update","FriendshipsController","classes/FriendshipsController.html#method-i-update","()",""],["update","GuidePhotosController","classes/GuidePhotosController.html#method-i-update","()","<p>PUT /guide_photos/1 PUT /guide_photos/1.json\n"],["update","GuideRangesController","classes/GuideRangesController.html#method-i-update","()","<p>PUT /guide_ranges/1 PUT /guide_ranges/1.json\n"],["update","GuideSectionsController","classes/GuideSectionsController.html#method-i-update","()","<p>PUT /guide_sections/1 PUT /guide_sections/1.json\n"],["update","GuideTaxaController","classes/GuideTaxaController.html#method-i-update","()","<p>PUT /guide_taxa/1 PUT /guide_taxa/1.json\n"],["update","GuidesController","classes/GuidesController.html#method-i-update","()","<p>PUT /guides/1 PUT /guides/1.json\n"],["update","IdentificationsController","classes/IdentificationsController.html#method-i-update","()",""],["update","ListedTaxaController","classes/ListedTaxaController.html#method-i-update","()",""],["update","ModeratorNotesController","classes/ModeratorNotesController.html#method-i-update","()",""],["update","OauthApplicationsController","classes/OauthApplicationsController.html#method-i-update","()",""],["update","ObservationFieldValuesController","classes/ObservationFieldValuesController.html#method-i-update","()",""],["update","ObservationFieldsController","classes/ObservationFieldsController.html#method-i-update","()","<p>PUT /observation_fields/1 PUT /observation_fields/1.xml\n"],["update","ObservationPhotosController","classes/ObservationPhotosController.html#method-i-update","()",""],["update","ObservationSoundsController","classes/ObservationSoundsController.html#method-i-update","()",""],["update","ObservationsController","classes/ObservationsController.html#method-i-update","()","<p>PUT /observations/1 PUT /observations/1.xml\n"],["update","OldPreferences","classes/OldPreferences.html#method-i-update","(attrs = {})",""],["update","Photo","classes/Photo.html#method-i-update","(attributes)",""],["update","PhotosController","classes/PhotosController.html#method-i-update","()",""],["update","PlacesController","classes/PlacesController.html#method-i-update","()",""],["update","PostsController","classes/PostsController.html#method-i-update","()",""],["update","ProjectAssetsController","classes/ProjectAssetsController.html#method-i-update","()","<p>PUT /project_assets/1 PUT /project_assets/1.xml\n"],["update","ProjectObservationsController","classes/ProjectObservationsController.html#method-i-update","()",""],["update","ProjectUsersController","classes/ProjectUsersController.html#method-i-update","()",""],["update","ProjectsController","classes/ProjectsController.html#method-i-update","()","<p>PUT /projects/1 PUT /projects/1.xml\n"],["update","Shared::ListsModule","classes/Shared/ListsModule.html#method-i-update","()","<p>PUT /lists/1 PUT /lists/1.xml\n"],["update","SitesController","classes/SitesController.html#method-i-update","()","<p>PUT /sites/1 PUT /sites/1.json\n"],["update","Sound","classes/Sound.html#method-i-update","(attributes)",""],["update","SourcesController","classes/SourcesController.html#method-i-update","()",""],["update","SubscriptionsController","classes/SubscriptionsController.html#method-i-update","()",""],["update","TaxaController","classes/TaxaController.html#method-i-update","()",""],["update","TaxonChangeTaxaController","classes/TaxonChangeTaxaController.html#method-i-update","()",""],["update","TaxonChangesController","classes/TaxonChangesController.html#method-i-update","()",""],["update","TaxonCuratorsController","classes/TaxonCuratorsController.html#method-i-update","()",""],["update","TaxonFrameworkRelationshipsController","classes/TaxonFrameworkRelationshipsController.html#method-i-update","()",""],["update","TaxonFrameworksController","classes/TaxonFrameworksController.html#method-i-update","()",""],["update","TaxonLinksController","classes/TaxonLinksController.html#method-i-update","()",""],["update","TaxonNamesController","classes/TaxonNamesController.html#method-i-update","()",""],["update","TaxonRangesController","classes/TaxonRangesController.html#method-i-update","()",""],["update","TaxonSchemeTaxaController","classes/TaxonSchemeTaxaController.html#method-i-update","()",""],["update","TripsController","classes/TripsController.html#method-i-update","()","<p>api :PUT, &#39;/trips/:id&#39;, “Update an existing trip” param :id, :number, :required =&gt; …\n"],["update","UsersController","classes/UsersController.html#method-i-update","()",""],["update_acl","CloudfrontACLUpdater","classes/CloudfrontACLUpdater.html#method-i-update_acl","()",""],["update_all_licenses","Observation","classes/Observation.html#method-i-update_all_licenses","()",""],["update_all_licenses","Photo","classes/Photo.html#method-i-update_all_licenses","()",""],["update_all_licenses","Sound","classes/Sound.html#method-i-update_all_licenses","()",""],["update_ancestor_photos","Taxon","classes/Taxon.html#method-c-update_ancestor_photos","( taxon, photo )",""],["update_and_primary","ListedTaxon","classes/ListedTaxon.html#method-i-update_and_primary","(listed_taxon, current_user)",""],["update_cache_columns","ListedTaxon","classes/ListedTaxon.html#method-i-update_cache_columns","()",""],["update_cache_columns_for","ListedTaxon","classes/ListedTaxon.html#method-c-update_cache_columns_for","(lt)",""],["update_cache_columns_for_check_list","ListedTaxon","classes/ListedTaxon.html#method-i-update_cache_columns_for_check_list","()",""],["update_categories","Identification","classes/Identification.html#method-i-update_categories","()",""],["update_categories_for_observation","Identification","classes/Identification.html#method-c-update_categories_for_observation","( o, options = {} )",""],["update_colors","TaxaController","classes/TaxaController.html#method-i-update_colors","()",""],["update_counts","ObservationField","classes/ObservationField.html#method-i-update_counts","()",""],["update_counts","Project","classes/Project.html#method-i-update_counts","()",""],["update_curator_identification","Identification","classes/Identification.html#method-i-update_curator_identification","()","<p>Set the project_observation curator_identification_id if the identifier is a curator of a project that …\n"],["update_curator_identification","ProjectObservation","classes/ProjectObservation.html#method-i-update_curator_identification","()",""],["update_curator_idents_on_make_curator","Project","classes/Project.html#method-c-update_curator_idents_on_make_curator","(project_id, project_user_id)",""],["update_curator_idents_on_remove_curator","Project","classes/Project.html#method-c-update_curator_idents_on_remove_curator","(project_id, user_id)",""],["update_default_license","Observation","classes/Observation.html#method-i-update_default_license","()",""],["update_default_license","Photo","classes/Photo.html#method-i-update_default_license","()",""],["update_default_license","Sound","classes/Sound.html#method-i-update_default_license","()",""],["update_descendants_with_new_ancestry","Taxon","classes/Taxon.html#method-i-update_descendants_with_new_ancestry","()","<p>ancestry overrides - some ancestry methods iterate over ALL descendants in memory.  It&#39;s database …\n"],["update_descendants_with_new_ancestry","Taxon","classes/Taxon.html#method-c-update_descendants_with_new_ancestry","( taxon, _child_ancestry_was )",""],["update_disagreement_identifications_for_taxon","Identification","classes/Identification.html#method-c-update_disagreement_identifications_for_taxon","( taxon )",""],["update_fields","ObservationsController","classes/ObservationsController.html#method-i-update_fields","()",""],["update_for_taxon_change","Identification","classes/Identification.html#method-c-update_for_taxon_change","( taxon_change, options = {} )",""],["update_for_taxon_change","ListedTaxon","classes/ListedTaxon.html#method-c-update_for_taxon_change","(taxon_change, options = {})",""],["update_for_taxon_change","Observation","classes/Observation.html#method-c-update_for_taxon_change","(taxon_change, options = {}, &block)",""],["update_for_taxon_change","ObservationFieldValue","classes/ObservationFieldValue.html#method-c-update_for_taxon_change","( taxon_change, options, &block )",""],["update_identifications","Observation","classes/Observation.html#method-i-update_identifications","()","<p>Adds, updates, or destroys the identification corresponding to the taxon the user selected.\n"],["update_identifications_counter_cache","User","classes/User.html#method-c-update_identifications_counter_cache","(user_id)",""],["update_image_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-update_image_for","(update, options = {})",""],["update_mappable","Observation","classes/Observation.html#method-i-update_mappable","()",""],["update_obs_iconic_taxa","Taxon","classes/Taxon.html#method-i-update_obs_iconic_taxa","()",""],["update_obs_stats","Identification","classes/Identification.html#method-i-update_obs_stats","()","<p>Update the identification stats in the observation.\n"],["update_obs_stats_after_destroy","Identification","classes/Identification.html#method-i-update_obs_stats_after_destroy","()",""],["update_observation","Identification","classes/Identification.html#method-i-update_observation","()","<p>Update the observation\n"],["update_observation","QualityMetric","classes/QualityMetric.html#method-i-update_observation","()",""],["update_observation_after_destroy","Identification","classes/Identification.html#method-i-update_observation_after_destroy","()",""],["update_observation_counts","Taxon","classes/Taxon.html#method-c-update_observation_counts","( options = {} )",""],["update_observation_field_counts","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-update_observation_field_counts","()",""],["update_observation_geoprivacies","ConservationStatus","classes/ConservationStatus.html#method-i-update_observation_geoprivacies","()",""],["update_observation_if_test_env","Identification","classes/Identification.html#method-i-update_observation_if_test_env","()",""],["update_observation_index","ObservationReview","classes/ObservationReview.html#method-i-update_observation_index","( options = { } )",""],["update_observation_licenses","User","classes/User.html#method-i-update_observation_licenses","()",""],["update_observation_sites","User","classes/User.html#method-i-update_observation_sites","()",""],["update_observation_sites_later","User","classes/User.html#method-i-update_observation_sites_later","()",""],["update_observations_counter_cache","ProjectUser","classes/ProjectUser.html#method-i-update_observations_counter_cache","()",""],["update_observations_counter_cache","User","classes/User.html#method-c-update_observations_counter_cache","(user_id)",""],["update_observations_counter_cache_from_project_and_user","ProjectUser","classes/ProjectUser.html#method-c-update_observations_counter_cache_from_project_and_user","(project_id, user_id)",""],["update_observations_counter_cache_later","ProjectObservation","classes/ProjectObservation.html#method-i-update_observations_counter_cache_later","()",""],["update_observations_places","Observation","classes/Observation.html#method-i-update_observations_places","()",""],["update_observations_places","Observation","classes/Observation.html#method-c-update_observations_places","(options = { })",""],["update_observations_places","Place","classes/Place.html#method-c-update_observations_places","(place_id)",""],["update_observations_places","PlaceGeometry","classes/PlaceGeometry.html#method-c-update_observations_places","(place_geometry_id)",""],["update_observations_places_later","PlaceGeometry","classes/PlaceGeometry.html#method-i-update_observations_places_later","()",""],["update_observed_taxa_count","Project","classes/Project.html#method-c-update_observed_taxa_count","(project_id)",""],["update_on_related_listed_taxa","ListedTaxon","classes/ListedTaxon.html#method-i-update_on_related_listed_taxa","()",""],["update_other_identifications","Identification","classes/Identification.html#method-i-update_other_identifications","()",""],["update_parent_counter_cache","Comment","classes/Comment.html#method-i-update_parent_counter_cache","()",""],["update_password","UsersController","classes/UsersController.html#method-i-update_password","()",""],["update_photo_identities","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-update_photo_identities","()","<p>right now this only needs to happen for flickr\n"],["update_photo_licenses","User","classes/User.html#method-i-update_photo_licenses","()",""],["update_photo_native_columns_and_copy_metadata","Photo","classes/Photo.html#method-c-update_photo_native_columns_and_copy_metadata","( min_id, max_id )",""],["update_photos","GuideTaxaController","classes/GuideTaxaController.html#method-i-update_photos","()",""],["update_photos","ObservationsController","classes/ObservationsController.html#method-i-update_photos","()",""],["update_photos","TaxaController","classes/TaxaController.html#method-i-update_photos","()",""],["update_project_observations_curator_coordinate_access","ProjectUser","classes/ProjectUser.html#method-i-update_project_observations_curator_coordinate_access","()",""],["update_project_observations_later","ProjectUser","classes/ProjectUser.html#method-i-update_project_observations_later","()",""],["update_project_observed_taxa_counter_cache_later","ProjectObservation","classes/ProjectObservation.html#method-i-update_project_observed_taxa_counter_cache_later","()",""],["update_project_rule","ProjectObservationField","classes/ProjectObservationField.html#method-i-update_project_rule","()",""],["update_public_positional_accuracy","Observation","classes/Observation.html#method-i-update_public_positional_accuracy","()",""],["update_quality_metrics","Identification","classes/Identification.html#method-i-update_quality_metrics","()",""],["update_quality_metrics","Observation","classes/Observation.html#method-i-update_quality_metrics","()",""],["update_records_of_class","TaxonChange","classes/TaxonChange.html#method-i-update_records_of_class","(klass, options = {}, &block)","<p>Change all records associated with input taxa to use the selected taxon\n"],["update_session","UsersController","classes/UsersController.html#method-i-update_session","()",""],["update_sound_licenses","User","classes/User.html#method-i-update_sound_licenses","()",""],["update_spam_count","ActsAsSpammable::User","classes/ActsAsSpammable/User.html#method-i-update_spam_count","()","<p>TODO - what to do when the content is deleted? The spam count will go down and the user will no longer …\n"],["update_species_counter_cache","User","classes/User.html#method-c-update_species_counter_cache","( user, options={ } )",""],["update_stats","Observation","classes/Observation.html#method-i-update_stats","(options = {})",""],["update_stats_for_observations_of","Observation","classes/Observation.html#method-c-update_stats_for_observations_of","( taxon )",""],["update_tagline_for","ApplicationHelper","classes/ApplicationHelper.html#method-i-update_tagline_for","(update, options = {})",""],["update_taxa_counter_cache","ProjectUser","classes/ProjectUser.html#method-i-update_taxa_counter_cache","()",""],["update_taxa_counter_cache_from_project_and_user","ProjectUser","classes/ProjectUser.html#method-c-update_taxa_counter_cache_from_project_and_user","(project_id, user_id)",""],["update_taxa_counter_cache_later","ProjectObservation","classes/ProjectObservation.html#method-i-update_taxa_counter_cache_later","()",""],["update_taxa_obs_and_observed_taxa_count_after_update_observation","ProjectUser","classes/ProjectUser.html#method-c-update_taxa_obs_and_observed_taxa_count_after_update_observation","(observation_id, user_id)",""],["update_taxon_counter_caches","Observation","classes/Observation.html#method-i-update_taxon_counter_caches","()",""],["update_taxon_framework_relationship","ExternalTaxon","classes/ExternalTaxon.html#method-i-update_taxon_framework_relationship","()",""],["update_taxon_framework_relationship","Taxon","classes/Taxon.html#method-i-update_taxon_framework_relationship","()",""],["update_taxon_list_rule","CheckList","classes/CheckList.html#method-i-update_taxon_list_rule","()",""],["update_user","AdminController","classes/AdminController.html#method-i-update_user","()",""],["update_user_counter_cache","Identification","classes/Identification.html#method-i-update_user_counter_cache","()","<p>Update the counter cache in users.  That cache ONLY tracks observations  made for others.\n"],["update_user_counter_cache","Post","classes/Post.html#method-i-update_user_counter_cache","()",""],["update_user_counter_caches","Observation","classes/Observation.html#method-i-update_user_counter_caches","()",""],["update_user_counter_caches_after_create","Observation","classes/Observation.html#method-i-update_user_counter_caches_after_create","()",""],["update_user_counter_caches_after_destroy","Observation","classes/Observation.html#method-i-update_user_counter_caches_after_destroy","()",""],["update_user_counter_caches_after_update","Observation","classes/Observation.html#method-i-update_user_counter_caches_after_update","()",""],["update_user_species_counter_cache_later","Observation","classes/Observation.html#method-i-update_user_species_counter_cache_later","()",""],["update_users_observations_counts","Project","classes/Project.html#method-i-update_users_observations_counts","(options = {})",""],["update_users_taxa_counts","Project","classes/Project.html#method-i-update_users_taxa_counts","(options = {})",""],["update_with_auth_info","ProviderAuthorization","classes/ProviderAuthorization.html#method-i-update_with_auth_info","(auth_info)",""],["updates_count","UsersController","classes/UsersController.html#method-i-updates_count","()",""],["updates_notification","Emailer","classes/Emailer.html#method-i-updates_notification","( user, updates )",""],["upload","ObservationsController","classes/ObservationsController.html#method-i-upload","()",""],["upload_to_aws_s3","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-upload_to_aws_s3","()",""],["upstream_taxon_framework","Taxon","classes/Taxon.html#method-i-upstream_taxon_framework","()",""],["uri_join","ApplicationHelper","classes/ApplicationHelper.html#method-i-uri_join","(*args)",""],["url","GuidePhoto","classes/GuidePhoto.html#method-i-url","()",""],["url","Observation","classes/Observation.html#method-i-url","()",""],["url","RubyPicasa::Base","classes/RubyPicasa/Base.html#method-i-url","(thumb_name = nil, options = nil)","<p>Thumbnail names are by image width in pixels. Sizes up to 160 may be either cropped (square) or uncropped: …\n"],["url_cant_have_genus_without_species","TaxonLink","classes/TaxonLink.html#method-i-url_cant_have_genus_without_species","()",""],["url_cant_have_species_without_genus","TaxonLink","classes/TaxonLink.html#method-i-url_cant_have_species_without_genus","()",""],["url_for_license","ApplicationHelper","classes/ApplicationHelper.html#method-i-url_for_license","(code)",""],["url_for_params","ApplicationHelper","classes/ApplicationHelper.html#method-i-url_for_params","( options = {} )","<p>Generate a URL based on the current params hash, overriding existing values with the hash passed in. …\n"],["url_for_referrer_or_default","ApplicationHelper","classes/ApplicationHelper.html#method-i-url_for_referrer_or_default","( default )",""],["url_for_request","CatalogueOfLife","classes/CatalogueOfLife.html#method-c-url_for_request","(method, args = {})",""],["url_for_request","GbifService","classes/GbifService.html#method-c-url_for_request","(method, params = {})",""],["url_for_resource_with_host","ApplicationHelper","classes/ApplicationHelper.html#method-i-url_for_resource_with_host","(resource)",""],["url_for_taxon","TaxonLink","classes/TaxonLink.html#method-i-url_for_taxon","(taxon)","<p>Fill in the template values for the URL given a taxon\n"],["url_for_title","WikipediaService","classes/WikipediaService.html#method-i-url_for_title","(title)",""],["url_without_template_tags","TaxonLink","classes/TaxonLink.html#method-i-url_without_template_tags","()",""],["user","BulkObservationFile","classes/BulkObservationFile.html#method-i-user","()",""],["user","CommentsController","classes/CommentsController.html#method-i-user","()",""],["user","GuidesController","classes/GuidesController.html#method-i-user","()",""],["user","Picasa","classes/Picasa.html#method-i-user","(user_id_or_url = nil, options = {})","<p>Retrieve a RubyPicasa::User record including all user albums.\n"],["user_can_edit_attributes","Taxon","classes/Taxon.html#method-i-user_can_edit_attributes","()",""],["user_content","AdminController","classes/AdminController.html#method-i-user_content","()",""],["user_detail","AdminController","classes/AdminController.html#method-i-user_detail","()",""],["user_has_flagged?","Gonzo::Acts::Flaggable::InstanceMethods","classes/Gonzo/Acts/Flaggable/InstanceMethods.html#method-i-user_has_flagged-3F","(user, flag = nil)","<p>Check to see if the passed in user has flagged this object before. Optionally you can test to see if …\n"],["user_icon_url","User","classes/User.html#method-i-user_icon_url","()",""],["user_ids_without_blocked_and_muted","UpdateAction","classes/UpdateAction.html#method-i-user_ids_without_blocked_and_muted","( user_ids )",""],["user_image","ApplicationHelper","classes/ApplicationHelper.html#method-i-user_image","(user, options = {})",""],["user_invited?","ProjectUser","classes/ProjectUser.html#method-i-user_invited-3F","()",""],["user_is_a_site_curator","TaxonCurator","classes/TaxonCurator.html#method-i-user_is_a_site_curator","()",""],["user_is_not_already_a_member","ProjectUserInvitation","classes/ProjectUserInvitation.html#method-i-user_is_not_already_a_member","()",""],["user_logging","ApplicationController","classes/ApplicationController.html#method-i-user_logging","()",""],["user_login","Guide","classes/Guide.html#method-i-user_login","()",""],["user_login","ListedTaxon","classes/ListedTaxon.html#method-i-user_login","()",""],["user_login","Observation","classes/Observation.html#method-i-user_login","()",""],["user_must_be_on_site_long_enough","Post","classes/Post.html#method-i-user_must_be_on_site_long_enough","()",""],["user_name","Source","classes/Source.html#method-i-user_name","()",""],["user_owns_photo","FlickrPhoto","classes/FlickrPhoto.html#method-i-user_owns_photo","()",""],["user_parent_confirmation","Emailer","classes/Emailer.html#method-i-user_parent_confirmation","( user_parent )",""],["user_request_logging","ApplicationController","classes/ApplicationController.html#method-i-user_request_logging","()",""],["user_seen_announcement?","ApplicationHelper","classes/ApplicationHelper.html#method-i-user_seen_announcement-3F","(announcement)",""],["user_stats","ObservationsController","classes/ObservationsController.html#method-i-user_stats","()",""],["user_updates_suspended","Emailer","classes/Emailer.html#method-i-user_updates_suspended","( user )",""],["user_viewed_updates","Observation","classes/Observation.html#method-i-user_viewed_updates","(user_id)",""],["user_viewed_updates","UpdateAction","classes/UpdateAction.html#method-c-user_viewed_updates","(updates, user_id)",""],["users","AdminController","classes/AdminController.html#method-i-users","()",""],["users_can_add?","Project","classes/Project.html#method-i-users_can_add-3F","()",""],["users_helped","YearStatistic","classes/YearStatistic.html#method-c-users_helped","( year, user )",""],["users_histogram_by_created_month","YearStatistic","classes/YearStatistic.html#method-c-users_histogram_by_created_month","( options = {} )",""],["users_who_helped","YearStatistic","classes/YearStatistic.html#method-c-users_who_helped","( year, user )",""],["users_with_unviewed_updates_from","Subscription","classes/Subscription.html#method-c-users_with_unviewed_updates_from","(notifier)",""],["users_with_unviewed_updates_from_query","UpdateAction","classes/UpdateAction.html#method-c-users_with_unviewed_updates_from_query","(attrs, options={})","<p>Only used in specs\n"],["using_recaptcha?","Site","classes/Site.html#method-i-using_recaptcha-3F","()",""],["valid?","Devise::Strategies::ApplicationJsonWebToken","classes/Devise/Strategies/ApplicationJsonWebToken.html#method-i-valid-3F","()",""],["valid?","Devise::Strategies::JsonWebToken","classes/Devise/Strategies/JsonWebToken.html#method-i-valid-3F","()",""],["valid_latlon?","ElasticModel","classes/ElasticModel.html#method-c-valid_latlon-3F","(lat, lon)",""],["valid_remember_cookie?","AuthenticatedSystem","classes/AuthenticatedSystem.html#method-i-valid_remember_cookie-3F","()","<p>Cookies shouldn&#39;t be allowed to persist past their freshness date, and they should be changed at …\n"],["valid_remote_photo_url","Photo","classes/Photo.html#method-c-valid_remote_photo_url","( remote_photo_url, options = {} )","<p>Like valid_remote_photo_url? this sends a HEAD request to see if an image is still there, but it returns …\n"],["valid_remote_photo_url?","Photo","classes/Photo.html#method-c-valid_remote_photo_url-3F","(remote_photo_url)",""],["valid_scientific_name_must_match_taxon_name","TaxonName","classes/TaxonName.html#method-i-valid_scientific_name_must_match_taxon_name","()",""],["validate_and_add_contribution","Goal","classes/Goal.html#method-i-validate_and_add_contribution","(thing, goal_participant)","<p>This method is built up upon the rules_validate_against? method and records a GoalContribution if it …\n"],["validate_email_domain_exists","User","classes/User.html#method-i-validate_email_domain_exists","()","<p>As noted at stackoverflow.com/questions/39721917/check-if-email-domain-is-valid, this approach is probably …\n"],["validate_email_pattern","User","classes/User.html#method-i-validate_email_pattern","()",""],["validate_file","BulkObservationFile","classes/BulkObservationFile.html#method-i-validate_file","()",""],["validate_geometry","PlaceGeometry","classes/PlaceGeometry.html#method-i-validate_geometry","()",""],["validate_geometry","TaxonRange","classes/TaxonRange.html#method-i-validate_geometry","()",""],["validate_locked","Taxon","classes/Taxon.html#method-i-validate_locked","()",""],["validate_name_does_not_start_with_a_number","Place","classes/Place.html#method-i-validate_name_does_not_start_with_a_number","()",""],["validate_observation_field_allowed_values","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-validate_observation_field_allowed_values","()",""],["validate_observation_field_datatype","ObservationFieldValue","classes/ObservationFieldValue.html#method-i-validate_observation_field_datatype","()",""],["validate_parent_is_not_self","Place","classes/Place.html#method-i-validate_parent_is_not_self","()",""],["validate_to_not_from","Message","classes/Message.html#method-i-validate_to_not_from","()",""],["validate_unique_hash","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-validate_unique_hash","()",""],["validate_with_geom","Place","classes/Place.html#method-i-validate_with_geom","( geom, other_attrs = {} )",""],["validates?","GoalRule","classes/GoalRule.html#method-i-validates-3F","(operand)","<p>validates? takes &#39;thing&#39; and runs a test on it by calling the operator via send.  validates? …\n"],["validates?","ListRule","classes/ListRule.html#method-i-validates-3F","(subject)","<p>Tests whether a taxon passes this rule or not.\n"],["validates?","Rule","classes/Rule.html#method-i-validates-3F","(subject)",""],["validates_rules_from","Ruler::ClassMethods","classes/Ruler/ClassMethods.html#method-i-validates_rules_from","(association, options = {})",""],["value","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-value","()",""],["value","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-value","()",""],["value_belongs_to_attribute","Annotation","classes/Annotation.html#method-i-value_belongs_to_attribute","()",""],["value_belongs_to_taxon","Annotation","classes/Annotation.html#method-i-value_belongs_to_taxon","()",""],["value_is_a_value","Annotation","classes/Annotation.html#method-i-value_is_a_value","()",""],["values_for_observation","ControlledTerm","classes/ControlledTerm.html#method-i-values_for_observation","(o)",""],["verb_phrase","TaxonChange","classes/TaxonChange.html#method-i-verb_phrase","()",""],["verb_phrase","TaxonMerge","classes/TaxonMerge.html#method-i-verb_phrase","()",""],["verb_phrase","TaxonSplit","classes/TaxonSplit.html#method-i-verb_phrase","()",""],["verb_phrase","TaxonSwap","classes/TaxonSwap.html#method-i-verb_phrase","()",""],["verbatimEventDate","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-verbatimEventDate","()",""],["verbatimLocality","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-verbatimLocality","()",""],["verifiable?","Observation","classes/Observation.html#method-i-verifiable-3F","()",""],["verifiable?","ProjectObservation","classes/ProjectObservation.html#method-i-verifiable-3F","()",""],["verify_recaptcha","GoogleRecaptcha","classes/GoogleRecaptcha.html#method-c-verify_recaptcha","(options)",""],["vernacularName","DarwinCore::VernacularName::InstanceMethods","classes/DarwinCore/VernacularName/InstanceMethods.html#method-i-vernacularName","()",""],["view","DarwinCore::EolMedia::InstanceMethods","classes/DarwinCore/EolMedia/InstanceMethods.html#method-i-view","()",""],["view","DarwinCore::ObservationFields::InstanceMethods","classes/DarwinCore/ObservationFields/InstanceMethods.html#method-i-view","()",""],["view","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-view","()",""],["view","DarwinCore::ProjectObservations::InstanceMethods","classes/DarwinCore/ProjectObservations/InstanceMethods.html#method-i-view","()",""],["view","DarwinCore::Taxon::InstanceMethods","classes/DarwinCore/Taxon/InstanceMethods.html#method-i-view","()",""],["view","DarwinCore::User::InstanceMethods","classes/DarwinCore/User/InstanceMethods.html#method-i-view","()",""],["view_context","Taxon","classes/Taxon.html#method-i-view_context","()",""],["viewed_updates","ObservationsController","classes/ObservationsController.html#method-i-viewed_updates","()",""],["vision","Identification","classes/Identification.html#method-i-vision","()",""],["vision=","Identification","classes/Identification.html#method-i-vision-3D","( val )",""],["votable_callback","Annotation","classes/Annotation.html#method-i-votable_callback","()",""],["vote","QualityMetric","classes/QualityMetric.html#method-c-vote","(user, observation, metric, agree)",""],["vote","QualityMetricsController","classes/QualityMetricsController.html#method-i-vote","()",""],["vote","VotesController","classes/VotesController.html#method-i-vote","()",""],["vote_score","Annotation","classes/Annotation.html#method-i-vote_score","()",""],["voted_in_to_needs_id?","Observation","classes/Observation.html#method-i-voted_in_to_needs_id-3F","()",""],["voted_out_of_needs_id?","Observation","classes/Observation.html#method-i-voted_out_of_needs_id-3F","()",""],["wait_until_elasticsearch_is_running","ElasticModel","classes/ElasticModel.html#method-c-wait_until_elasticsearch_is_running","(options={})",""],["wait_until_index_exists","ElasticModel","classes/ElasticModel.html#method-c-wait_until_index_exists","(index_name, options={})",""],["warn","MushroomObserverImportFlowTask","classes/MushroomObserverImportFlowTask.html#method-i-warn","( url, msg )",""],["was_georeferenced?","Observation","classes/Observation.html#method-i-was_georeferenced-3F","()",""],["wed_bioblitz","StatsController","classes/StatsController.html#method-i-wed_bioblitz","()",""],["widget","ObservationsController","classes/ObservationsController.html#method-i-widget","()",""],["widget","PlacesController","classes/PlacesController.html#method-i-widget","()",""],["wiki_content","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_content","( text )",""],["wiki_css","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_css","( text )",""],["wiki_macros","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_macros","( text )",""],["wiki_nav","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_nav","( text )",""],["wiki_page_attachments","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_page_attachments","( page = @page )",""],["wiki_topnav","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_topnav","()",""],["wiki_user","WikiPagesHelper","classes/WikiPagesHelper.html#method-i-wiki_user","( user )",""],["wikipedia","Shared::WikipediaModule","classes/Shared/WikipediaModule.html#method-i-wikipedia","()",""],["wikipedia","TaxonDescribers::Wikipedia","classes/TaxonDescribers/Wikipedia.html#method-i-wikipedia","()",""],["wikipedia","TaxonDescribers::WikipediaEs","classes/TaxonDescribers/WikipediaEs.html#method-i-wikipedia","()",""],["wikipedia","TaxonDescribers::WikipediaFr","classes/TaxonDescribers/WikipediaFr.html#method-i-wikipedia","()",""],["wikipedia_attribution","Taxon","classes/Taxon.html#method-i-wikipedia_attribution","( options = {} )",""],["wikipedia_image_filename_for_title","WikimediaCommonsPhoto","classes/WikimediaCommonsPhoto.html#method-c-wikipedia_image_filename_for_title","(title)",""],["wikipedia_name","Place","classes/Place.html#method-i-wikipedia_name","()",""],["wikipedia_summary","Taxon","classes/Taxon.html#method-i-wikipedia_summary","( options = {} )",""],["wild?","ProjectObservation","classes/ProjectObservation.html#method-i-wild-3F","()",""],["windowed_pagination_links","ApplicationHelper","classes/ApplicationHelper.html#method-i-windowed_pagination_links","(pagingEnum, options)",""],["winning_annotation_value_for_term","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-winning_annotation_value_for_term","( term, options = {} )",""],["winning_annotations_for_term","DarwinCore::Occurrence::InstanceMethods","classes/DarwinCore/Occurrence/InstanceMethods.html#method-i-winning_annotations_for_term","( term, options = {} )","<p>rubocop:enable Naming/MethodName\n"],["within_count_limit","GuideTaxon","classes/GuideTaxon.html#method-i-within_count_limit","()",""],["within_umbrella_ids","Project","classes/Project.html#method-i-within_umbrella_ids","()",""],["without_callbacks","Taxon","classes/Taxon.html#method-c-without_callbacks","()","<p>Do something without all the callbacks.  This disables all callbacks and validations and doesn&#39;t …\n"],["work_path","ObservationsExportFlowTask","classes/ObservationsExportFlowTask.html#method-i-work_path","(options = {})",""],["write_observation_fields_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-write_observation_fields_data","( observations, csv )",""],["write_occurrence_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-write_occurrence_data","( observations, csv )",""],["write_project_observations_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-write_project_observations_data","( observations, csv )",""],["write_simple_multimedia_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-write_simple_multimedia_data","( observations, csv )",""],["write_user_data","DarwinCore::Archive","classes/DarwinCore/Archive.html#method-i-write_user_data","( observations, csv )",""],["xml","Picasa","classes/Picasa.html#method-i-xml","(options = {})","<p>Returns the raw xml from Picasa. See the Picasa.path method for valid options.\n"],["year","StatsController","classes/StatsController.html#method-i-year","()",""],["you_or_login","UsersHelper","classes/UsersHelper.html#method-i-you_or_login","(user, options = {})",""],["your_year","StatsController","classes/StatsController.html#method-i-your_year","()",""],["README","","files/README_md.html","","<p>iNaturalist\n<p><img src=\"https://github.com/inaturalist/inaturalist/actions/workflows/CI.yml/badge.svg\"> …\n"]]}}